# inspired by https://github.com/nacos-group/nacos-docker
version: "3.8"
services:
  nacos1:
    platform: linux/amd64
    image: nacos/nacos-server:${NACOS_VERSION}
    container_name: nacos1
    networks:
      nacos_net:
        ipv4_address: 172.16.238.10
    volumes:
      - ./tmp/cluster-logs/nacos1:/home/nacos/logs
    ports:
      - "18848:8848"
      - "19848:9848"
    env_file:
      - ./env/nacos-ip.env
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8848/nacos"]
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      mysql:
        condition: service_healthy

  nacos2:
    platform: linux/amd64
    image: nacos/nacos-server:${NACOS_VERSION}
    container_name: nacos2
    networks:
      nacos_net:
        ipv4_address: 172.16.238.11
    volumes:
      - ./tmp/cluster-logs/nacos2:/home/nacos/logs
    ports:
      - "18849:8848"
      - "19849:9848"
    env_file:
      - ./env/nacos-ip.env
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8848/nacos"]
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      mysql:
        condition: service_healthy

  nacos3:
    platform: linux/amd64
    image: nacos/nacos-server:${NACOS_VERSION}
    container_name: nacos3
    networks:
      nacos_net:
        ipv4_address: 172.16.238.12
    volumes:
      - ./tmp/cluster-logs/nacos3:/home/nacos/logs
    ports:
      - "18850:8848"
      - "19850:9848"
    env_file:
      - ./env/nacos-ip.env
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:8848/nacos"]
      interval: 5s
      timeout: 10s
      retries: 10
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    platform: linux/amd64
    container_name: mysql
    build:
      context: .
      dockerfile: ./image/mysql/8/Dockerfile
    image: example/mysql:8
    networks:
      nacos_net:
        ipv4_address: 172.16.238.13
    env_file:
      - ./env/mysql.env
    volumes:
      - ./tmp/mysql:/var/lib/mysql
    ports:
      - "3309:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
  nginx:
    container_name: nginx
    image: nginx
    networks:
      nacos_net:
        ipv4_address: 172.16.238.14
    ports:
      - "18888:18888"
      - "19888:19888"
    volumes:
      - ../config/nginx.conf:/etc/nginx/nginx.conf
  mysql-services:
    platform: linux/amd64
    container_name: mysql-services
    image: mysql
    restart: always
    networks:
      nacos_net:
        ipv4_address: 172.16.238.15
    env_file:
      - ./env/mysql-services.env
    volumes:
      - ./tmp/mysql-services:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
  patientservice:
    build: ./image/patient-service
    platform: linux/amd64
    depends_on:
      nacos1:
        condition: service_healthy
      nacos2:
        condition: service_healthy
      nacos3:
        condition: service_healthy
    ports:
      - "23001:23001"
    networks:
      nacos_net:
        ipv4_address: 172.16.238.16
  doctorservice:
    build: ./image/doctor-service
    platform: linux/amd64
    depends_on:
      nacos1:
        condition: service_healthy
      nacos2:
        condition: service_healthy
      nacos3:
        condition: service_healthy
    ports:
      - "23002:23002"
    networks:
      nacos_net:
        ipv4_address: 172.16.238.17
  bookingservice:
    build: ./image/booking-service
    platform: linux/amd64
    depends_on:
      nacos1:
        condition: service_healthy
      nacos2:
        condition: service_healthy
      nacos3:
        condition: service_healthy
    ports:
      - "23003:23003"
    networks:
      nacos_net:
        ipv4_address: 172.16.238.18
  paymentservice:
    build: ./image/payment-service
    platform: linux/amd64
    depends_on:
      nacos1:
        condition: service_healthy
      nacos2:
        condition: service_healthy
      nacos3:
        condition: service_healthy
    ports:
      - "23004:23004"
    networks:
      nacos_net:
        ipv4_address: 172.16.238.19
  gateway:
    build: ./image/gateway
    platform: linux/amd64
    depends_on:
      nacos1:
        condition: service_healthy
      nacos2:
        condition: service_healthy
      nacos3:
        condition: service_healthy
    ports:
      - "20080:20080"
    networks:
      nacos_net:
        ipv4_address: 172.16.238.20
networks:
  nacos_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
