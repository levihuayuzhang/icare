/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2376.0, "minX": 0.0, "maxY": 72938.0, "series": [{"data": [[0.0, 15938.0], [0.1, 15938.0], [0.2, 15947.0], [0.3, 15947.0], [0.4, 15967.0], [0.5, 15973.0], [0.6, 15973.0], [0.7, 15987.0], [0.8, 15987.0], [0.9, 15990.0], [1.0, 16000.0], [1.1, 16000.0], [1.2, 16024.0], [1.3, 16024.0], [1.4, 16038.0], [1.5, 16039.0], [1.6, 16039.0], [1.7, 16043.0], [1.8, 16043.0], [1.9, 16058.0], [2.0, 16071.0], [2.1, 16071.0], [2.2, 16071.0], [2.3, 16071.0], [2.4, 16076.0], [2.5, 16082.0], [2.6, 16082.0], [2.7, 16082.0], [2.8, 16082.0], [2.9, 16097.0], [3.0, 16102.0], [3.1, 16102.0], [3.2, 16103.0], [3.3, 16103.0], [3.4, 16111.0], [3.5, 16125.0], [3.6, 16125.0], [3.7, 16127.0], [3.8, 16127.0], [3.9, 16139.0], [4.0, 16147.0], [4.1, 16147.0], [4.2, 16157.0], [4.3, 16157.0], [4.4, 16161.0], [4.5, 16162.0], [4.6, 16162.0], [4.7, 16177.0], [4.8, 16177.0], [4.9, 16178.0], [5.0, 16178.0], [5.1, 16185.0], [5.2, 16228.0], [5.3, 16228.0], [5.4, 16235.0], [5.5, 16235.0], [5.6, 16246.0], [5.7, 16266.0], [5.8, 16266.0], [5.9, 16277.0], [6.0, 16277.0], [6.1, 16307.0], [6.2, 16342.0], [6.3, 16342.0], [6.4, 16360.0], [6.5, 16360.0], [6.6, 16360.0], [6.7, 16368.0], [6.8, 16368.0], [6.9, 17442.0], [7.0, 17442.0], [7.1, 17474.0], [7.2, 17496.0], [7.3, 17496.0], [7.4, 17541.0], [7.5, 17541.0], [7.6, 17605.0], [7.7, 17617.0], [7.8, 17617.0], [7.9, 17619.0], [8.0, 17619.0], [8.1, 17621.0], [8.2, 17621.0], [8.3, 17621.0], [8.4, 17633.0], [8.5, 17633.0], [8.6, 17645.0], [8.7, 17648.0], [8.8, 17648.0], [8.9, 17657.0], [9.0, 17657.0], [9.1, 17662.0], [9.2, 17669.0], [9.3, 17669.0], [9.4, 17670.0], [9.5, 17670.0], [9.6, 17680.0], [9.7, 17692.0], [9.8, 17692.0], [9.9, 17719.0], [10.0, 17726.0], [10.1, 17726.0], [10.2, 17731.0], [10.3, 17731.0], [10.4, 17738.0], [10.5, 17757.0], [10.6, 17757.0], [10.7, 17802.0], [10.8, 17802.0], [10.9, 17830.0], [11.0, 17831.0], [11.1, 17831.0], [11.2, 17834.0], [11.3, 17834.0], [11.4, 17840.0], [11.5, 17842.0], [11.6, 17842.0], [11.7, 17859.0], [11.8, 17859.0], [11.9, 17860.0], [12.0, 17863.0], [12.1, 17863.0], [12.2, 17868.0], [12.3, 17868.0], [12.4, 17872.0], [12.5, 17879.0], [12.6, 17879.0], [12.7, 17884.0], [12.8, 17884.0], [12.9, 17886.0], [13.0, 17892.0], [13.1, 17892.0], [13.2, 17906.0], [13.3, 17906.0], [13.4, 17908.0], [13.5, 17910.0], [13.6, 17910.0], [13.7, 17918.0], [13.8, 17918.0], [13.9, 17929.0], [14.0, 17930.0], [14.1, 17930.0], [14.2, 17935.0], [14.3, 17935.0], [14.4, 17964.0], [14.5, 17973.0], [14.6, 17973.0], [14.7, 17984.0], [14.8, 17984.0], [14.9, 17996.0], [15.0, 17996.0], [15.1, 17996.0], [15.2, 17999.0], [15.3, 17999.0], [15.4, 18007.0], [15.5, 18010.0], [15.6, 18010.0], [15.7, 18016.0], [15.8, 18016.0], [15.9, 18021.0], [16.0, 18024.0], [16.1, 18024.0], [16.2, 18028.0], [16.3, 18028.0], [16.4, 18056.0], [16.5, 18057.0], [16.6, 18057.0], [16.7, 18878.0], [16.8, 18878.0], [16.9, 18883.0], [17.0, 18903.0], [17.1, 18903.0], [17.2, 18948.0], [17.3, 18948.0], [17.4, 18959.0], [17.5, 18960.0], [17.6, 18960.0], [17.7, 18981.0], [17.8, 18981.0], [17.9, 18984.0], [18.0, 18990.0], [18.1, 18990.0], [18.2, 18993.0], [18.3, 18993.0], [18.4, 19002.0], [18.5, 19008.0], [18.6, 19008.0], [18.7, 19010.0], [18.8, 19010.0], [18.9, 19014.0], [19.0, 19036.0], [19.1, 19036.0], [19.2, 19039.0], [19.3, 19039.0], [19.4, 19042.0], [19.5, 19042.0], [19.6, 19078.0], [19.7, 19079.0], [19.8, 19079.0], [19.9, 19083.0], [20.0, 19083.0], [20.1, 19087.0], [20.2, 19094.0], [20.3, 19094.0], [20.4, 19099.0], [20.5, 19099.0], [20.6, 19106.0], [20.7, 19107.0], [20.8, 19107.0], [20.9, 19127.0], [21.0, 19127.0], [21.1, 19127.0], [21.2, 19161.0], [21.3, 19161.0], [21.4, 19174.0], [21.5, 19174.0], [21.6, 19181.0], [21.7, 19187.0], [21.8, 19187.0], [21.9, 19196.0], [22.0, 19196.0], [22.1, 19196.0], [22.2, 19198.0], [22.3, 19198.0], [22.4, 19202.0], [22.5, 19202.0], [22.6, 19204.0], [22.7, 19208.0], [22.8, 19208.0], [22.9, 19228.0], [23.0, 19228.0], [23.1, 19245.0], [23.2, 19247.0], [23.3, 19247.0], [23.4, 19249.0], [23.5, 19249.0], [23.6, 19252.0], [23.7, 19256.0], [23.8, 19256.0], [23.9, 19265.0], [24.0, 19265.0], [24.1, 19268.0], [24.2, 19277.0], [24.3, 19277.0], [24.4, 19288.0], [24.5, 19288.0], [24.6, 19292.0], [24.7, 19294.0], [24.8, 19294.0], [24.9, 19305.0], [25.0, 19305.0], [25.1, 19306.0], [25.2, 19327.0], [25.3, 19327.0], [25.4, 19330.0], [25.5, 19330.0], [25.6, 19332.0], [25.7, 19351.0], [25.8, 19351.0], [25.9, 19364.0], [26.0, 19364.0], [26.1, 19374.0], [26.2, 19374.0], [26.3, 19374.0], [26.4, 19376.0], [26.5, 19376.0], [26.6, 19377.0], [26.7, 19378.0], [26.8, 19378.0], [26.9, 19386.0], [27.0, 19386.0], [27.1, 19398.0], [27.2, 19408.0], [27.3, 19408.0], [27.4, 19411.0], [27.5, 19411.0], [27.6, 19412.0], [27.7, 19415.0], [27.8, 19415.0], [27.9, 19415.0], [28.0, 19415.0], [28.1, 19422.0], [28.2, 19441.0], [28.3, 19441.0], [28.4, 19441.0], [28.5, 19441.0], [28.6, 19451.0], [28.7, 19456.0], [28.8, 19456.0], [28.9, 19460.0], [29.0, 19460.0], [29.1, 19466.0], [29.2, 19468.0], [29.3, 19468.0], [29.4, 19472.0], [29.5, 19472.0], [29.6, 19476.0], [29.7, 19479.0], [29.8, 19479.0], [29.9, 19480.0], [30.0, 19480.0], [30.1, 19491.0], [30.2, 19493.0], [30.3, 19493.0], [30.4, 19496.0], [30.5, 19496.0], [30.6, 19505.0], [30.7, 19506.0], [30.8, 19506.0], [30.9, 19507.0], [31.0, 19507.0], [31.1, 19509.0], [31.2, 19513.0], [31.3, 19513.0], [31.4, 19517.0], [31.5, 19517.0], [31.6, 19517.0], [31.7, 19518.0], [31.8, 19518.0], [31.9, 19525.0], [32.0, 19525.0], [32.1, 19531.0], [32.2, 19539.0], [32.3, 19539.0], [32.4, 19544.0], [32.5, 19544.0], [32.6, 19551.0], [32.7, 19565.0], [32.8, 19565.0], [32.9, 19568.0], [33.0, 19568.0], [33.1, 19584.0], [33.2, 19586.0], [33.3, 19586.0], [33.4, 42215.0], [33.5, 42215.0], [33.6, 42228.0], [33.7, 42251.0], [33.8, 42251.0], [33.9, 42251.0], [34.0, 42251.0], [34.1, 42277.0], [34.2, 42285.0], [34.3, 42285.0], [34.4, 42308.0], [34.5, 42308.0], [34.6, 42313.0], [34.7, 42319.0], [34.8, 42319.0], [34.9, 42337.0], [35.0, 42337.0], [35.1, 42338.0], [35.2, 42341.0], [35.3, 42341.0], [35.4, 42394.0], [35.5, 42394.0], [35.6, 42408.0], [35.7, 42410.0], [35.8, 42410.0], [35.9, 42418.0], [36.0, 42418.0], [36.1, 42437.0], [36.2, 42477.0], [36.3, 42477.0], [36.4, 42485.0], [36.5, 42485.0], [36.6, 42498.0], [36.7, 42504.0], [36.8, 42504.0], [36.9, 42514.0], [37.0, 42514.0], [37.1, 42522.0], [37.2, 42524.0], [37.3, 42524.0], [37.4, 42557.0], [37.5, 42582.0], [37.6, 42582.0], [37.7, 42587.0], [37.8, 42587.0], [37.9, 42596.0], [38.0, 42601.0], [38.1, 42601.0], [38.2, 42606.0], [38.3, 42606.0], [38.4, 42637.0], [38.5, 42672.0], [38.6, 42672.0], [38.7, 42692.0], [38.8, 42692.0], [38.9, 42705.0], [39.0, 42714.0], [39.1, 42714.0], [39.2, 42741.0], [39.3, 42741.0], [39.4, 42744.0], [39.5, 42752.0], [39.6, 42752.0], [39.7, 42765.0], [39.8, 42765.0], [39.9, 42831.0], [40.0, 42844.0], [40.1, 42844.0], [40.2, 42902.0], [40.3, 42902.0], [40.4, 42921.0], [40.5, 43002.0], [40.6, 43002.0], [40.7, 43062.0], [40.8, 43062.0], [40.9, 43084.0], [41.0, 43289.0], [41.1, 43289.0], [41.2, 43300.0], [41.3, 43300.0], [41.4, 43315.0], [41.5, 43397.0], [41.6, 43397.0], [41.7, 50619.0], [41.8, 50619.0], [41.9, 50622.0], [42.0, 50634.0], [42.1, 50634.0], [42.2, 50648.0], [42.3, 50648.0], [42.4, 50650.0], [42.5, 50656.0], [42.6, 50656.0], [42.7, 50658.0], [42.8, 50658.0], [42.9, 50663.0], [43.0, 50677.0], [43.1, 50677.0], [43.2, 50680.0], [43.3, 50680.0], [43.4, 50680.0], [43.5, 50681.0], [43.6, 50681.0], [43.7, 50686.0], [43.8, 50686.0], [43.9, 50687.0], [44.0, 50689.0], [44.1, 50689.0], [44.2, 50690.0], [44.3, 50690.0], [44.4, 50695.0], [44.5, 50696.0], [44.6, 50696.0], [44.7, 50708.0], [44.8, 50708.0], [44.9, 50713.0], [45.0, 50728.0], [45.1, 50728.0], [45.2, 50728.0], [45.3, 50728.0], [45.4, 50736.0], [45.5, 50745.0], [45.6, 50745.0], [45.7, 50747.0], [45.8, 50747.0], [45.9, 50748.0], [46.0, 50758.0], [46.1, 50758.0], [46.2, 50768.0], [46.3, 50768.0], [46.4, 50771.0], [46.5, 50773.0], [46.6, 50773.0], [46.7, 50773.0], [46.8, 50773.0], [46.9, 50774.0], [47.0, 50777.0], [47.1, 50777.0], [47.2, 50781.0], [47.3, 50781.0], [47.4, 50790.0], [47.5, 50791.0], [47.6, 50791.0], [47.7, 50794.0], [47.8, 50794.0], [47.9, 50802.0], [48.0, 50815.0], [48.1, 50815.0], [48.2, 50844.0], [48.3, 50844.0], [48.4, 50850.0], [48.5, 50853.0], [48.6, 50853.0], [48.7, 50857.0], [48.8, 50857.0], [48.9, 50857.0], [49.0, 50858.0], [49.1, 50858.0], [49.2, 50873.0], [49.3, 50873.0], [49.4, 50874.0], [49.5, 50875.0], [49.6, 50875.0], [49.7, 50884.0], [49.8, 50884.0], [49.9, 50885.0], [50.0, 50890.0], [50.1, 50890.0], [50.2, 50891.0], [50.3, 50891.0], [50.4, 50892.0], [50.5, 50892.0], [50.6, 50892.0], [50.7, 50912.0], [50.8, 50912.0], [50.9, 50919.0], [51.0, 50919.0], [51.1, 50919.0], [51.2, 50925.0], [51.3, 50925.0], [51.4, 50928.0], [51.5, 50946.0], [51.6, 50946.0], [51.7, 50952.0], [51.8, 50952.0], [51.9, 50954.0], [52.0, 50961.0], [52.1, 50961.0], [52.2, 50964.0], [52.3, 50964.0], [52.4, 50964.0], [52.5, 50966.0], [52.6, 50966.0], [52.7, 50975.0], [52.8, 50975.0], [52.9, 50984.0], [53.0, 50987.0], [53.1, 50987.0], [53.2, 50995.0], [53.3, 50995.0], [53.4, 51016.0], [53.5, 51023.0], [53.6, 51023.0], [53.7, 51028.0], [53.8, 51028.0], [53.9, 51028.0], [54.0, 51039.0], [54.1, 51039.0], [54.2, 51041.0], [54.3, 51041.0], [54.4, 51048.0], [54.5, 51052.0], [54.6, 51052.0], [54.7, 51055.0], [54.8, 51055.0], [54.9, 51055.0], [55.0, 51067.0], [55.1, 51067.0], [55.2, 51067.0], [55.3, 51067.0], [55.4, 51067.0], [55.5, 51068.0], [55.6, 51068.0], [55.7, 51077.0], [55.8, 51077.0], [55.9, 51080.0], [56.0, 51083.0], [56.1, 51083.0], [56.2, 51089.0], [56.3, 51089.0], [56.4, 51090.0], [56.5, 51096.0], [56.6, 51096.0], [56.7, 51104.0], [56.8, 51104.0], [56.9, 51115.0], [57.0, 51116.0], [57.1, 51116.0], [57.2, 51117.0], [57.3, 51117.0], [57.4, 51117.0], [57.5, 51124.0], [57.6, 51124.0], [57.7, 51126.0], [57.8, 51126.0], [57.9, 51132.0], [58.0, 51135.0], [58.1, 51135.0], [58.2, 51137.0], [58.3, 51137.0], [58.4, 51137.0], [58.5, 51163.0], [58.6, 51163.0], [58.7, 51177.0], [58.8, 51177.0], [58.9, 51186.0], [59.0, 51191.0], [59.1, 51191.0], [59.2, 51196.0], [59.3, 51196.0], [59.4, 51197.0], [59.5, 51202.0], [59.6, 51202.0], [59.7, 51209.0], [59.8, 51209.0], [59.9, 51210.0], [60.0, 51219.0], [60.1, 51219.0], [60.2, 51220.0], [60.3, 51220.0], [60.4, 51221.0], [60.5, 51223.0], [60.6, 51223.0], [60.7, 51235.0], [60.8, 51235.0], [60.9, 51246.0], [61.0, 51252.0], [61.1, 51252.0], [61.2, 51272.0], [61.3, 51272.0], [61.4, 51287.0], [61.5, 51289.0], [61.6, 51289.0], [61.7, 51316.0], [61.8, 51316.0], [61.9, 51343.0], [62.0, 51365.0], [62.1, 51365.0], [62.2, 51369.0], [62.3, 51369.0], [62.4, 51369.0], [62.5, 51370.0], [62.6, 51370.0], [62.7, 51378.0], [62.8, 51378.0], [62.9, 51381.0], [63.0, 51390.0], [63.1, 51390.0], [63.2, 51405.0], [63.3, 51405.0], [63.4, 51408.0], [63.5, 51432.0], [63.6, 51432.0], [63.7, 51457.0], [63.8, 51457.0], [63.9, 51458.0], [64.0, 51471.0], [64.1, 51471.0], [64.2, 51476.0], [64.3, 51476.0], [64.4, 51498.0], [64.5, 51511.0], [64.6, 51511.0], [64.7, 51518.0], [64.8, 51518.0], [64.9, 51539.0], [65.0, 51559.0], [65.1, 51559.0], [65.2, 51568.0], [65.3, 51568.0], [65.4, 51614.0], [65.5, 51619.0], [65.6, 51619.0], [65.7, 51662.0], [65.8, 51662.0], [65.9, 51679.0], [66.0, 51716.0], [66.1, 51716.0], [66.2, 51752.0], [66.3, 51752.0], [66.4, 51763.0], [66.5, 51794.0], [66.6, 51794.0], [66.7, 70075.0], [66.8, 70075.0], [66.9, 70120.0], [67.0, 70121.0], [67.1, 70121.0], [67.2, 70143.0], [67.3, 70143.0], [67.4, 70145.0], [67.5, 70167.0], [67.6, 70167.0], [67.7, 70173.0], [67.8, 70173.0], [67.9, 70176.0], [68.0, 70178.0], [68.1, 70178.0], [68.2, 70221.0], [68.3, 70221.0], [68.4, 70235.0], [68.5, 70248.0], [68.6, 70248.0], [68.7, 70256.0], [68.8, 70256.0], [68.9, 70257.0], [69.0, 70271.0], [69.1, 70271.0], [69.2, 70284.0], [69.3, 70284.0], [69.4, 70306.0], [69.5, 70309.0], [69.6, 70309.0], [69.7, 70321.0], [69.8, 70321.0], [69.9, 70402.0], [70.0, 70410.0], [70.1, 70410.0], [70.2, 70440.0], [70.3, 70440.0], [70.4, 70451.0], [70.5, 70463.0], [70.6, 70463.0], [70.7, 70490.0], [70.8, 70490.0], [70.9, 70520.0], [71.0, 70520.0], [71.1, 70520.0], [71.2, 70532.0], [71.3, 70532.0], [71.4, 70553.0], [71.5, 70554.0], [71.6, 70554.0], [71.7, 70639.0], [71.8, 70639.0], [71.9, 70645.0], [72.0, 70647.0], [72.1, 70647.0], [72.2, 70647.0], [72.3, 70647.0], [72.4, 70658.0], [72.5, 70672.0], [72.6, 70672.0], [72.7, 70703.0], [72.8, 70703.0], [72.9, 70718.0], [73.0, 70727.0], [73.1, 70727.0], [73.2, 70751.0], [73.3, 70751.0], [73.4, 70758.0], [73.5, 70784.0], [73.6, 70784.0], [73.7, 70822.0], [73.8, 70822.0], [73.9, 70838.0], [74.0, 70863.0], [74.1, 70863.0], [74.2, 70863.0], [74.3, 70863.0], [74.4, 70931.0], [74.5, 70984.0], [74.6, 70984.0], [74.7, 71054.0], [74.8, 71054.0], [74.9, 71142.0], [75.0, 71161.0], [75.1, 71161.0], [75.2, 71171.0], [75.3, 71171.0], [75.4, 71182.0], [75.5, 71184.0], [75.6, 71184.0], [75.7, 71205.0], [75.8, 71205.0], [75.9, 71213.0], [76.0, 71213.0], [76.1, 71253.0], [76.2, 71263.0], [76.3, 71263.0], [76.4, 71267.0], [76.5, 71267.0], [76.6, 71283.0], [76.7, 71307.0], [76.8, 71307.0], [76.9, 71309.0], [77.0, 71309.0], [77.1, 71326.0], [77.2, 71335.0], [77.3, 71335.0], [77.4, 71355.0], [77.5, 71355.0], [77.6, 71377.0], [77.7, 71405.0], [77.8, 71405.0], [77.9, 71446.0], [78.0, 71446.0], [78.1, 71457.0], [78.2, 71467.0], [78.3, 71467.0], [78.4, 71480.0], [78.5, 71480.0], [78.6, 71487.0], [78.7, 71530.0], [78.8, 71530.0], [78.9, 71531.0], [79.0, 71531.0], [79.1, 71541.0], [79.2, 71548.0], [79.3, 71548.0], [79.4, 71550.0], [79.5, 71550.0], [79.6, 71560.0], [79.7, 71585.0], [79.8, 71585.0], [79.9, 71592.0], [80.0, 71592.0], [80.1, 71598.0], [80.2, 71630.0], [80.3, 71630.0], [80.4, 71651.0], [80.5, 71651.0], [80.6, 71658.0], [80.7, 71677.0], [80.8, 71677.0], [80.9, 71681.0], [81.0, 71681.0], [81.1, 71693.0], [81.2, 71706.0], [81.3, 71706.0], [81.4, 71712.0], [81.5, 71712.0], [81.6, 71716.0], [81.7, 71731.0], [81.8, 71731.0], [81.9, 71734.0], [82.0, 71734.0], [82.1, 71760.0], [82.2, 71766.0], [82.3, 71766.0], [82.4, 71768.0], [82.5, 71768.0], [82.6, 71769.0], [82.7, 71774.0], [82.8, 71774.0], [82.9, 71782.0], [83.0, 71782.0], [83.1, 71784.0], [83.2, 71791.0], [83.3, 71791.0], [83.4, 71803.0], [83.5, 71803.0], [83.6, 71814.0], [83.7, 71828.0], [83.8, 71828.0], [83.9, 71848.0], [84.0, 71848.0], [84.1, 71890.0], [84.2, 71915.0], [84.3, 71915.0], [84.4, 71931.0], [84.5, 71931.0], [84.6, 71932.0], [84.7, 71946.0], [84.8, 71946.0], [84.9, 71968.0], [85.0, 71968.0], [85.1, 71968.0], [85.2, 71973.0], [85.3, 71973.0], [85.4, 71984.0], [85.5, 71984.0], [85.6, 71988.0], [85.7, 71989.0], [85.8, 71989.0], [85.9, 71993.0], [86.0, 71993.0], [86.1, 71993.0], [86.2, 72002.0], [86.3, 72002.0], [86.4, 72012.0], [86.5, 72012.0], [86.6, 72017.0], [86.7, 72018.0], [86.8, 72018.0], [86.9, 72019.0], [87.0, 72019.0], [87.1, 72022.0], [87.2, 72035.0], [87.3, 72035.0], [87.4, 72038.0], [87.5, 72038.0], [87.6, 72040.0], [87.7, 72048.0], [87.8, 72048.0], [87.9, 72052.0], [88.0, 72052.0], [88.1, 72071.0], [88.2, 72075.0], [88.3, 72075.0], [88.4, 72089.0], [88.5, 72089.0], [88.6, 72100.0], [88.7, 72106.0], [88.8, 72106.0], [88.9, 72123.0], [89.0, 72123.0], [89.1, 72128.0], [89.2, 72129.0], [89.3, 72129.0], [89.4, 72133.0], [89.5, 72133.0], [89.6, 72133.0], [89.7, 72134.0], [89.8, 72134.0], [89.9, 72143.0], [90.0, 72143.0], [90.1, 72162.0], [90.2, 72176.0], [90.3, 72176.0], [90.4, 72177.0], [90.5, 72177.0], [90.6, 72182.0], [90.7, 72191.0], [90.8, 72191.0], [90.9, 72201.0], [91.0, 72201.0], [91.1, 72215.0], [91.2, 72224.0], [91.3, 72224.0], [91.4, 72234.0], [91.5, 72234.0], [91.6, 72262.0], [91.7, 72287.0], [91.8, 72287.0], [91.9, 72287.0], [92.0, 72287.0], [92.1, 72299.0], [92.2, 72311.0], [92.3, 72311.0], [92.4, 72323.0], [92.5, 72323.0], [92.6, 72336.0], [92.7, 72337.0], [92.8, 72337.0], [92.9, 72344.0], [93.0, 72344.0], [93.1, 72367.0], [93.2, 72367.0], [93.3, 72367.0], [93.4, 72388.0], [93.5, 72388.0], [93.6, 72394.0], [93.7, 72402.0], [93.8, 72402.0], [93.9, 72407.0], [94.0, 72407.0], [94.1, 72408.0], [94.2, 72411.0], [94.3, 72411.0], [94.4, 72444.0], [94.5, 72444.0], [94.6, 72445.0], [94.7, 72467.0], [94.8, 72467.0], [94.9, 72472.0], [95.0, 72472.0], [95.1, 72492.0], [95.2, 72493.0], [95.3, 72493.0], [95.4, 72503.0], [95.5, 72503.0], [95.6, 72504.0], [95.7, 72507.0], [95.8, 72507.0], [95.9, 72508.0], [96.0, 72508.0], [96.1, 72531.0], [96.2, 72532.0], [96.3, 72532.0], [96.4, 72568.0], [96.5, 72568.0], [96.6, 72605.0], [96.7, 72617.0], [96.8, 72617.0], [96.9, 72628.0], [97.0, 72628.0], [97.1, 72656.0], [97.2, 72659.0], [97.3, 72659.0], [97.4, 72671.0], [97.5, 72671.0], [97.6, 72689.0], [97.7, 72689.0], [97.8, 72689.0], [97.9, 72701.0], [98.0, 72701.0], [98.1, 72713.0], [98.2, 72720.0], [98.3, 72720.0], [98.4, 72736.0], [98.5, 72736.0], [98.6, 72736.0], [98.7, 72741.0], [98.8, 72741.0], [98.9, 72743.0], [99.0, 72743.0], [99.1, 72793.0], [99.2, 72802.0], [99.3, 72802.0], [99.4, 72818.0], [99.5, 72818.0], [99.6, 72862.0], [99.7, 72884.0], [99.8, 72884.0], [99.9, 72938.0], [100.0, 72938.0]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[0.0, 2376.0], [0.1, 2376.0], [0.2, 2430.0], [0.3, 2430.0], [0.4, 2504.0], [0.5, 2527.0], [0.6, 2527.0], [0.7, 2534.0], [0.8, 2534.0], [0.9, 2539.0], [1.0, 2540.0], [1.1, 2540.0], [1.2, 2550.0], [1.3, 2550.0], [1.4, 2556.0], [1.5, 2574.0], [1.6, 2574.0], [1.7, 2581.0], [1.8, 2581.0], [1.9, 2608.0], [2.0, 2610.0], [2.1, 2610.0], [2.2, 2621.0], [2.3, 2621.0], [2.4, 2622.0], [2.5, 2633.0], [2.6, 2633.0], [2.7, 2634.0], [2.8, 2634.0], [2.9, 2634.0], [3.0, 2658.0], [3.1, 2658.0], [3.2, 2676.0], [3.3, 2676.0], [3.4, 2692.0], [3.5, 2698.0], [3.6, 2698.0], [3.7, 2734.0], [3.8, 2734.0], [3.9, 2734.0], [4.0, 2735.0], [4.1, 2735.0], [4.2, 2746.0], [4.3, 2746.0], [4.4, 2747.0], [4.5, 2750.0], [4.6, 2750.0], [4.7, 2750.0], [4.8, 2750.0], [4.9, 2760.0], [5.0, 2762.0], [5.1, 2762.0], [5.2, 3569.0], [5.3, 3569.0], [5.4, 3571.0], [5.5, 3571.0], [5.6, 3596.0], [5.7, 3674.0], [5.8, 3674.0], [5.9, 3730.0], [6.0, 3730.0], [6.1, 3730.0], [6.2, 3794.0], [6.3, 3794.0], [6.4, 3836.0], [6.5, 3836.0], [6.6, 3846.0], [6.7, 3861.0], [6.8, 3861.0], [6.9, 3872.0], [7.0, 3872.0], [7.1, 3877.0], [7.2, 3929.0], [7.3, 3929.0], [7.4, 3984.0], [7.5, 3984.0], [7.6, 3998.0], [7.7, 4021.0], [7.8, 4021.0], [7.9, 4039.0], [8.0, 4039.0], [8.1, 4057.0], [8.2, 4071.0], [8.3, 4071.0], [8.4, 4083.0], [8.5, 4083.0], [8.6, 4146.0], [8.7, 4160.0], [8.8, 4160.0], [8.9, 4173.0], [9.0, 4263.0], [9.1, 4263.0], [9.2, 4367.0], [9.3, 4367.0], [9.4, 4387.0], [9.5, 4394.0], [9.6, 4394.0], [9.7, 4402.0], [9.8, 4402.0], [9.9, 4411.0], [10.0, 4412.0], [10.1, 4412.0], [10.2, 4455.0], [10.3, 4455.0], [10.4, 4473.0], [10.5, 4482.0], [10.6, 4482.0], [10.7, 4508.0], [10.8, 4508.0], [10.9, 4512.0], [11.0, 4522.0], [11.1, 4522.0], [11.2, 4534.0], [11.3, 4534.0], [11.4, 4535.0], [11.5, 4563.0], [11.6, 4563.0], [11.7, 4575.0], [11.8, 4575.0], [11.9, 4589.0], [12.0, 4601.0], [12.1, 4601.0], [12.2, 4602.0], [12.3, 4602.0], [12.4, 4639.0], [12.5, 4894.0], [12.6, 4894.0], [12.7, 4910.0], [12.8, 4910.0], [12.9, 4913.0], [13.0, 4933.0], [13.1, 4933.0], [13.2, 4933.0], [13.3, 4933.0], [13.4, 4934.0], [13.5, 4939.0], [13.6, 4939.0], [13.7, 4939.0], [13.8, 4939.0], [13.9, 5007.0], [14.0, 5018.0], [14.1, 5018.0], [14.2, 5044.0], [14.3, 5044.0], [14.4, 5070.0], [14.5, 5093.0], [14.6, 5093.0], [14.7, 5122.0], [14.8, 5122.0], [14.9, 5230.0], [15.0, 5252.0], [15.1, 5252.0], [15.2, 5273.0], [15.3, 5273.0], [15.4, 5275.0], [15.5, 5281.0], [15.6, 5281.0], [15.7, 5330.0], [15.8, 5330.0], [15.9, 5367.0], [16.0, 5412.0], [16.1, 5412.0], [16.2, 5542.0], [16.3, 5542.0], [16.4, 5829.0], [16.5, 5846.0], [16.6, 5846.0], [16.7, 5875.0], [16.8, 5875.0], [16.9, 5887.0], [17.0, 5986.0], [17.1, 5986.0], [17.2, 6002.0], [17.3, 6002.0], [17.4, 6011.0], [17.5, 6019.0], [17.6, 6019.0], [17.7, 6023.0], [17.8, 6023.0], [17.9, 6038.0], [18.0, 6040.0], [18.1, 6040.0], [18.2, 6043.0], [18.3, 6043.0], [18.4, 6045.0], [18.5, 6053.0], [18.6, 6053.0], [18.7, 6068.0], [18.8, 6068.0], [18.9, 6085.0], [19.0, 6092.0], [19.1, 6092.0], [19.2, 6122.0], [19.3, 6122.0], [19.4, 6131.0], [19.5, 6131.0], [19.6, 6149.0], [19.7, 6151.0], [19.8, 6151.0], [19.9, 6208.0], [20.0, 6208.0], [20.1, 6210.0], [20.2, 6210.0], [20.3, 6210.0], [20.4, 6222.0], [20.5, 6222.0], [20.6, 6225.0], [20.7, 6232.0], [20.8, 6232.0], [20.9, 6232.0], [21.0, 6232.0], [21.1, 6237.0], [21.2, 6239.0], [21.3, 6239.0], [21.4, 6239.0], [21.5, 6239.0], [21.6, 6241.0], [21.7, 6244.0], [21.8, 6244.0], [21.9, 6257.0], [22.0, 6257.0], [22.1, 6261.0], [22.2, 6262.0], [22.3, 6262.0], [22.4, 6262.0], [22.5, 6262.0], [22.6, 6270.0], [22.7, 6273.0], [22.8, 6273.0], [22.9, 6275.0], [23.0, 6275.0], [23.1, 6276.0], [23.2, 6279.0], [23.3, 6279.0], [23.4, 6281.0], [23.5, 6281.0], [23.6, 6289.0], [23.7, 6299.0], [23.8, 6299.0], [23.9, 6311.0], [24.0, 6311.0], [24.1, 6315.0], [24.2, 6318.0], [24.3, 6318.0], [24.4, 6319.0], [24.5, 6319.0], [24.6, 6320.0], [24.7, 6320.0], [24.8, 6320.0], [24.9, 6321.0], [25.0, 6321.0], [25.1, 6324.0], [25.2, 6325.0], [25.3, 6325.0], [25.4, 6335.0], [25.5, 6335.0], [25.6, 6354.0], [25.7, 6357.0], [25.8, 6357.0], [25.9, 6358.0], [26.0, 6358.0], [26.1, 6364.0], [26.2, 6364.0], [26.3, 6364.0], [26.4, 6371.0], [26.5, 6371.0], [26.6, 6372.0], [26.7, 6373.0], [26.8, 6373.0], [26.9, 6373.0], [27.0, 6373.0], [27.1, 6374.0], [27.2, 6374.0], [27.3, 6374.0], [27.4, 6375.0], [27.5, 6375.0], [27.6, 6376.0], [27.7, 6376.0], [27.8, 6376.0], [27.9, 6377.0], [28.0, 6377.0], [28.1, 6378.0], [28.2, 6378.0], [28.3, 6378.0], [28.4, 6403.0], [28.5, 6403.0], [28.6, 6434.0], [28.7, 6444.0], [28.8, 6444.0], [28.9, 6451.0], [29.0, 6451.0], [29.1, 6451.0], [29.2, 6473.0], [29.3, 6473.0], [29.4, 6477.0], [29.5, 6477.0], [29.6, 6495.0], [29.7, 6497.0], [29.8, 6497.0], [29.9, 6497.0], [30.0, 6497.0], [30.1, 6506.0], [30.2, 6515.0], [30.3, 6515.0], [30.4, 6519.0], [30.5, 6519.0], [30.6, 6519.0], [30.7, 6520.0], [30.8, 6520.0], [30.9, 6521.0], [31.0, 6521.0], [31.1, 6524.0], [31.2, 6528.0], [31.3, 6528.0], [31.4, 6531.0], [31.5, 6531.0], [31.6, 6532.0], [31.7, 6532.0], [31.8, 6532.0], [31.9, 6533.0], [32.0, 6533.0], [32.1, 6546.0], [32.2, 6551.0], [32.3, 6551.0], [32.4, 6557.0], [32.5, 6557.0], [32.6, 6558.0], [32.7, 6558.0], [32.8, 6558.0], [32.9, 6559.0], [33.0, 6559.0], [33.1, 6562.0], [33.2, 6567.0], [33.3, 6567.0], [33.4, 6571.0], [33.5, 6571.0], [33.6, 6573.0], [33.7, 6573.0], [33.8, 6573.0], [33.9, 6577.0], [34.0, 6577.0], [34.1, 6584.0], [34.2, 6584.0], [34.3, 6584.0], [34.4, 6592.0], [34.5, 6592.0], [34.6, 6596.0], [34.7, 6597.0], [34.8, 6597.0], [34.9, 6600.0], [35.0, 6600.0], [35.1, 6602.0], [35.2, 6603.0], [35.3, 6603.0], [35.4, 6609.0], [35.5, 6609.0], [35.6, 6623.0], [35.7, 6626.0], [35.8, 6626.0], [35.9, 6626.0], [36.0, 6626.0], [36.1, 6628.0], [36.2, 6628.0], [36.3, 6628.0], [36.4, 6629.0], [36.5, 6629.0], [36.6, 6630.0], [36.7, 6630.0], [36.8, 6630.0], [36.9, 6632.0], [37.0, 6632.0], [37.1, 6635.0], [37.2, 6645.0], [37.3, 6645.0], [37.4, 6645.0], [37.5, 6645.0], [37.6, 6645.0], [37.7, 6650.0], [37.8, 6650.0], [37.9, 6655.0], [38.0, 6655.0], [38.1, 6656.0], [38.2, 6662.0], [38.3, 6662.0], [38.4, 6665.0], [38.5, 6665.0], [38.6, 6665.0], [38.7, 6667.0], [38.8, 6667.0], [38.9, 6667.0], [39.0, 6667.0], [39.1, 6669.0], [39.2, 6671.0], [39.3, 6671.0], [39.4, 6672.0], [39.5, 6683.0], [39.6, 6683.0], [39.7, 6684.0], [39.8, 6684.0], [39.9, 6690.0], [40.0, 6694.0], [40.1, 6694.0], [40.2, 6697.0], [40.3, 6697.0], [40.4, 6702.0], [40.5, 6702.0], [40.6, 6702.0], [40.7, 6706.0], [40.8, 6706.0], [40.9, 6707.0], [41.0, 6709.0], [41.1, 6709.0], [41.2, 6713.0], [41.3, 6713.0], [41.4, 6715.0], [41.5, 6729.0], [41.6, 6729.0], [41.7, 6732.0], [41.8, 6732.0], [41.9, 6734.0], [42.0, 6735.0], [42.1, 6735.0], [42.2, 6739.0], [42.3, 6739.0], [42.4, 6742.0], [42.5, 6743.0], [42.6, 6743.0], [42.7, 6762.0], [42.8, 6762.0], [42.9, 6775.0], [43.0, 6780.0], [43.1, 6780.0], [43.2, 6785.0], [43.3, 6785.0], [43.4, 6786.0], [43.5, 6787.0], [43.6, 6787.0], [43.7, 6788.0], [43.8, 6788.0], [43.9, 6793.0], [44.0, 6796.0], [44.1, 6796.0], [44.2, 6799.0], [44.3, 6799.0], [44.4, 6799.0], [44.5, 6811.0], [44.6, 6811.0], [44.7, 6819.0], [44.8, 6819.0], [44.9, 6824.0], [45.0, 6827.0], [45.1, 6827.0], [45.2, 6833.0], [45.3, 6833.0], [45.4, 6834.0], [45.5, 6836.0], [45.6, 6836.0], [45.7, 6837.0], [45.8, 6837.0], [45.9, 6838.0], [46.0, 6841.0], [46.1, 6841.0], [46.2, 6841.0], [46.3, 6841.0], [46.4, 6841.0], [46.5, 6842.0], [46.6, 6842.0], [46.7, 6843.0], [46.8, 6843.0], [46.9, 6845.0], [47.0, 6846.0], [47.1, 6846.0], [47.2, 6847.0], [47.3, 6847.0], [47.4, 6852.0], [47.5, 6857.0], [47.6, 6857.0], [47.7, 6858.0], [47.8, 6858.0], [47.9, 6860.0], [48.0, 6860.0], [48.1, 6860.0], [48.2, 6862.0], [48.3, 6862.0], [48.4, 6863.0], [48.5, 6864.0], [48.6, 6864.0], [48.7, 6865.0], [48.8, 6865.0], [48.9, 6865.0], [49.0, 6865.0], [49.1, 6865.0], [49.2, 6869.0], [49.3, 6869.0], [49.4, 6870.0], [49.5, 6870.0], [49.6, 6870.0], [49.7, 6872.0], [49.8, 6872.0], [49.9, 6872.0], [50.0, 6874.0], [50.1, 6874.0], [50.2, 6874.0], [50.3, 6874.0], [50.4, 6876.0], [50.5, 6884.0], [50.6, 6884.0], [50.7, 6890.0], [50.8, 6890.0], [50.9, 6892.0], [51.0, 6893.0], [51.1, 6893.0], [51.2, 6897.0], [51.3, 6897.0], [51.4, 6898.0], [51.5, 6899.0], [51.6, 6899.0], [51.7, 6901.0], [51.8, 6901.0], [51.9, 6908.0], [52.0, 6908.0], [52.1, 6908.0], [52.2, 6910.0], [52.3, 6910.0], [52.4, 6912.0], [52.5, 6914.0], [52.6, 6914.0], [52.7, 6915.0], [52.8, 6915.0], [52.9, 6917.0], [53.0, 6920.0], [53.1, 6920.0], [53.2, 6923.0], [53.3, 6923.0], [53.4, 6929.0], [53.5, 6931.0], [53.6, 6931.0], [53.7, 6932.0], [53.8, 6932.0], [53.9, 6937.0], [54.0, 6938.0], [54.1, 6938.0], [54.2, 6938.0], [54.3, 6938.0], [54.4, 6942.0], [54.5, 6945.0], [54.6, 6945.0], [54.7, 6946.0], [54.8, 6946.0], [54.9, 6948.0], [55.0, 6951.0], [55.1, 6951.0], [55.2, 6954.0], [55.3, 6954.0], [55.4, 6956.0], [55.5, 6956.0], [55.6, 6956.0], [55.7, 6957.0], [55.8, 6957.0], [55.9, 6958.0], [56.0, 6960.0], [56.1, 6960.0], [56.2, 6962.0], [56.3, 6962.0], [56.4, 6964.0], [56.5, 6969.0], [56.6, 6969.0], [56.7, 6970.0], [56.8, 6970.0], [56.9, 6971.0], [57.0, 6971.0], [57.1, 6971.0], [57.2, 6971.0], [57.3, 6971.0], [57.4, 6972.0], [57.5, 6973.0], [57.6, 6973.0], [57.7, 6974.0], [57.8, 6974.0], [57.9, 6975.0], [58.0, 6977.0], [58.1, 6977.0], [58.2, 6980.0], [58.3, 6980.0], [58.4, 6982.0], [58.5, 6982.0], [58.6, 6982.0], [58.7, 6984.0], [58.8, 6984.0], [58.9, 6984.0], [59.0, 6985.0], [59.1, 6985.0], [59.2, 6986.0], [59.3, 6986.0], [59.4, 6987.0], [59.5, 6989.0], [59.6, 6989.0], [59.7, 6992.0], [59.8, 6992.0], [59.9, 6993.0], [60.0, 6995.0], [60.1, 6995.0], [60.2, 6997.0], [60.3, 6997.0], [60.4, 6999.0], [60.5, 7007.0], [60.6, 7007.0], [60.7, 7009.0], [60.8, 7009.0], [60.9, 7011.0], [61.0, 7015.0], [61.1, 7015.0], [61.2, 7021.0], [61.3, 7021.0], [61.4, 7027.0], [61.5, 7031.0], [61.6, 7031.0], [61.7, 7033.0], [61.8, 7033.0], [61.9, 7041.0], [62.0, 7060.0], [62.1, 7060.0], [62.2, 7076.0], [62.3, 7076.0], [62.4, 7076.0], [62.5, 7078.0], [62.6, 7078.0], [62.7, 7087.0], [62.8, 7087.0], [62.9, 7088.0], [63.0, 7088.0], [63.1, 7088.0], [63.2, 7092.0], [63.3, 7092.0], [63.4, 7103.0], [63.5, 7112.0], [63.6, 7112.0], [63.7, 7129.0], [63.8, 7129.0], [63.9, 7139.0], [64.0, 7139.0], [64.1, 7139.0], [64.2, 7140.0], [64.3, 7140.0], [64.4, 7141.0], [64.5, 7141.0], [64.6, 7141.0], [64.7, 7142.0], [64.8, 7142.0], [64.9, 7152.0], [65.0, 7157.0], [65.1, 7157.0], [65.2, 7163.0], [65.3, 7163.0], [65.4, 7164.0], [65.5, 7171.0], [65.6, 7171.0], [65.7, 7173.0], [65.8, 7173.0], [65.9, 7184.0], [66.0, 7192.0], [66.1, 7192.0], [66.2, 7194.0], [66.3, 7194.0], [66.4, 7196.0], [66.5, 7198.0], [66.6, 7198.0], [66.7, 7201.0], [66.8, 7201.0], [66.9, 7213.0], [67.0, 7213.0], [67.1, 7213.0], [67.2, 7215.0], [67.3, 7215.0], [67.4, 7221.0], [67.5, 7222.0], [67.6, 7222.0], [67.7, 7226.0], [67.8, 7226.0], [67.9, 7228.0], [68.0, 7231.0], [68.1, 7231.0], [68.2, 7233.0], [68.3, 7233.0], [68.4, 7238.0], [68.5, 7239.0], [68.6, 7239.0], [68.7, 7245.0], [68.8, 7245.0], [68.9, 7247.0], [69.0, 7273.0], [69.1, 7273.0], [69.2, 7274.0], [69.3, 7274.0], [69.4, 7284.0], [69.5, 7285.0], [69.6, 7285.0], [69.7, 7296.0], [69.8, 7296.0], [69.9, 7301.0], [70.0, 7302.0], [70.1, 7302.0], [70.2, 7304.0], [70.3, 7304.0], [70.4, 7316.0], [70.5, 7330.0], [70.6, 7330.0], [70.7, 7335.0], [70.8, 7335.0], [70.9, 7336.0], [71.0, 7343.0], [71.1, 7343.0], [71.2, 7354.0], [71.3, 7354.0], [71.4, 7359.0], [71.5, 7366.0], [71.6, 7366.0], [71.7, 7368.0], [71.8, 7368.0], [71.9, 7406.0], [72.0, 7410.0], [72.1, 7410.0], [72.2, 7415.0], [72.3, 7415.0], [72.4, 7425.0], [72.5, 7425.0], [72.6, 7425.0], [72.7, 7454.0], [72.8, 7454.0], [72.9, 7455.0], [73.0, 7491.0], [73.1, 7491.0], [73.2, 7497.0], [73.3, 7497.0], [73.4, 7505.0], [73.5, 7517.0], [73.6, 7517.0], [73.7, 7583.0], [73.8, 7583.0], [73.9, 7586.0], [74.0, 7608.0], [74.1, 7608.0], [74.2, 7627.0], [74.3, 7627.0], [74.4, 7641.0], [74.5, 7641.0], [74.6, 7659.0], [74.7, 7665.0], [74.8, 7665.0], [74.9, 7674.0], [75.0, 7674.0], [75.1, 7685.0], [75.2, 7698.0], [75.3, 7698.0], [75.4, 7703.0], [75.5, 7703.0], [75.6, 7714.0], [75.7, 7717.0], [75.8, 7717.0], [75.9, 7720.0], [76.0, 7720.0], [76.1, 7723.0], [76.2, 7733.0], [76.3, 7733.0], [76.4, 7744.0], [76.5, 7744.0], [76.6, 7758.0], [76.7, 7768.0], [76.8, 7768.0], [76.9, 7769.0], [77.0, 7769.0], [77.1, 7776.0], [77.2, 7781.0], [77.3, 7781.0], [77.4, 7801.0], [77.5, 7801.0], [77.6, 7802.0], [77.7, 7803.0], [77.8, 7803.0], [77.9, 7808.0], [78.0, 7808.0], [78.1, 7820.0], [78.2, 7872.0], [78.3, 7872.0], [78.4, 7914.0], [78.5, 7914.0], [78.6, 7928.0], [78.7, 7928.0], [78.8, 7928.0], [78.9, 7937.0], [79.0, 7937.0], [79.1, 7956.0], [79.2, 7963.0], [79.3, 7963.0], [79.4, 7989.0], [79.5, 7989.0], [79.6, 7991.0], [79.7, 8005.0], [79.8, 8005.0], [79.9, 8010.0], [80.0, 8010.0], [80.1, 8012.0], [80.2, 8016.0], [80.3, 8016.0], [80.4, 8020.0], [80.5, 8020.0], [80.6, 8020.0], [80.7, 8026.0], [80.8, 8026.0], [80.9, 8027.0], [81.0, 8027.0], [81.1, 8028.0], [81.2, 8035.0], [81.3, 8035.0], [81.4, 8039.0], [81.5, 8039.0], [81.6, 8041.0], [81.7, 8047.0], [81.8, 8047.0], [81.9, 8051.0], [82.0, 8051.0], [82.1, 8060.0], [82.2, 8066.0], [82.3, 8066.0], [82.4, 8083.0], [82.5, 8083.0], [82.6, 8085.0], [82.7, 8095.0], [82.8, 8095.0], [82.9, 8097.0], [83.0, 8097.0], [83.1, 8103.0], [83.2, 8103.0], [83.3, 8103.0], [83.4, 8108.0], [83.5, 8108.0], [83.6, 8108.0], [83.7, 8112.0], [83.8, 8112.0], [83.9, 8114.0], [84.0, 8114.0], [84.1, 8125.0], [84.2, 8151.0], [84.3, 8151.0], [84.4, 8159.0], [84.5, 8159.0], [84.6, 8167.0], [84.7, 8174.0], [84.8, 8174.0], [84.9, 8179.0], [85.0, 8179.0], [85.1, 8182.0], [85.2, 8196.0], [85.3, 8196.0], [85.4, 8214.0], [85.5, 8214.0], [85.6, 8214.0], [85.7, 8216.0], [85.8, 8216.0], [85.9, 8218.0], [86.0, 8218.0], [86.1, 8221.0], [86.2, 8223.0], [86.3, 8223.0], [86.4, 8225.0], [86.5, 8225.0], [86.6, 8228.0], [86.7, 8231.0], [86.8, 8231.0], [86.9, 8246.0], [87.0, 8246.0], [87.1, 8247.0], [87.2, 8261.0], [87.3, 8261.0], [87.4, 8266.0], [87.5, 8266.0], [87.6, 8275.0], [87.7, 8279.0], [87.8, 8279.0], [87.9, 8288.0], [88.0, 8288.0], [88.1, 8295.0], [88.2, 8302.0], [88.3, 8302.0], [88.4, 8304.0], [88.5, 8304.0], [88.6, 8310.0], [88.7, 8311.0], [88.8, 8311.0], [88.9, 8314.0], [89.0, 8314.0], [89.1, 8317.0], [89.2, 8317.0], [89.3, 8317.0], [89.4, 8318.0], [89.5, 8318.0], [89.6, 8331.0], [89.7, 8343.0], [89.8, 8343.0], [89.9, 8345.0], [90.0, 8345.0], [90.1, 8355.0], [90.2, 8365.0], [90.3, 8365.0], [90.4, 8369.0], [90.5, 8369.0], [90.6, 8377.0], [90.7, 8379.0], [90.8, 8379.0], [90.9, 8383.0], [91.0, 8383.0], [91.1, 8419.0], [91.2, 8426.0], [91.3, 8426.0], [91.4, 8439.0], [91.5, 8439.0], [91.6, 8449.0], [91.7, 8453.0], [91.8, 8453.0], [91.9, 8456.0], [92.0, 8456.0], [92.1, 8467.0], [92.2, 8470.0], [92.3, 8470.0], [92.4, 8471.0], [92.5, 8471.0], [92.6, 8473.0], [92.7, 8480.0], [92.8, 8480.0], [92.9, 8511.0], [93.0, 8511.0], [93.1, 8513.0], [93.2, 8514.0], [93.3, 8514.0], [93.4, 8529.0], [93.5, 8529.0], [93.6, 8532.0], [93.7, 8532.0], [93.8, 8532.0], [93.9, 8547.0], [94.0, 8547.0], [94.1, 8548.0], [94.2, 8548.0], [94.3, 8548.0], [94.4, 8572.0], [94.5, 8572.0], [94.6, 8588.0], [94.7, 8591.0], [94.8, 8591.0], [94.9, 8603.0], [95.0, 8603.0], [95.1, 8637.0], [95.2, 8684.0], [95.3, 8684.0], [95.4, 8687.0], [95.5, 8687.0], [95.6, 8728.0], [95.7, 8730.0], [95.8, 8730.0], [95.9, 8730.0], [96.0, 8730.0], [96.1, 8775.0], [96.2, 8787.0], [96.3, 8787.0], [96.4, 8809.0], [96.5, 8809.0], [96.6, 8835.0], [96.7, 8854.0], [96.8, 8854.0], [96.9, 8861.0], [97.0, 8861.0], [97.1, 8873.0], [97.2, 8875.0], [97.3, 8875.0], [97.4, 8884.0], [97.5, 8884.0], [97.6, 8887.0], [97.7, 8898.0], [97.8, 8898.0], [97.9, 8901.0], [98.0, 8901.0], [98.1, 8902.0], [98.2, 8902.0], [98.3, 8902.0], [98.4, 8906.0], [98.5, 8906.0], [98.6, 8906.0], [98.7, 8912.0], [98.8, 8912.0], [98.9, 8981.0], [99.0, 8981.0], [99.1, 9164.0], [99.2, 9210.0], [99.3, 9210.0], [99.4, 9240.0], [99.5, 9240.0], [99.6, 9250.0], [99.7, 9252.0], [99.8, 9252.0], [99.9, 9260.0], [100.0, 9260.0]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[0.0, 5991.0], [0.1, 5991.0], [0.2, 5993.0], [0.3, 5993.0], [0.4, 5995.0], [0.5, 5996.0], [0.6, 5996.0], [0.7, 6006.0], [0.8, 6006.0], [0.9, 6018.0], [1.0, 6020.0], [1.1, 6020.0], [1.2, 6027.0], [1.3, 6027.0], [1.4, 6028.0], [1.5, 6042.0], [1.6, 6042.0], [1.7, 6042.0], [1.8, 6042.0], [1.9, 6053.0], [2.0, 6054.0], [2.1, 6054.0], [2.2, 6055.0], [2.3, 6055.0], [2.4, 6078.0], [2.5, 6080.0], [2.6, 6080.0], [2.7, 6081.0], [2.8, 6081.0], [2.9, 6084.0], [3.0, 6091.0], [3.1, 6091.0], [3.2, 6093.0], [3.3, 6093.0], [3.4, 6106.0], [3.5, 6107.0], [3.6, 6107.0], [3.7, 6107.0], [3.8, 6107.0], [3.9, 6109.0], [4.0, 6115.0], [4.1, 6115.0], [4.2, 6116.0], [4.3, 6116.0], [4.4, 6119.0], [4.5, 6128.0], [4.6, 6128.0], [4.7, 6133.0], [4.8, 6133.0], [4.9, 6137.0], [5.0, 6137.0], [5.1, 6137.0], [5.2, 6142.0], [5.3, 6142.0], [5.4, 6157.0], [5.5, 6161.0], [5.6, 6161.0], [5.7, 6172.0], [5.8, 6172.0], [5.9, 6174.0], [6.0, 6174.0], [6.1, 6187.0], [6.2, 6197.0], [6.3, 6197.0], [6.4, 6199.0], [6.5, 6199.0], [6.6, 6200.0], [6.7, 6201.0], [6.8, 6201.0], [6.9, 6202.0], [7.0, 6202.0], [7.1, 6213.0], [7.2, 6227.0], [7.3, 6227.0], [7.4, 6229.0], [7.5, 6229.0], [7.6, 6233.0], [7.7, 6233.0], [7.8, 6233.0], [7.9, 6242.0], [8.0, 6242.0], [8.1, 6243.0], [8.2, 6245.0], [8.3, 6245.0], [8.4, 6245.0], [8.5, 6245.0], [8.6, 6250.0], [8.7, 6254.0], [8.8, 6254.0], [8.9, 6255.0], [9.0, 6255.0], [9.1, 6257.0], [9.2, 6264.0], [9.3, 6264.0], [9.4, 6268.0], [9.5, 6270.0], [9.6, 6270.0], [9.7, 6279.0], [9.8, 6279.0], [9.9, 6280.0], [10.0, 6284.0], [10.1, 6284.0], [10.2, 6292.0], [10.3, 6292.0], [10.4, 6293.0], [10.5, 6295.0], [10.6, 6295.0], [10.7, 6305.0], [10.8, 6305.0], [10.9, 6307.0], [11.0, 6307.0], [11.1, 6307.0], [11.2, 6313.0], [11.3, 6313.0], [11.4, 6315.0], [11.5, 6318.0], [11.6, 6318.0], [11.7, 6322.0], [11.8, 6322.0], [11.9, 6328.0], [12.0, 6333.0], [12.1, 6333.0], [12.2, 6333.0], [12.3, 6333.0], [12.4, 6336.0], [12.5, 6343.0], [12.6, 6343.0], [12.7, 6346.0], [12.8, 6346.0], [12.9, 6347.0], [13.0, 6352.0], [13.1, 6352.0], [13.2, 6359.0], [13.3, 6359.0], [13.4, 6372.0], [13.5, 6372.0], [13.6, 6372.0], [13.7, 6387.0], [13.8, 6387.0], [13.9, 6666.0], [14.0, 6848.0], [14.1, 6848.0], [14.2, 6871.0], [14.3, 6871.0], [14.4, 6906.0], [14.5, 6958.0], [14.6, 6958.0], [14.7, 6985.0], [14.8, 6985.0], [14.9, 6985.0], [15.0, 7026.0], [15.1, 7026.0], [15.2, 7029.0], [15.3, 7029.0], [15.4, 7029.0], [15.5, 7226.0], [15.6, 7226.0], [15.7, 7432.0], [15.8, 7432.0], [15.9, 7457.0], [16.0, 7505.0], [16.1, 7505.0], [16.2, 7538.0], [16.3, 7538.0], [16.4, 7562.0], [16.5, 7688.0], [16.6, 7688.0], [16.7, 7702.0], [16.8, 7702.0], [16.9, 7752.0], [17.0, 7764.0], [17.1, 7764.0], [17.2, 7789.0], [17.3, 7789.0], [17.4, 7828.0], [17.5, 7833.0], [17.6, 7833.0], [17.7, 7846.0], [17.8, 7846.0], [17.9, 7873.0], [18.0, 7875.0], [18.1, 7875.0], [18.2, 7892.0], [18.3, 7892.0], [18.4, 7905.0], [18.5, 7905.0], [18.6, 7942.0], [18.7, 7955.0], [18.8, 7955.0], [18.9, 7966.0], [19.0, 7966.0], [19.1, 7994.0], [19.2, 8010.0], [19.3, 8010.0], [19.4, 8010.0], [19.5, 8010.0], [19.6, 8013.0], [19.7, 8019.0], [19.8, 8019.0], [19.9, 8024.0], [20.0, 8024.0], [20.1, 8041.0], [20.2, 8055.0], [20.3, 8055.0], [20.4, 8057.0], [20.5, 8057.0], [20.6, 8063.0], [20.7, 8064.0], [20.8, 8064.0], [20.9, 8077.0], [21.0, 8077.0], [21.1, 8077.0], [21.2, 8079.0], [21.3, 8079.0], [21.4, 8084.0], [21.5, 8084.0], [21.6, 8091.0], [21.7, 8098.0], [21.8, 8098.0], [21.9, 8116.0], [22.0, 8116.0], [22.1, 8118.0], [22.2, 8127.0], [22.3, 8127.0], [22.4, 8128.0], [22.5, 8128.0], [22.6, 8137.0], [22.7, 8139.0], [22.8, 8139.0], [22.9, 8151.0], [23.0, 8151.0], [23.1, 8153.0], [23.2, 8157.0], [23.3, 8157.0], [23.4, 8157.0], [23.5, 8157.0], [23.6, 8159.0], [23.7, 8160.0], [23.8, 8160.0], [23.9, 8162.0], [24.0, 8162.0], [24.1, 8167.0], [24.2, 8169.0], [24.3, 8169.0], [24.4, 8174.0], [24.5, 8174.0], [24.6, 8176.0], [24.7, 8188.0], [24.8, 8188.0], [24.9, 8190.0], [25.0, 8190.0], [25.1, 8201.0], [25.2, 8206.0], [25.3, 8206.0], [25.4, 8209.0], [25.5, 8209.0], [25.6, 8211.0], [25.7, 8213.0], [25.8, 8213.0], [25.9, 8221.0], [26.0, 8221.0], [26.1, 8223.0], [26.2, 8224.0], [26.3, 8224.0], [26.4, 8224.0], [26.5, 8224.0], [26.6, 8225.0], [26.7, 8226.0], [26.8, 8226.0], [26.9, 8229.0], [27.0, 8229.0], [27.1, 8232.0], [27.2, 8233.0], [27.3, 8233.0], [27.4, 8239.0], [27.5, 8239.0], [27.6, 8247.0], [27.7, 8250.0], [27.8, 8250.0], [27.9, 8255.0], [28.0, 8255.0], [28.1, 8256.0], [28.2, 8265.0], [28.3, 8265.0], [28.4, 8268.0], [28.5, 8268.0], [28.6, 8270.0], [28.7, 8274.0], [28.8, 8274.0], [28.9, 8275.0], [29.0, 8275.0], [29.1, 8280.0], [29.2, 8280.0], [29.3, 8280.0], [29.4, 8287.0], [29.5, 8287.0], [29.6, 8293.0], [29.7, 8294.0], [29.8, 8294.0], [29.9, 8306.0], [30.0, 8306.0], [30.1, 8307.0], [30.2, 8307.0], [30.3, 8307.0], [30.4, 8310.0], [30.5, 8310.0], [30.6, 8313.0], [30.7, 8317.0], [30.8, 8317.0], [30.9, 8328.0], [31.0, 8328.0], [31.1, 8331.0], [31.2, 8341.0], [31.3, 8341.0], [31.4, 8344.0], [31.5, 8344.0], [31.6, 8354.0], [31.7, 8355.0], [31.8, 8355.0], [31.9, 8356.0], [32.0, 8356.0], [32.1, 8360.0], [32.2, 8361.0], [32.3, 8361.0], [32.4, 8363.0], [32.5, 8363.0], [32.6, 8367.0], [32.7, 8368.0], [32.8, 8368.0], [32.9, 8376.0], [33.0, 8376.0], [33.1, 8376.0], [33.2, 8377.0], [33.3, 8377.0], [33.4, 8381.0], [33.5, 8381.0], [33.6, 8386.0], [33.7, 8386.0], [33.8, 8386.0], [33.9, 8396.0], [34.0, 8396.0], [34.1, 8397.0], [34.2, 8397.0], [34.3, 8397.0], [34.4, 8402.0], [34.5, 8402.0], [34.6, 8402.0], [34.7, 8403.0], [34.8, 8403.0], [34.9, 8406.0], [35.0, 8406.0], [35.1, 8412.0], [35.2, 8414.0], [35.3, 8414.0], [35.4, 8416.0], [35.5, 8416.0], [35.6, 8426.0], [35.7, 8427.0], [35.8, 8427.0], [35.9, 8431.0], [36.0, 8431.0], [36.1, 8434.0], [36.2, 8435.0], [36.3, 8435.0], [36.4, 8436.0], [36.5, 8436.0], [36.6, 8439.0], [36.7, 8440.0], [36.8, 8440.0], [36.9, 8441.0], [37.0, 8441.0], [37.1, 8450.0], [37.2, 8451.0], [37.3, 8451.0], [37.4, 8454.0], [37.5, 8454.0], [37.6, 8454.0], [37.7, 8456.0], [37.8, 8456.0], [37.9, 8456.0], [38.0, 8456.0], [38.1, 8457.0], [38.2, 8457.0], [38.3, 8457.0], [38.4, 8460.0], [38.5, 8460.0], [38.6, 8464.0], [38.7, 8465.0], [38.8, 8465.0], [38.9, 8466.0], [39.0, 8466.0], [39.1, 8470.0], [39.2, 8470.0], [39.3, 8470.0], [39.4, 8473.0], [39.5, 8473.0], [39.6, 8474.0], [39.7, 8481.0], [39.8, 8481.0], [39.9, 8481.0], [40.0, 8481.0], [40.1, 8484.0], [40.2, 8485.0], [40.3, 8485.0], [40.4, 8486.0], [40.5, 8486.0], [40.6, 8486.0], [40.7, 8492.0], [40.8, 8492.0], [40.9, 8502.0], [41.0, 8502.0], [41.1, 8503.0], [41.2, 8503.0], [41.3, 8503.0], [41.4, 8508.0], [41.5, 8508.0], [41.6, 8508.0], [41.7, 8514.0], [41.8, 8514.0], [41.9, 8515.0], [42.0, 8515.0], [42.1, 8518.0], [42.2, 8521.0], [42.3, 8521.0], [42.4, 8526.0], [42.5, 8526.0], [42.6, 8527.0], [42.7, 8528.0], [42.8, 8528.0], [42.9, 8529.0], [43.0, 8529.0], [43.1, 8529.0], [43.2, 8530.0], [43.3, 8530.0], [43.4, 8531.0], [43.5, 8531.0], [43.6, 8532.0], [43.7, 8534.0], [43.8, 8534.0], [43.9, 8534.0], [44.0, 8534.0], [44.1, 8536.0], [44.2, 8538.0], [44.3, 8538.0], [44.4, 8539.0], [44.5, 8544.0], [44.6, 8544.0], [44.7, 8545.0], [44.8, 8545.0], [44.9, 8548.0], [45.0, 8553.0], [45.1, 8553.0], [45.2, 8555.0], [45.3, 8555.0], [45.4, 8557.0], [45.5, 8559.0], [45.6, 8559.0], [45.7, 8559.0], [45.8, 8559.0], [45.9, 8559.0], [46.0, 8561.0], [46.1, 8561.0], [46.2, 8563.0], [46.3, 8563.0], [46.4, 8566.0], [46.5, 8567.0], [46.6, 8567.0], [46.7, 8575.0], [46.8, 8575.0], [46.9, 8575.0], [47.0, 8578.0], [47.1, 8578.0], [47.2, 8580.0], [47.3, 8580.0], [47.4, 8585.0], [47.5, 8588.0], [47.6, 8588.0], [47.7, 8590.0], [47.8, 8590.0], [47.9, 8591.0], [48.0, 8591.0], [48.1, 8591.0], [48.2, 8593.0], [48.3, 8593.0], [48.4, 8597.0], [48.5, 8600.0], [48.6, 8600.0], [48.7, 8601.0], [48.8, 8601.0], [48.9, 8601.0], [49.0, 8602.0], [49.1, 8602.0], [49.2, 8602.0], [49.3, 8602.0], [49.4, 8603.0], [49.5, 8603.0], [49.6, 8603.0], [49.7, 8605.0], [49.8, 8605.0], [49.9, 8607.0], [50.0, 8608.0], [50.1, 8608.0], [50.2, 8612.0], [50.3, 8612.0], [50.4, 8616.0], [50.5, 8617.0], [50.6, 8617.0], [50.7, 8618.0], [50.8, 8618.0], [50.9, 8618.0], [51.0, 8620.0], [51.1, 8620.0], [51.2, 8623.0], [51.3, 8623.0], [51.4, 8625.0], [51.5, 8626.0], [51.6, 8626.0], [51.7, 8629.0], [51.8, 8629.0], [51.9, 8637.0], [52.0, 8642.0], [52.1, 8642.0], [52.2, 8644.0], [52.3, 8644.0], [52.4, 8654.0], [52.5, 8656.0], [52.6, 8656.0], [52.7, 8657.0], [52.8, 8657.0], [52.9, 8662.0], [53.0, 8665.0], [53.1, 8665.0], [53.2, 8670.0], [53.3, 8670.0], [53.4, 8670.0], [53.5, 8673.0], [53.6, 8673.0], [53.7, 8673.0], [53.8, 8673.0], [53.9, 8675.0], [54.0, 8683.0], [54.1, 8683.0], [54.2, 8686.0], [54.3, 8686.0], [54.4, 8689.0], [54.5, 8689.0], [54.6, 8689.0], [54.7, 8690.0], [54.8, 8690.0], [54.9, 8690.0], [55.0, 8692.0], [55.1, 8692.0], [55.2, 8694.0], [55.3, 8694.0], [55.4, 8694.0], [55.5, 8695.0], [55.6, 8695.0], [55.7, 8696.0], [55.8, 8696.0], [55.9, 8696.0], [56.0, 8701.0], [56.1, 8701.0], [56.2, 8707.0], [56.3, 8707.0], [56.4, 8707.0], [56.5, 8709.0], [56.6, 8709.0], [56.7, 8712.0], [56.8, 8712.0], [56.9, 8714.0], [57.0, 8720.0], [57.1, 8720.0], [57.2, 8721.0], [57.3, 8721.0], [57.4, 8725.0], [57.5, 8735.0], [57.6, 8735.0], [57.7, 8741.0], [57.8, 8741.0], [57.9, 8742.0], [58.0, 8743.0], [58.1, 8743.0], [58.2, 8745.0], [58.3, 8745.0], [58.4, 8749.0], [58.5, 8753.0], [58.6, 8753.0], [58.7, 8756.0], [58.8, 8756.0], [58.9, 8759.0], [59.0, 8760.0], [59.1, 8760.0], [59.2, 8762.0], [59.3, 8762.0], [59.4, 8762.0], [59.5, 8765.0], [59.6, 8765.0], [59.7, 8777.0], [59.8, 8777.0], [59.9, 8777.0], [60.0, 8778.0], [60.1, 8778.0], [60.2, 8779.0], [60.3, 8779.0], [60.4, 8780.0], [60.5, 8785.0], [60.6, 8785.0], [60.7, 8785.0], [60.8, 8785.0], [60.9, 8786.0], [61.0, 8790.0], [61.1, 8790.0], [61.2, 8791.0], [61.3, 8791.0], [61.4, 8798.0], [61.5, 8813.0], [61.6, 8813.0], [61.7, 8815.0], [61.8, 8815.0], [61.9, 8815.0], [62.0, 8816.0], [62.1, 8816.0], [62.2, 8822.0], [62.3, 8822.0], [62.4, 8825.0], [62.5, 8827.0], [62.6, 8827.0], [62.7, 8853.0], [62.8, 8853.0], [62.9, 8854.0], [63.0, 8861.0], [63.1, 8861.0], [63.2, 8861.0], [63.3, 8861.0], [63.4, 8863.0], [63.5, 8881.0], [63.6, 8881.0], [63.7, 8888.0], [63.8, 8888.0], [63.9, 8889.0], [64.0, 8892.0], [64.1, 8892.0], [64.2, 8935.0], [64.3, 8935.0], [64.4, 8941.0], [64.5, 8947.0], [64.6, 8947.0], [64.7, 8953.0], [64.8, 8953.0], [64.9, 8965.0], [65.0, 8988.0], [65.1, 8988.0], [65.2, 9006.0], [65.3, 9006.0], [65.4, 9009.0], [65.5, 9010.0], [65.6, 9010.0], [65.7, 9017.0], [65.8, 9017.0], [65.9, 9025.0], [66.0, 9029.0], [66.1, 9029.0], [66.2, 9034.0], [66.3, 9034.0], [66.4, 9036.0], [66.5, 9037.0], [66.6, 9037.0], [66.7, 9040.0], [66.8, 9040.0], [66.9, 9042.0], [67.0, 9053.0], [67.1, 9053.0], [67.2, 9055.0], [67.3, 9055.0], [67.4, 9058.0], [67.5, 9065.0], [67.6, 9065.0], [67.7, 9068.0], [67.8, 9068.0], [67.9, 9071.0], [68.0, 9073.0], [68.1, 9073.0], [68.2, 9080.0], [68.3, 9080.0], [68.4, 9080.0], [68.5, 9080.0], [68.6, 9080.0], [68.7, 9083.0], [68.8, 9083.0], [68.9, 9086.0], [69.0, 9091.0], [69.1, 9091.0], [69.2, 9091.0], [69.3, 9091.0], [69.4, 9098.0], [69.5, 9100.0], [69.6, 9100.0], [69.7, 9102.0], [69.8, 9102.0], [69.9, 9105.0], [70.0, 9110.0], [70.1, 9110.0], [70.2, 9111.0], [70.3, 9111.0], [70.4, 9115.0], [70.5, 9115.0], [70.6, 9121.0], [70.7, 9122.0], [70.8, 9122.0], [70.9, 9126.0], [71.0, 9126.0], [71.1, 9127.0], [71.2, 9133.0], [71.3, 9133.0], [71.4, 9139.0], [71.5, 9139.0], [71.6, 9140.0], [71.7, 9141.0], [71.8, 9141.0], [71.9, 9142.0], [72.0, 9142.0], [72.1, 9155.0], [72.2, 9164.0], [72.3, 9164.0], [72.4, 9165.0], [72.5, 9165.0], [72.6, 9170.0], [72.7, 9178.0], [72.8, 9178.0], [72.9, 9180.0], [73.0, 9180.0], [73.1, 9189.0], [73.2, 9190.0], [73.3, 9190.0], [73.4, 9191.0], [73.5, 9191.0], [73.6, 9191.0], [73.7, 9192.0], [73.8, 9192.0], [73.9, 9207.0], [74.0, 9207.0], [74.1, 9212.0], [74.2, 9226.0], [74.3, 9226.0], [74.4, 9227.0], [74.5, 9227.0], [74.6, 9227.0], [74.7, 9229.0], [74.8, 9229.0], [74.9, 9249.0], [75.0, 9249.0], [75.1, 9250.0], [75.2, 9252.0], [75.3, 9252.0], [75.4, 9252.0], [75.5, 9252.0], [75.6, 9252.0], [75.7, 9258.0], [75.8, 9258.0], [75.9, 9264.0], [76.0, 9264.0], [76.1, 9270.0], [76.2, 9276.0], [76.3, 9276.0], [76.4, 9276.0], [76.5, 9276.0], [76.6, 9283.0], [76.7, 9285.0], [76.8, 9285.0], [76.9, 9287.0], [77.0, 9287.0], [77.1, 9290.0], [77.2, 9292.0], [77.3, 9292.0], [77.4, 9297.0], [77.5, 9297.0], [77.6, 9300.0], [77.7, 9306.0], [77.8, 9306.0], [77.9, 9309.0], [78.0, 9309.0], [78.1, 9317.0], [78.2, 9317.0], [78.3, 9317.0], [78.4, 9328.0], [78.5, 9328.0], [78.6, 9332.0], [78.7, 9333.0], [78.8, 9333.0], [78.9, 9333.0], [79.0, 9333.0], [79.1, 9339.0], [79.2, 9342.0], [79.3, 9342.0], [79.4, 9346.0], [79.5, 9346.0], [79.6, 9348.0], [79.7, 9354.0], [79.8, 9354.0], [79.9, 9362.0], [80.0, 9362.0], [80.1, 9364.0], [80.2, 9367.0], [80.3, 9367.0], [80.4, 9378.0], [80.5, 9378.0], [80.6, 9391.0], [80.7, 9410.0], [80.8, 9410.0], [80.9, 9422.0], [81.0, 9422.0], [81.1, 9428.0], [81.2, 9436.0], [81.3, 9436.0], [81.4, 9440.0], [81.5, 9440.0], [81.6, 9442.0], [81.7, 9449.0], [81.8, 9449.0], [81.9, 9450.0], [82.0, 9450.0], [82.1, 9457.0], [82.2, 9464.0], [82.3, 9464.0], [82.4, 9470.0], [82.5, 9470.0], [82.6, 9476.0], [82.7, 9477.0], [82.8, 9477.0], [82.9, 9484.0], [83.0, 9484.0], [83.1, 9488.0], [83.2, 9493.0], [83.3, 9493.0], [83.4, 9499.0], [83.5, 9499.0], [83.6, 9505.0], [83.7, 9513.0], [83.8, 9513.0], [83.9, 9513.0], [84.0, 9513.0], [84.1, 9522.0], [84.2, 9525.0], [84.3, 9525.0], [84.4, 9526.0], [84.5, 9526.0], [84.6, 9527.0], [84.7, 9536.0], [84.8, 9536.0], [84.9, 9537.0], [85.0, 9537.0], [85.1, 9538.0], [85.2, 9562.0], [85.3, 9562.0], [85.4, 9563.0], [85.5, 9563.0], [85.6, 9581.0], [85.7, 9584.0], [85.8, 9584.0], [85.9, 9584.0], [86.0, 9584.0], [86.1, 9589.0], [86.2, 9597.0], [86.3, 9597.0], [86.4, 9598.0], [86.5, 9598.0], [86.6, 9608.0], [86.7, 9609.0], [86.8, 9609.0], [86.9, 9609.0], [87.0, 9609.0], [87.1, 9610.0], [87.2, 9612.0], [87.3, 9612.0], [87.4, 9612.0], [87.5, 9612.0], [87.6, 9612.0], [87.7, 9616.0], [87.8, 9616.0], [87.9, 9618.0], [88.0, 9618.0], [88.1, 9620.0], [88.2, 9623.0], [88.3, 9623.0], [88.4, 9634.0], [88.5, 9634.0], [88.6, 9640.0], [88.7, 9641.0], [88.8, 9641.0], [88.9, 9646.0], [89.0, 9646.0], [89.1, 9651.0], [89.2, 9653.0], [89.3, 9653.0], [89.4, 9653.0], [89.5, 9653.0], [89.6, 9655.0], [89.7, 9658.0], [89.8, 9658.0], [89.9, 9658.0], [90.0, 9658.0], [90.1, 9665.0], [90.2, 9666.0], [90.3, 9666.0], [90.4, 9666.0], [90.5, 9666.0], [90.6, 9667.0], [90.7, 9675.0], [90.8, 9675.0], [90.9, 9679.0], [91.0, 9679.0], [91.1, 9688.0], [91.2, 9688.0], [91.3, 9688.0], [91.4, 9692.0], [91.5, 9692.0], [91.6, 9701.0], [91.7, 9703.0], [91.8, 9703.0], [91.9, 9705.0], [92.0, 9705.0], [92.1, 9706.0], [92.2, 9710.0], [92.3, 9710.0], [92.4, 9716.0], [92.5, 9716.0], [92.6, 9724.0], [92.7, 9727.0], [92.8, 9727.0], [92.9, 9731.0], [93.0, 9731.0], [93.1, 9735.0], [93.2, 9741.0], [93.3, 9741.0], [93.4, 9749.0], [93.5, 9749.0], [93.6, 9753.0], [93.7, 9758.0], [93.8, 9758.0], [93.9, 9772.0], [94.0, 9772.0], [94.1, 9777.0], [94.2, 9778.0], [94.3, 9778.0], [94.4, 9786.0], [94.5, 9786.0], [94.6, 9789.0], [94.7, 9804.0], [94.8, 9804.0], [94.9, 9805.0], [95.0, 9805.0], [95.1, 9816.0], [95.2, 9829.0], [95.3, 9829.0], [95.4, 9843.0], [95.5, 9843.0], [95.6, 9843.0], [95.7, 9843.0], [95.8, 9843.0], [95.9, 9867.0], [96.0, 9867.0], [96.1, 9889.0], [96.2, 9895.0], [96.3, 9895.0], [96.4, 9896.0], [96.5, 9896.0], [96.6, 9896.0], [96.7, 9908.0], [96.8, 9908.0], [96.9, 9908.0], [97.0, 9908.0], [97.1, 9915.0], [97.2, 9920.0], [97.3, 9920.0], [97.4, 9922.0], [97.5, 9922.0], [97.6, 9926.0], [97.7, 9927.0], [97.8, 9927.0], [97.9, 9940.0], [98.0, 9940.0], [98.1, 9952.0], [98.2, 10006.0], [98.3, 10006.0], [98.4, 10025.0], [98.5, 10025.0], [98.6, 10050.0], [98.7, 10053.0], [98.8, 10053.0], [98.9, 10154.0], [99.0, 10154.0], [99.1, 10188.0], [99.2, 10231.0], [99.3, 10231.0], [99.4, 10303.0], [99.5, 10303.0], [99.6, 10389.0], [99.7, 10425.0], [99.8, 10425.0], [99.9, 10742.0], [100.0, 10742.0]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[0.0, 15669.0], [0.1, 15669.0], [0.2, 15737.0], [0.3, 15737.0], [0.4, 15816.0], [0.5, 15893.0], [0.6, 15893.0], [0.7, 15903.0], [0.8, 15903.0], [0.9, 15905.0], [1.0, 15915.0], [1.1, 15915.0], [1.2, 15916.0], [1.3, 15916.0], [1.4, 15917.0], [1.5, 15917.0], [1.6, 15917.0], [1.7, 15920.0], [1.8, 15920.0], [1.9, 15938.0], [2.0, 15939.0], [2.1, 15939.0], [2.2, 15941.0], [2.3, 15941.0], [2.4, 15941.0], [2.5, 15952.0], [2.6, 15952.0], [2.7, 15954.0], [2.8, 15954.0], [2.9, 15968.0], [3.0, 15979.0], [3.1, 15979.0], [3.2, 15981.0], [3.3, 15981.0], [3.4, 15984.0], [3.5, 15984.0], [3.6, 15984.0], [3.7, 15994.0], [3.8, 15994.0], [3.9, 15996.0], [4.0, 16012.0], [4.1, 16012.0], [4.2, 16036.0], [4.3, 16036.0], [4.4, 16046.0], [4.5, 16049.0], [4.6, 16049.0], [4.7, 16049.0], [4.8, 16049.0], [4.9, 16050.0], [5.0, 16050.0], [5.1, 16050.0], [5.2, 16060.0], [5.3, 16060.0], [5.4, 16060.0], [5.5, 16062.0], [5.6, 16062.0], [5.7, 16072.0], [5.8, 16072.0], [5.9, 16082.0], [6.0, 16082.0], [6.1, 16082.0], [6.2, 16083.0], [6.3, 16083.0], [6.4, 16084.0], [6.5, 16088.0], [6.6, 16088.0], [6.7, 16088.0], [6.8, 16088.0], [6.9, 16107.0], [7.0, 16107.0], [7.1, 16107.0], [7.2, 16120.0], [7.3, 16120.0], [7.4, 16121.0], [7.5, 16122.0], [7.6, 16122.0], [7.7, 16123.0], [7.8, 16123.0], [7.9, 16132.0], [8.0, 16134.0], [8.1, 16134.0], [8.2, 16135.0], [8.3, 16135.0], [8.4, 16148.0], [8.5, 16162.0], [8.6, 16162.0], [8.7, 16164.0], [8.8, 16164.0], [8.9, 16176.0], [9.0, 16177.0], [9.1, 16177.0], [9.2, 16178.0], [9.3, 16178.0], [9.4, 16190.0], [9.5, 16201.0], [9.6, 16201.0], [9.7, 16203.0], [9.8, 16203.0], [9.9, 16204.0], [10.0, 16230.0], [10.1, 16230.0], [10.2, 16241.0], [10.3, 16241.0], [10.4, 16241.0], [10.5, 16244.0], [10.6, 16244.0], [10.7, 16254.0], [10.8, 16254.0], [10.9, 16254.0], [11.0, 16270.0], [11.1, 16270.0], [11.2, 16283.0], [11.3, 16283.0], [11.4, 16284.0], [11.5, 16286.0], [11.6, 16286.0], [11.7, 16296.0], [11.8, 16296.0], [11.9, 16299.0], [12.0, 16312.0], [12.1, 16312.0], [12.2, 16313.0], [12.3, 16313.0], [12.4, 16327.0], [12.5, 16328.0], [12.6, 16328.0], [12.7, 16328.0], [12.8, 16328.0], [12.9, 16340.0], [13.0, 16351.0], [13.1, 16351.0], [13.2, 16366.0], [13.3, 16366.0], [13.4, 16377.0], [13.5, 16377.0], [13.6, 16377.0], [13.7, 16389.0], [13.8, 16389.0], [13.9, 16400.0], [14.0, 16401.0], [14.1, 16401.0], [14.2, 16402.0], [14.3, 16402.0], [14.4, 16404.0], [14.5, 16404.0], [14.6, 16404.0], [14.7, 16414.0], [14.8, 16414.0], [14.9, 16415.0], [15.0, 16425.0], [15.1, 16425.0], [15.2, 16425.0], [15.3, 16425.0], [15.4, 16440.0], [15.5, 16440.0], [15.6, 16440.0], [15.7, 16465.0], [15.8, 16465.0], [15.9, 16465.0], [16.0, 16477.0], [16.1, 16477.0], [16.2, 23525.0], [16.3, 23525.0], [16.4, 23553.0], [16.5, 23555.0], [16.6, 23555.0], [16.7, 23557.0], [16.8, 23557.0], [16.9, 23565.0], [17.0, 23595.0], [17.1, 23595.0], [17.2, 23612.0], [17.3, 23612.0], [17.4, 23674.0], [17.5, 23701.0], [17.6, 23701.0], [17.7, 23732.0], [17.8, 23732.0], [17.9, 23743.0], [18.0, 23754.0], [18.1, 23754.0], [18.2, 23762.0], [18.3, 23762.0], [18.4, 23766.0], [18.5, 23766.0], [18.6, 23793.0], [18.7, 23816.0], [18.8, 23816.0], [18.9, 23825.0], [19.0, 23825.0], [19.1, 23837.0], [19.2, 23838.0], [19.3, 23838.0], [19.4, 23847.0], [19.5, 23847.0], [19.6, 23850.0], [19.7, 23886.0], [19.8, 23886.0], [19.9, 23889.0], [20.0, 23889.0], [20.1, 23910.0], [20.2, 23912.0], [20.3, 23912.0], [20.4, 23913.0], [20.5, 23913.0], [20.6, 23932.0], [20.7, 23945.0], [20.8, 23945.0], [20.9, 23946.0], [21.0, 23946.0], [21.1, 23947.0], [21.2, 23954.0], [21.3, 23954.0], [21.4, 23967.0], [21.5, 23967.0], [21.6, 23981.0], [21.7, 23985.0], [21.8, 23985.0], [21.9, 23989.0], [22.0, 23989.0], [22.1, 23994.0], [22.2, 24009.0], [22.3, 24009.0], [22.4, 24031.0], [22.5, 24031.0], [22.6, 24041.0], [22.7, 24045.0], [22.8, 24045.0], [22.9, 24055.0], [23.0, 24055.0], [23.1, 24055.0], [23.2, 24063.0], [23.3, 24063.0], [23.4, 24070.0], [23.5, 24070.0], [23.6, 24080.0], [23.7, 24080.0], [23.8, 24080.0], [23.9, 24099.0], [24.0, 24099.0], [24.1, 24107.0], [24.2, 24123.0], [24.3, 24123.0], [24.4, 24131.0], [24.5, 24131.0], [24.6, 24136.0], [24.7, 24140.0], [24.8, 24140.0], [24.9, 24147.0], [25.0, 24147.0], [25.1, 24150.0], [25.2, 24153.0], [25.3, 24153.0], [25.4, 24154.0], [25.5, 24154.0], [25.6, 24154.0], [25.7, 24154.0], [25.8, 24154.0], [25.9, 24154.0], [26.0, 24154.0], [26.1, 24165.0], [26.2, 24166.0], [26.3, 24166.0], [26.4, 24171.0], [26.5, 24171.0], [26.6, 24173.0], [26.7, 24174.0], [26.8, 24174.0], [26.9, 24177.0], [27.0, 24177.0], [27.1, 24178.0], [27.2, 24187.0], [27.3, 24187.0], [27.4, 24189.0], [27.5, 24189.0], [27.6, 24189.0], [27.7, 24189.0], [27.8, 24189.0], [27.9, 24189.0], [28.0, 24189.0], [28.1, 24198.0], [28.2, 24202.0], [28.3, 24202.0], [28.4, 24202.0], [28.5, 24202.0], [28.6, 24202.0], [28.7, 24203.0], [28.8, 24203.0], [28.9, 24213.0], [29.0, 24213.0], [29.1, 24214.0], [29.2, 24215.0], [29.3, 24215.0], [29.4, 24216.0], [29.5, 24216.0], [29.6, 24226.0], [29.7, 24227.0], [29.8, 24227.0], [29.9, 24237.0], [30.0, 24237.0], [30.1, 24246.0], [30.2, 24251.0], [30.3, 24251.0], [30.4, 24252.0], [30.5, 24252.0], [30.6, 24261.0], [30.7, 24263.0], [30.8, 24263.0], [30.9, 24263.0], [31.0, 24263.0], [31.1, 24263.0], [31.2, 24264.0], [31.3, 24264.0], [31.4, 24265.0], [31.5, 24265.0], [31.6, 24268.0], [31.7, 24277.0], [31.8, 24277.0], [31.9, 24277.0], [32.0, 24277.0], [32.1, 24282.0], [32.2, 24283.0], [32.3, 24283.0], [32.4, 24289.0], [32.5, 24289.0], [32.6, 24289.0], [32.7, 24299.0], [32.8, 24299.0], [32.9, 25079.0], [33.0, 25079.0], [33.1, 25247.0], [33.2, 25341.0], [33.3, 25341.0], [33.4, 41796.0], [33.5, 41796.0], [33.6, 41797.0], [33.7, 41812.0], [33.8, 41812.0], [33.9, 41818.0], [34.0, 41818.0], [34.1, 41854.0], [34.2, 41914.0], [34.3, 41914.0], [34.4, 41950.0], [34.5, 41950.0], [34.6, 42001.0], [34.7, 42002.0], [34.8, 42002.0], [34.9, 42024.0], [35.0, 42024.0], [35.1, 42028.0], [35.2, 42030.0], [35.3, 42030.0], [35.4, 42038.0], [35.5, 42038.0], [35.6, 42062.0], [35.7, 42111.0], [35.8, 42111.0], [35.9, 42116.0], [36.0, 42116.0], [36.1, 42116.0], [36.2, 42123.0], [36.3, 42123.0], [36.4, 42138.0], [36.5, 42138.0], [36.6, 42160.0], [36.7, 42188.0], [36.8, 42188.0], [36.9, 42192.0], [37.0, 42192.0], [37.1, 42217.0], [37.2, 42218.0], [37.3, 42218.0], [37.4, 42230.0], [37.5, 42230.0], [37.6, 42245.0], [37.7, 42272.0], [37.8, 42272.0], [37.9, 42279.0], [38.0, 42279.0], [38.1, 42286.0], [38.2, 42288.0], [38.3, 42288.0], [38.4, 42307.0], [38.5, 42308.0], [38.6, 42308.0], [38.7, 42319.0], [38.8, 42319.0], [38.9, 42338.0], [39.0, 42349.0], [39.1, 42349.0], [39.2, 42352.0], [39.3, 42352.0], [39.4, 42377.0], [39.5, 42377.0], [39.6, 42377.0], [39.7, 42383.0], [39.8, 42383.0], [39.9, 42388.0], [40.0, 42394.0], [40.1, 42394.0], [40.2, 42415.0], [40.3, 42415.0], [40.4, 42422.0], [40.5, 42422.0], [40.6, 42422.0], [40.7, 42433.0], [40.8, 42433.0], [40.9, 42445.0], [41.0, 42446.0], [41.1, 42446.0], [41.2, 42454.0], [41.3, 42454.0], [41.4, 42465.0], [41.5, 42470.0], [41.6, 42470.0], [41.7, 42471.0], [41.8, 42471.0], [41.9, 42474.0], [42.0, 42490.0], [42.1, 42490.0], [42.2, 42493.0], [42.3, 42493.0], [42.4, 42507.0], [42.5, 42507.0], [42.6, 42507.0], [42.7, 42516.0], [42.8, 42516.0], [42.9, 42523.0], [43.0, 42525.0], [43.1, 42525.0], [43.2, 42526.0], [43.3, 42526.0], [43.4, 42539.0], [43.5, 42552.0], [43.6, 42552.0], [43.7, 42584.0], [43.8, 42584.0], [43.9, 42661.0], [44.0, 42667.0], [44.1, 42667.0], [44.2, 42674.0], [44.3, 42674.0], [44.4, 42678.0], [44.5, 42678.0], [44.6, 42678.0], [44.7, 42679.0], [44.8, 42679.0], [44.9, 42681.0], [45.0, 42694.0], [45.1, 42694.0], [45.2, 42695.0], [45.3, 42695.0], [45.4, 42699.0], [45.5, 42706.0], [45.6, 42706.0], [45.7, 42707.0], [45.8, 42707.0], [45.9, 42709.0], [46.0, 42709.0], [46.1, 42709.0], [46.2, 42730.0], [46.3, 42730.0], [46.4, 42731.0], [46.5, 42731.0], [46.6, 42731.0], [46.7, 42744.0], [46.8, 42744.0], [46.9, 42746.0], [47.0, 42749.0], [47.1, 42749.0], [47.2, 42752.0], [47.3, 42752.0], [47.4, 42755.0], [47.5, 42768.0], [47.6, 42768.0], [47.7, 42776.0], [47.8, 42776.0], [47.9, 42781.0], [48.0, 42782.0], [48.1, 42782.0], [48.2, 42783.0], [48.3, 42783.0], [48.4, 42783.0], [48.5, 42784.0], [48.6, 42784.0], [48.7, 42795.0], [48.8, 42795.0], [48.9, 42802.0], [49.0, 42810.0], [49.1, 42810.0], [49.2, 42886.0], [49.3, 42886.0], [49.4, 42905.0], [49.5, 43128.0], [49.6, 43128.0], [49.7, 43171.0], [49.8, 43171.0], [49.9, 43382.0], [50.0, 49115.0], [50.1, 49115.0], [50.2, 49133.0], [50.3, 49133.0], [50.4, 49141.0], [50.5, 49142.0], [50.6, 49142.0], [50.7, 49147.0], [50.8, 49147.0], [50.9, 49153.0], [51.0, 49160.0], [51.1, 49160.0], [51.2, 49165.0], [51.3, 49165.0], [51.4, 49168.0], [51.5, 49186.0], [51.6, 49186.0], [51.7, 49198.0], [51.8, 49198.0], [51.9, 49203.0], [52.0, 49203.0], [52.1, 49203.0], [52.2, 49209.0], [52.3, 49209.0], [52.4, 49218.0], [52.5, 49225.0], [52.6, 49225.0], [52.7, 49225.0], [52.8, 49225.0], [52.9, 49227.0], [53.0, 49228.0], [53.1, 49228.0], [53.2, 49228.0], [53.3, 49228.0], [53.4, 49229.0], [53.5, 49234.0], [53.6, 49234.0], [53.7, 49253.0], [53.8, 49253.0], [53.9, 49263.0], [54.0, 49265.0], [54.1, 49265.0], [54.2, 49273.0], [54.3, 49273.0], [54.4, 49273.0], [54.5, 49281.0], [54.6, 49281.0], [54.7, 49283.0], [54.8, 49283.0], [54.9, 49295.0], [55.0, 49300.0], [55.1, 49300.0], [55.2, 49303.0], [55.3, 49303.0], [55.4, 49305.0], [55.5, 49307.0], [55.6, 49307.0], [55.7, 49308.0], [55.8, 49308.0], [55.9, 49326.0], [56.0, 49331.0], [56.1, 49331.0], [56.2, 49340.0], [56.3, 49340.0], [56.4, 49347.0], [56.5, 49349.0], [56.6, 49349.0], [56.7, 49353.0], [56.8, 49353.0], [56.9, 49357.0], [57.0, 49358.0], [57.1, 49358.0], [57.2, 49367.0], [57.3, 49367.0], [57.4, 49367.0], [57.5, 49371.0], [57.6, 49371.0], [57.7, 49374.0], [57.8, 49374.0], [57.9, 49377.0], [58.0, 49378.0], [58.1, 49378.0], [58.2, 49378.0], [58.3, 49378.0], [58.4, 49379.0], [58.5, 49390.0], [58.6, 49390.0], [58.7, 49399.0], [58.8, 49399.0], [58.9, 49409.0], [59.0, 49417.0], [59.1, 49417.0], [59.2, 49418.0], [59.3, 49418.0], [59.4, 49420.0], [59.5, 49430.0], [59.6, 49430.0], [59.7, 49439.0], [59.8, 49439.0], [59.9, 49446.0], [60.0, 49450.0], [60.1, 49450.0], [60.2, 49450.0], [60.3, 49450.0], [60.4, 49458.0], [60.5, 49463.0], [60.6, 49463.0], [60.7, 49474.0], [60.8, 49474.0], [60.9, 49474.0], [61.0, 49479.0], [61.1, 49479.0], [61.2, 49485.0], [61.3, 49485.0], [61.4, 49497.0], [61.5, 49499.0], [61.6, 49499.0], [61.7, 49502.0], [61.8, 49502.0], [61.9, 49503.0], [62.0, 49511.0], [62.1, 49511.0], [62.2, 49511.0], [62.3, 49511.0], [62.4, 49529.0], [62.5, 49538.0], [62.6, 49538.0], [62.7, 49546.0], [62.8, 49546.0], [62.9, 49547.0], [63.0, 49548.0], [63.1, 49548.0], [63.2, 49568.0], [63.3, 49568.0], [63.4, 49579.0], [63.5, 49592.0], [63.6, 49592.0], [63.7, 49627.0], [63.8, 49627.0], [63.9, 49690.0], [64.0, 49693.0], [64.1, 49693.0], [64.2, 49712.0], [64.3, 49712.0], [64.4, 49718.0], [64.5, 49739.0], [64.6, 49739.0], [64.7, 49807.0], [64.8, 49807.0], [64.9, 50003.0], [65.0, 50079.0], [65.1, 50079.0], [65.2, 50086.0], [65.3, 50086.0], [65.4, 50088.0], [65.5, 50094.0], [65.6, 50094.0], [65.7, 50095.0], [65.8, 50095.0], [65.9, 50109.0], [66.0, 50117.0], [66.1, 50117.0], [66.2, 50158.0], [66.3, 50158.0], [66.4, 50164.0], [66.5, 50287.0], [66.6, 50287.0], [66.7, 69755.0], [66.8, 69755.0], [66.9, 69767.0], [67.0, 69795.0], [67.1, 69795.0], [67.2, 69798.0], [67.3, 69798.0], [67.4, 69807.0], [67.5, 69810.0], [67.6, 69810.0], [67.7, 69824.0], [67.8, 69824.0], [67.9, 69836.0], [68.0, 69851.0], [68.1, 69851.0], [68.2, 69856.0], [68.3, 69856.0], [68.4, 69857.0], [68.5, 69864.0], [68.6, 69864.0], [68.7, 69871.0], [68.8, 69871.0], [68.9, 69872.0], [69.0, 69885.0], [69.1, 69885.0], [69.2, 69893.0], [69.3, 69893.0], [69.4, 69899.0], [69.5, 69906.0], [69.6, 69906.0], [69.7, 69908.0], [69.8, 69908.0], [69.9, 69924.0], [70.0, 69929.0], [70.1, 69929.0], [70.2, 69944.0], [70.3, 69944.0], [70.4, 69948.0], [70.5, 69962.0], [70.6, 69962.0], [70.7, 69974.0], [70.8, 69974.0], [70.9, 69982.0], [71.0, 69995.0], [71.1, 69995.0], [71.2, 69997.0], [71.3, 69997.0], [71.4, 70017.0], [71.5, 70043.0], [71.6, 70043.0], [71.7, 70071.0], [71.8, 70071.0], [71.9, 70076.0], [72.0, 70076.0], [72.1, 70076.0], [72.2, 70099.0], [72.3, 70099.0], [72.4, 70111.0], [72.5, 70115.0], [72.6, 70115.0], [72.7, 70121.0], [72.8, 70121.0], [72.9, 70133.0], [73.0, 70147.0], [73.1, 70147.0], [73.2, 70163.0], [73.3, 70163.0], [73.4, 70169.0], [73.5, 70172.0], [73.6, 70172.0], [73.7, 70172.0], [73.8, 70172.0], [73.9, 70173.0], [74.0, 70186.0], [74.1, 70186.0], [74.2, 70198.0], [74.3, 70198.0], [74.4, 70201.0], [74.5, 70201.0], [74.6, 70211.0], [74.7, 70212.0], [74.8, 70212.0], [74.9, 70213.0], [75.0, 70213.0], [75.1, 70228.0], [75.2, 70228.0], [75.3, 70228.0], [75.4, 70233.0], [75.5, 70233.0], [75.6, 70237.0], [75.7, 70246.0], [75.8, 70246.0], [75.9, 70259.0], [76.0, 70259.0], [76.1, 70264.0], [76.2, 70265.0], [76.3, 70265.0], [76.4, 70279.0], [76.5, 70279.0], [76.6, 70293.0], [76.7, 70298.0], [76.8, 70298.0], [76.9, 70298.0], [77.0, 70298.0], [77.1, 70302.0], [77.2, 70304.0], [77.3, 70304.0], [77.4, 70306.0], [77.5, 70306.0], [77.6, 70309.0], [77.7, 70318.0], [77.8, 70318.0], [77.9, 70319.0], [78.0, 70319.0], [78.1, 70333.0], [78.2, 70349.0], [78.3, 70349.0], [78.4, 70352.0], [78.5, 70352.0], [78.6, 70353.0], [78.7, 70357.0], [78.8, 70357.0], [78.9, 70364.0], [79.0, 70364.0], [79.1, 70368.0], [79.2, 70369.0], [79.3, 70369.0], [79.4, 70370.0], [79.5, 70370.0], [79.6, 70373.0], [79.7, 70385.0], [79.8, 70385.0], [79.9, 70395.0], [80.0, 70395.0], [80.1, 70443.0], [80.2, 70456.0], [80.3, 70456.0], [80.4, 70472.0], [80.5, 70472.0], [80.6, 70478.0], [80.7, 70483.0], [80.8, 70483.0], [80.9, 70509.0], [81.0, 70509.0], [81.1, 70513.0], [81.2, 70530.0], [81.3, 70530.0], [81.4, 70537.0], [81.5, 70537.0], [81.6, 70538.0], [81.7, 70541.0], [81.8, 70541.0], [81.9, 70555.0], [82.0, 70555.0], [82.1, 70575.0], [82.2, 70580.0], [82.3, 70580.0], [82.4, 70592.0], [82.5, 70592.0], [82.6, 70592.0], [82.7, 70592.0], [82.8, 70592.0], [82.9, 70612.0], [83.0, 70612.0], [83.1, 70614.0], [83.2, 70800.0], [83.3, 70800.0], [83.4, 70856.0], [83.5, 70856.0], [83.6, 70871.0], [83.7, 70887.0], [83.8, 70887.0], [83.9, 70888.0], [84.0, 70888.0], [84.1, 70904.0], [84.2, 70923.0], [84.3, 70923.0], [84.4, 70934.0], [84.5, 70934.0], [84.6, 70937.0], [84.7, 70949.0], [84.8, 70949.0], [84.9, 70954.0], [85.0, 70954.0], [85.1, 70982.0], [85.2, 70982.0], [85.3, 70982.0], [85.4, 70985.0], [85.5, 70985.0], [85.6, 71011.0], [85.7, 71026.0], [85.8, 71026.0], [85.9, 71035.0], [86.0, 71035.0], [86.1, 71062.0], [86.2, 71074.0], [86.3, 71074.0], [86.4, 71102.0], [86.5, 71102.0], [86.6, 71105.0], [86.7, 71149.0], [86.8, 71149.0], [86.9, 71155.0], [87.0, 71155.0], [87.1, 71165.0], [87.2, 71171.0], [87.3, 71171.0], [87.4, 71175.0], [87.5, 71175.0], [87.6, 71224.0], [87.7, 71234.0], [87.8, 71234.0], [87.9, 71234.0], [88.0, 71234.0], [88.1, 71244.0], [88.2, 71288.0], [88.3, 71288.0], [88.4, 71294.0], [88.5, 71294.0], [88.6, 71346.0], [88.7, 71364.0], [88.8, 71364.0], [88.9, 71371.0], [89.0, 71371.0], [89.1, 71372.0], [89.2, 71407.0], [89.3, 71407.0], [89.4, 71413.0], [89.5, 71413.0], [89.6, 71423.0], [89.7, 71423.0], [89.8, 71423.0], [89.9, 71428.0], [90.0, 71428.0], [90.1, 71455.0], [90.2, 71463.0], [90.3, 71463.0], [90.4, 71578.0], [90.5, 71578.0], [90.6, 71591.0], [90.7, 71620.0], [90.8, 71620.0], [90.9, 71629.0], [91.0, 71629.0], [91.1, 71658.0], [91.2, 71907.0], [91.3, 71907.0], [91.4, 71966.0], [91.5, 71966.0], [91.6, 71966.0], [91.7, 71973.0], [91.8, 71973.0], [91.9, 72045.0], [92.0, 72045.0], [92.1, 72051.0], [92.2, 72053.0], [92.3, 72053.0], [92.4, 72053.0], [92.5, 72053.0], [92.6, 72057.0], [92.7, 72058.0], [92.8, 72058.0], [92.9, 72069.0], [93.0, 72069.0], [93.1, 72092.0], [93.2, 72092.0], [93.3, 72092.0], [93.4, 72104.0], [93.5, 72104.0], [93.6, 72111.0], [93.7, 72127.0], [93.8, 72127.0], [93.9, 72146.0], [94.0, 72146.0], [94.1, 72169.0], [94.2, 72182.0], [94.3, 72182.0], [94.4, 72193.0], [94.5, 72193.0], [94.6, 72194.0], [94.7, 72201.0], [94.8, 72201.0], [94.9, 72217.0], [95.0, 72217.0], [95.1, 72218.0], [95.2, 72243.0], [95.3, 72243.0], [95.4, 72271.0], [95.5, 72271.0], [95.6, 72271.0], [95.7, 72281.0], [95.8, 72281.0], [95.9, 72295.0], [96.0, 72295.0], [96.1, 72308.0], [96.2, 72315.0], [96.3, 72315.0], [96.4, 72315.0], [96.5, 72315.0], [96.6, 72330.0], [96.7, 72330.0], [96.8, 72330.0], [96.9, 72358.0], [97.0, 72358.0], [97.1, 72366.0], [97.2, 72370.0], [97.3, 72370.0], [97.4, 72397.0], [97.5, 72397.0], [97.6, 72398.0], [97.7, 72410.0], [97.8, 72410.0], [97.9, 72439.0], [98.0, 72439.0], [98.1, 72441.0], [98.2, 72452.0], [98.3, 72452.0], [98.4, 72453.0], [98.5, 72453.0], [98.6, 72466.0], [98.7, 72478.0], [98.8, 72478.0], [98.9, 72491.0], [99.0, 72491.0], [99.1, 72505.0], [99.2, 72538.0], [99.3, 72538.0], [99.4, 72546.0], [99.5, 72546.0], [99.6, 72561.0], [99.7, 72761.0], [99.8, 72761.0], [99.9, 72850.0], [100.0, 72850.0]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 2300.0, "maxY": 53.0, "series": [{"data": [[70100.0, 8.0], [70700.0, 6.0], [70500.0, 5.0], [70300.0, 3.0], [70900.0, 2.0], [71100.0, 5.0], [71500.0, 9.0], [71700.0, 13.0], [72900.0, 1.0], [71900.0, 12.0], [72100.0, 14.0], [72300.0, 9.0], [72700.0, 8.0], [72500.0, 7.0], [71300.0, 6.0], [15900.0, 6.0], [16000.0, 12.0], [16200.0, 5.0], [16100.0, 13.0], [16300.0, 5.0], [17400.0, 3.0], [18000.0, 8.0], [17800.0, 15.0], [17900.0, 13.0], [17600.0, 14.0], [17700.0, 5.0], [17500.0, 1.0], [19300.0, 14.0], [19400.0, 20.0], [19200.0, 15.0], [19100.0, 11.0], [19000.0, 13.0], [18900.0, 8.0], [18800.0, 2.0], [19500.0, 17.0], [43000.0, 3.0], [42700.0, 6.0], [42600.0, 5.0], [42300.0, 7.0], [42900.0, 2.0], [42400.0, 7.0], [42200.0, 6.0], [42500.0, 8.0], [42800.0, 2.0], [43300.0, 3.0], [43200.0, 1.0], [50900.0, 16.0], [50700.0, 19.0], [50600.0, 18.0], [51000.0, 20.0], [51100.0, 17.0], [50800.0, 17.0], [51200.0, 13.0], [51400.0, 8.0], [51500.0, 5.0], [51300.0, 9.0], [51600.0, 4.0], [51700.0, 4.0], [70200.0, 7.0], [70000.0, 1.0], [71600.0, 6.0], [70600.0, 6.0], [70400.0, 6.0], [70800.0, 4.0], [71000.0, 1.0], [71200.0, 6.0], [71400.0, 6.0], [71800.0, 5.0], [72800.0, 4.0], [72000.0, 14.0], [72400.0, 10.0], [72600.0, 8.0], [72200.0, 8.0]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[2300.0, 1.0], [2400.0, 1.0], [2500.0, 9.0], [2600.0, 11.0], [2700.0, 9.0], [3500.0, 3.0], [3600.0, 1.0], [3700.0, 3.0], [3800.0, 5.0], [3900.0, 3.0], [4000.0, 5.0], [4100.0, 3.0], [4200.0, 1.0], [4300.0, 3.0], [4400.0, 6.0], [4500.0, 8.0], [4600.0, 3.0], [4800.0, 1.0], [4900.0, 7.0], [5000.0, 5.0], [5100.0, 1.0], [5200.0, 5.0], [5300.0, 2.0], [5400.0, 1.0], [5500.0, 1.0], [5800.0, 4.0], [6000.0, 12.0], [5900.0, 1.0], [6100.0, 4.0], [6300.0, 27.0], [6200.0, 24.0], [6500.0, 29.0], [6600.0, 33.0], [6400.0, 10.0], [6700.0, 25.0], [6800.0, 43.0], [6900.0, 53.0], [7000.0, 17.0], [7100.0, 20.0], [7200.0, 19.0], [7300.0, 12.0], [7400.0, 9.0], [7600.0, 8.0], [7500.0, 4.0], [7700.0, 12.0], [7800.0, 6.0], [7900.0, 8.0], [8100.0, 14.0], [8000.0, 20.0], [8400.0, 11.0], [8300.0, 17.0], [8600.0, 4.0], [8200.0, 17.0], [8700.0, 5.0], [8500.0, 12.0], [8800.0, 9.0], [8900.0, 7.0], [9200.0, 5.0], [9100.0, 1.0]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[8400.0, 39.0], [8200.0, 29.0], [8300.0, 27.0], [8500.0, 46.0], [8600.0, 45.0], [8700.0, 33.0], [8800.0, 16.0], [8900.0, 6.0], [9200.0, 22.0], [9100.0, 26.0], [9000.0, 26.0], [9400.0, 17.0], [9300.0, 19.0], [9500.0, 18.0], [9700.0, 19.0], [9600.0, 30.0], [9900.0, 9.0], [10200.0, 1.0], [9800.0, 12.0], [10000.0, 4.0], [10100.0, 2.0], [10300.0, 2.0], [10400.0, 1.0], [10700.0, 1.0], [6100.0, 19.0], [5900.0, 4.0], [6000.0, 16.0], [6200.0, 25.0], [6300.0, 19.0], [6600.0, 1.0], [6900.0, 4.0], [6800.0, 2.0], [7000.0, 3.0], [7200.0, 1.0], [7400.0, 2.0], [7600.0, 1.0], [7500.0, 3.0], [7700.0, 4.0], [7800.0, 6.0], [7900.0, 5.0], [8100.0, 19.0], [8000.0, 16.0]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[69900.0, 11.0], [69700.0, 4.0], [70500.0, 12.0], [70300.0, 18.0], [70100.0, 12.0], [70900.0, 9.0], [71100.0, 7.0], [71300.0, 4.0], [71500.0, 2.0], [71900.0, 4.0], [72300.0, 10.0], [72500.0, 4.0], [72700.0, 1.0], [72100.0, 8.0], [15700.0, 1.0], [15600.0, 1.0], [15800.0, 2.0], [16200.0, 15.0], [16000.0, 17.0], [16300.0, 11.0], [15900.0, 20.0], [16100.0, 16.0], [16400.0, 14.0], [23500.0, 6.0], [23900.0, 13.0], [24100.0, 25.0], [24000.0, 11.0], [23800.0, 8.0], [23600.0, 2.0], [24200.0, 28.0], [23700.0, 7.0], [25000.0, 1.0], [25300.0, 1.0], [25200.0, 1.0], [42700.0, 20.0], [42100.0, 8.0], [42200.0, 8.0], [41800.0, 3.0], [41900.0, 2.0], [42500.0, 9.0], [42600.0, 10.0], [42300.0, 11.0], [42400.0, 13.0], [42900.0, 1.0], [42800.0, 3.0], [42000.0, 7.0], [41700.0, 2.0], [43100.0, 2.0], [43300.0, 1.0], [49100.0, 11.0], [49300.0, 23.0], [49200.0, 19.0], [49400.0, 17.0], [50100.0, 4.0], [49600.0, 3.0], [50200.0, 1.0], [49500.0, 12.0], [50000.0, 6.0], [49800.0, 1.0], [49700.0, 3.0], [70000.0, 6.0], [69800.0, 13.0], [70200.0, 16.0], [70400.0, 5.0], [70800.0, 5.0], [70600.0, 2.0], [72800.0, 1.0], [72000.0, 9.0], [72200.0, 8.0], [72400.0, 8.0], [71200.0, 6.0], [71400.0, 7.0], [71600.0, 3.0], [71000.0, 5.0]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 72900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2400.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2400.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 203.21499999999997, "minX": 1.69236516E12, "maxY": 556.1340206185566, "series": [{"data": [[1.69236516E12, 556.1340206185566], [1.69236522E12, 261.1550695825051]], "isOverall": false, "label": "Thread Group for booking service", "isController": false}, {"data": [[1.69236516E12, 301.9983333333332]], "isOverall": false, "label": "Thread Group for doctor service", "isController": false}, {"data": [[1.69236516E12, 501.00999999999976], [1.69236522E12, 203.21499999999997]], "isOverall": false, "label": "Thread Group for payment service", "isController": false}, {"data": [[1.69236516E12, 302.88166666666626]], "isOverall": false, "label": "Thread Group for patient service", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69236522E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2430.0, "minX": 17.0, "maxY": 72862.0, "series": [{"data": [[17.0, 72393.66666666666], [18.0, 72443.66666666667], [19.0, 72862.0], [20.0, 72356.2], [21.0, 72818.0], [22.0, 72349.5], [24.0, 72338.0], [26.0, 72410.0], [28.0, 72185.0], [30.0, 72312.33333333333], [32.0, 72523.5], [34.0, 72634.0], [37.0, 72802.0], [36.0, 72488.0], [39.0, 72449.0], [41.0, 72224.0], [40.0, 72262.0], [43.0, 72452.0], [45.0, 72445.0], [47.0, 72467.0], [49.0, 72497.5], [48.0, 72416.0], [50.0, 72503.0], [103.0, 72225.0], [101.0, 71968.0], [107.0, 71984.0], [106.0, 72129.0], [105.0, 71915.0], [104.0, 72388.0], [111.0, 72802.0], [109.0, 71873.5], [115.0, 72504.0], [114.0, 72362.33333333333], [119.0, 72019.0], [118.0, 71760.0], [117.0, 72138.0], [122.0, 72793.0], [121.0, 72018.0], [120.0, 71946.0], [125.0, 72089.0], [124.0, 72016.0], [129.0, 72408.0], [128.0, 72121.33333333333], [143.0, 72154.6], [151.0, 71989.0], [150.0, 72148.0], [149.0, 72128.0], [147.0, 72065.0], [146.0, 72087.0], [145.0, 72049.0], [144.0, 71931.0], [159.0, 71446.0], [158.0, 71437.0], [156.0, 71171.0], [155.0, 71706.0], [154.0, 71184.0], [153.0, 71693.0], [152.0, 71658.0], [167.0, 72022.0], [166.0, 71766.0], [165.0, 71630.0], [164.0, 71624.5], [162.0, 71253.0], [161.0, 71467.0], [160.0, 71677.0], [175.0, 71541.0], [174.0, 71405.0], [173.0, 71309.0], [172.0, 71712.0], [171.0, 71651.0], [170.0, 71213.0], [169.0, 71530.0], [168.0, 71531.0], [183.0, 71791.0], [182.0, 71828.0], [181.0, 71598.0], [180.0, 71377.0], [179.0, 71355.0], [178.0, 71550.0], [177.0, 71283.0], [176.0, 71307.0], [191.0, 71182.0], [190.0, 71457.0], [189.0, 71161.0], [188.0, 71681.0], [187.0, 71267.0], [186.0, 71560.0], [185.0, 71734.0], [184.0, 71585.0], [198.0, 71890.0], [197.0, 71761.0], [193.0, 71731.0], [192.0, 71205.0], [200.0, 71476.5], [255.0, 70561.5], [253.0, 70906.66666666667], [271.0, 70177.5], [266.0, 70309.0], [265.0, 70321.0], [264.0, 70248.0], [263.0, 70490.0], [256.0, 70822.0], [262.0, 70291.5], [260.0, 70691.5], [258.0, 70532.0], [257.0, 70718.0], [286.0, 70167.0], [287.0, 70691.5], [285.0, 70748.0], [275.0, 70121.0], [274.0, 70463.0], [272.0, 70362.0], [283.0, 70224.5], [282.0, 70366.0], [280.0, 70758.0], [279.0, 71054.0], [278.0, 70412.0], [276.0, 70884.0], [300.0, 70541.0], [297.0, 70075.0], [296.0, 70647.0], [295.0, 70703.0], [294.0, 70639.0], [293.0, 70293.0], [290.0, 70410.5], [289.0, 70257.0], [414.0, 51559.0], [413.0, 50839.0], [403.0, 51662.0], [402.0, 51117.0], [401.0, 51041.0], [411.0, 50884.0], [410.0, 51405.0], [409.0, 51177.0], [408.0, 50908.0], [407.0, 50687.0], [406.0, 50850.0], [405.0, 50802.0], [429.0, 51343.0], [430.0, 51068.0], [428.0, 51080.0], [427.0, 51193.0], [424.0, 51242.5], [423.0, 51369.0], [421.0, 50930.666666666664], [418.0, 51222.0], [417.0, 50696.0], [447.0, 50939.0], [445.0, 51614.0], [444.0, 50790.0], [442.0, 50934.666666666664], [439.0, 51007.666666666664], [436.0, 50748.0], [435.0, 51018.0], [433.0, 51407.0], [451.0, 51135.0], [463.0, 51068.0], [460.0, 51794.0], [459.0, 50745.0], [458.0, 51627.5], [456.0, 50912.666666666664], [455.0, 50890.0], [452.0, 51197.0], [450.0, 51449.0], [448.0, 51457.0], [477.0, 51476.0], [479.0, 50831.5], [476.0, 50961.5], [474.0, 50815.0], [473.0, 50912.0], [472.0, 50978.5], [470.0, 50961.0], [469.0, 50985.5], [467.0, 51407.666666666664], [464.0, 50690.0], [492.0, 50885.0], [494.0, 50728.0], [495.0, 50966.0], [493.0, 51289.0], [491.0, 51370.0], [490.0, 51018.666666666664], [487.0, 51117.0], [483.0, 50983.0], [486.0, 51072.0], [484.0, 51016.0], [499.0, 51210.0], [498.0, 50919.0], [497.0, 51163.0], [496.0, 50919.0], [531.0, 51052.4], [542.0, 50959.0], [540.0, 51259.0], [538.0, 51322.0], [536.0, 50824.666666666664], [512.0, 51023.0], [535.0, 51072.75], [534.0, 51012.36363636364], [533.0, 50998.5], [530.0, 51132.5], [550.0, 50814.0], [548.0, 50775.666666666664], [546.0, 50861.5], [544.0, 50975.0], [659.0, 42562.0], [671.0, 42612.5], [669.0, 42418.0], [665.0, 42504.0], [664.0, 42408.0], [663.0, 42450.0], [661.0, 42902.0], [660.0, 43084.0], [657.0, 42656.5], [656.0, 42285.0], [690.0, 42437.0], [702.0, 42629.5], [698.0, 42692.0], [697.0, 42601.5], [678.0, 42624.666666666664], [676.0, 42477.0], [675.0, 42596.0], [673.0, 43397.0], [672.0, 42545.0], [686.0, 42284.5], [684.0, 42420.5], [683.0, 42443.5], [681.0, 42798.5], [680.0, 43315.0], [695.0, 42516.333333333336], [693.0, 43300.0], [692.0, 42485.0], [689.0, 42582.0], [688.0, 42819.5], [704.0, 42613.75], [925.0, 19327.0], [927.0, 19331.0], [912.0, 19531.0], [915.0, 19381.0], [913.0, 19345.5], [923.0, 18981.0], [922.0, 19374.0], [921.0, 19204.0], [920.0, 19376.0], [910.0, 19518.0], [909.0, 19272.0], [905.0, 19493.0], [904.0, 19456.0], [919.0, 19466.0], [918.0, 19351.0], [917.0, 19268.0], [916.0, 18960.0], [956.0, 18959.0], [959.0, 19584.0], [945.0, 19010.0], [944.0, 19196.0], [947.0, 19408.0], [946.0, 19507.0], [949.0, 19330.0], [948.0, 19127.0], [958.0, 18883.0], [957.0, 18990.0], [955.0, 19517.0], [954.0, 19378.0], [953.0, 19505.0], [952.0, 19181.0], [943.0, 19332.0], [930.0, 19309.333333333332], [933.0, 19083.0], [932.0, 19500.666666666668], [935.0, 19513.0], [934.0, 19265.0], [942.0, 19078.0], [941.0, 19509.0], [940.0, 19198.0], [939.0, 19039.0], [938.0, 19544.0], [937.0, 19412.0], [936.0, 19525.0], [951.0, 19586.0], [950.0, 19008.0], [984.0, 19079.0], [988.0, 18984.0], [991.0, 19496.0], [978.0, 19466.0], [976.0, 19162.5], [980.0, 19479.0], [979.0, 19305.0], [990.0, 19480.0], [989.0, 19277.0], [987.0, 19292.0], [986.0, 19042.0], [985.0, 19196.0], [974.0, 19292.5], [961.0, 19491.0], [960.0, 19415.0], [963.0, 19099.0], [962.0, 19202.0], [966.0, 19441.0], [964.0, 18993.0], [972.0, 19107.0], [971.0, 18878.0], [970.0, 19106.0], [969.0, 19374.0], [968.0, 19124.5], [983.0, 19294.0], [982.0, 18981.0], [1016.0, 17884.0], [1021.0, 17944.0], [1022.0, 17984.0], [1010.0, 17886.0], [1009.0, 17701.5], [1019.0, 17872.0], [1018.0, 17662.0], [1017.0, 17935.0], [1007.0, 17918.0], [994.0, 19314.5], [992.0, 19415.0], [996.0, 19476.0], [995.0, 19364.0], [999.0, 19081.5], [997.0, 19451.0], [1006.0, 18056.5], [1004.0, 17930.0], [1003.0, 19306.0], [1002.0, 19411.0], [1001.0, 19208.0], [1000.0, 19249.0], [1015.0, 17810.5], [1013.0, 17973.0], [1012.0, 17719.0], [1011.0, 17910.0], [1074.0, 15982.666666666666], [1081.0, 16177.0], [1087.0, 16125.666666666666], [1057.0, 17709.0], [1062.0, 17944.666666666668], [1059.0, 17731.5], [1068.0, 16294.0], [1066.0, 16173.0], [1086.0, 16277.0], [1083.0, 16179.0], [1080.0, 16080.75], [1078.0, 16342.0], [1077.0, 16178.0], [1073.0, 16195.5], [1072.0, 16307.0], [1055.0, 17840.0], [1026.0, 17823.5], [1024.0, 17883.5], [1028.0, 17621.0], [1027.0, 17834.0], [1030.0, 17757.0], [1029.0, 17621.0], [1033.0, 17906.0], [1032.0, 17781.0], [1036.0, 17849.0], [1034.0, 17633.0], [1039.0, 17768.5], [1037.0, 17996.0], [1054.0, 17496.0], [1053.0, 17648.5], [1051.0, 17790.0], [1049.0, 17657.0], [1048.0, 18010.0], [1047.0, 17840.5], [1045.0, 17735.333333333332], [1042.0, 18024.0], [1041.0, 17670.0], [1040.0, 17619.0], [1098.0, 16071.0], [1103.0, 16022.0], [1102.0, 16100.25], [1099.0, 16185.0], [1097.0, 16246.0], [1094.0, 16082.0], [1093.0, 16024.0], [1092.0, 16038.0], [1091.0, 16000.0], [1090.0, 16111.0], [1089.0, 16093.0]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[562.1449999999993, 46268.9316666667]], "isOverall": false, "label": "payment-request-Aggregated", "isController": false}, {"data": [[1416.0, 9250.0], [1427.0, 8707.4], [1408.0, 8730.0], [1410.0, 8588.0], [1409.0, 8902.0], [1422.0, 9210.0], [1421.0, 8422.666666666666], [1418.0, 8501.5], [1415.0, 8637.0], [1414.0, 9252.0], [1413.0, 9164.0], [1412.0, 8894.0], [1534.0, 8195.0], [1531.0, 8399.0], [1528.0, 8167.0], [1527.0, 8369.0], [1526.0, 8529.0], [1525.0, 8310.0], [1524.0, 8218.0], [1592.0, 8454.0], [1596.0, 8246.0], [1571.0, 8419.0], [1570.0, 8615.666666666666], [1573.0, 8343.0], [1572.0, 8513.0], [1576.0, 8103.0], [1574.0, 8835.0], [1579.0, 8314.0], [1577.0, 8226.5], [1595.0, 8254.5], [1593.0, 7991.0], [1590.0, 8274.0], [1588.0, 8456.5], [1586.0, 8453.0], [1585.0, 8275.0], [1567.0, 8258.0], [1537.0, 8201.333333333334], [1540.0, 8906.0], [1539.0, 8943.5], [1543.0, 8548.0], [1541.0, 8028.0], [1545.0, 8012.0], [1544.0, 8319.0], [1548.0, 8155.0], [1546.0, 8010.0], [1551.0, 8020.0], [1550.0, 8343.5], [1565.0, 8085.0], [1564.0, 8439.0], [1563.0, 8467.0], [1562.0, 8138.0], [1560.0, 8530.5], [1558.0, 8169.5], [1556.0, 8861.0], [1555.0, 8512.0], [1553.0, 8133.5], [1583.0, 8095.5], [1581.0, 8456.0], [1634.0, 8209.5], [1650.0, 8333.6], [1643.0, 8288.0], [1639.0, 8775.0], [1636.0, 7928.0], [1615.0, 8304.0], [1614.0, 8728.0], [1613.0, 8097.0], [1612.0, 7956.0], [1611.0, 8620.5], [1609.0, 8197.75], [1603.0, 8532.0], [1602.0, 8376.0], [1601.0, 8297.666666666666], [1749.0, 8161.5], [1747.0, 7803.0], [1746.0, 8072.5], [1741.0, 7989.0], [1739.0, 8027.0], [1738.0, 7928.0], [1737.0, 8311.0], [1736.0, 8223.0], [1806.0, 7702.666666666667], [1852.0, 7374.25], [1849.0, 7491.0], [1847.0, 7152.0], [1805.0, 7583.0], [1804.0, 8417.5], [1800.0, 7714.0], [1799.0, 8091.5], [1798.0, 7781.0], [1864.0, 7103.5], [1885.0, 7302.0], [1919.0, 7212.0], [1918.0, 7213.5], [1869.0, 7015.0], [1868.0, 6993.0], [1867.0, 6901.5], [1865.0, 6865.0], [1862.0, 7425.0], [1861.0, 7194.0], [1860.0, 7120.0], [1858.0, 7296.0], [1857.0, 7559.25], [1856.0, 6946.0], [1892.0, 7213.0], [1888.0, 7203.333333333333], [1884.0, 6862.0], [1883.0, 7096.8], [1878.0, 7296.75], [1876.0, 7359.0], [1873.0, 7426.75], [1978.0, 6671.0], [1957.0, 7311.0], [1982.0, 6823.25], [1952.0, 7164.5], [1956.0, 7316.0], [1955.0, 7087.0], [1977.0, 6802.0], [1976.0, 6930.0], [1975.0, 6684.0], [1934.0, 7190.0], [1933.0, 7027.0], [1931.0, 7744.0], [1930.0, 7723.0], [1929.0, 7314.0], [1926.0, 6899.0], [1925.0, 6982.0], [1924.0, 7011.5], [1923.0, 7037.5], [1920.0, 7212.875], [1950.0, 7198.857142857142], [1949.0, 7627.0], [1944.0, 7139.0], [1939.0, 7139.0], [1938.0, 6989.0], [1937.0, 7215.0], [1936.0, 7025.0], [1962.0, 7326.333333333333], [1961.0, 7274.0], [1959.0, 7251.333333333333], [2034.0, 6376.0], [2041.0, 6833.0], [2047.0, 7011.0], [2017.0, 6975.0], [2016.0, 6311.0], [2020.0, 6337.0], [2018.0, 6609.0], [2038.0, 6732.0], [2037.0, 6443.0], [2036.0, 6592.0], [2033.0, 6644.5], [1999.0, 6912.5], [1997.0, 6932.0], [1996.0, 6733.0], [1994.0, 6520.0], [1993.0, 6440.0], [1990.0, 6275.0], [1989.0, 6321.0], [1988.0, 6795.0], [1986.0, 6661.0], [1985.0, 6796.0], [2015.0, 6567.0], [2014.0, 6807.4], [2009.0, 7198.0], [2008.0, 6837.0], [2007.0, 6645.0], [2006.0, 6620.0], [2004.0, 6852.0], [2003.0, 6257.0], [2002.0, 6827.0], [2001.0, 6481.5], [2031.0, 6325.0], [2030.0, 6794.699999999999], [2131.0, 6712.285714285714], [2138.0, 6131.0], [2150.0, 6511.333333333333], [2115.0, 6621.333333333333], [2114.0, 6806.0], [2119.0, 6546.5], [2117.0, 6751.0], [2128.0, 6970.0], [2120.0, 6865.0], [2133.0, 6652.5], [2147.0, 6149.0], [2146.0, 6364.333333333333], [2079.0, 6980.0], [2069.0, 6960.0], [2068.0, 6809.0], [2065.0, 6803.0], [2060.0, 6836.0], [2059.0, 6784.5], [2055.0, 6779.0], [2054.0, 6501.0], [2052.0, 7229.5], [2051.0, 6793.0], [2049.0, 6602.0], [2048.0, 7184.0], [2110.0, 6620.0], [2108.0, 6937.0], [2107.0, 6974.0], [2105.0, 6759.0], [2103.0, 6781.5], [2101.0, 6922.0], [2097.0, 6872.0], [2096.0, 6795.666666666667], [2090.0, 6957.0], [2087.0, 6843.6], [2086.0, 6733.0], [2084.0, 6821.666666666667], [2083.0, 6956.0], [2082.0, 6874.0], [2080.0, 6908.75], [2091.0, 6656.0], [2143.0, 6565.5], [2142.0, 6577.0], [2140.0, 6378.0], [2136.0, 6785.5], [2134.0, 6641.0], [2298.0, 6373.0], [2302.0, 6244.5], [2244.0, 6603.0], [2250.0, 6630.0], [2247.0, 6640.0], [2256.0, 6542.6], [2251.0, 6441.333333333333], [2260.0, 6242.0], [2257.0, 6320.0], [2271.0, 6338.0], [2265.0, 6232.0], [2264.0, 6262.0], [2301.0, 6372.0], [2299.0, 6236.0], [2296.0, 6305.5], [2294.0, 6300.0], [2292.0, 5726.0], [2291.0, 6002.0], [2290.0, 6239.0], [2287.0, 6019.5], [2285.0, 6068.857142857142], [2282.0, 6108.6], [2272.0, 6259.555555555556], [2201.0, 6735.0], [2199.0, 6734.0], [2238.0, 6473.0], [2237.0, 6729.0], [2234.0, 6558.0], [2228.0, 5846.0], [2224.0, 6364.5], [2223.0, 6281.0], [2375.0, 2658.0], [2390.0, 2622.8333333333335], [2400.0, 2455.0], [2334.0, 4384.5], [2332.0, 4620.0], [2330.0, 4595.5], [2329.0, 4569.0], [2326.0, 4492.5], [2324.0, 4426.0], [2321.0, 5007.0], [2320.0, 4914.333333333333], [2317.0, 5200.900000000001], [2307.0, 5095.0], [2304.0, 6271.0], [2367.0, 3674.0], [2366.0, 3583.5], [2364.0, 3751.3333333333335], [2361.0, 3836.0], [2360.0, 3872.0], [2359.0, 3861.0], [2358.0, 3998.0], [2357.0, 4011.5], [2355.0, 4218.0], [2353.0, 4121.5], [2351.0, 4064.0], [2349.0, 3956.5], [2347.0, 4039.0], [2346.0, 4021.0], [2345.0, 4928.25], [2341.0, 4495.833333333334], [2337.0, 4387.0], [2369.0, 3569.0], [2368.0, 3846.0], [2372.0, 2676.0], [2371.0, 2721.0], [2398.0, 2430.0], [2397.0, 2574.0], [2396.0, 2677.4285714285716], [2389.0, 2540.0], [2382.0, 2747.5], [2380.0, 2636.0], [2374.0, 2581.0], [2373.0, 2550.0]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[1992.079999999995, 6693.37833333333]], "isOverall": false, "label": "patient-request-Aggregated", "isController": false}, {"data": [[1212.0, 10034.0], [1215.0, 9915.0], [1214.0, 9618.0], [1213.0, 10425.0], [1210.0, 10191.5], [1208.0, 10154.0], [1207.0, 9908.0], [1205.0, 9896.0], [1204.0, 9809.0], [1201.0, 9741.0], [1274.0, 9276.0], [1279.0, 9513.0], [1251.0, 9793.5], [1249.0, 9264.0], [1255.0, 9436.0], [1253.0, 9526.0], [1257.0, 9843.0], [1256.0, 9725.5], [1260.0, 9699.0], [1258.0, 9484.0], [1263.0, 9705.0], [1261.0, 9658.0], [1278.0, 9807.0], [1276.0, 9459.0], [1273.0, 9563.0], [1272.0, 9422.0], [1271.0, 9367.0], [1270.0, 9789.0], [1269.0, 9535.0], [1267.0, 9457.0], [1266.0, 9675.0], [1264.0, 9522.0], [1247.0, 9623.0], [1219.0, 9712.5], [1217.0, 9892.5], [1221.0, 9843.0], [1220.0, 9843.0], [1226.0, 9909.333333333334], [1224.0, 9974.0], [1229.0, 9884.5], [1228.0, 9655.0], [1231.0, 9450.0], [1230.0, 9804.0], [1246.0, 9609.0], [1245.0, 9927.0], [1244.0, 9362.0], [1243.0, 9569.0], [1241.0, 9283.0], [1240.0, 9309.0], [1239.0, 9522.0], [1238.0, 9476.0], [1237.0, 9297.0], [1236.0, 9800.5], [1234.0, 10050.0], [1233.0, 9816.0], [1232.0, 9749.0], [1317.0, 9292.0], [1323.0, 9276.0], [1333.0, 9691.5], [1313.0, 9724.0], [1312.0, 9142.0], [1316.0, 9317.0], [1315.0, 9661.0], [1319.0, 9404.0], [1331.0, 9538.0], [1330.0, 9180.0], [1329.0, 9250.0], [1311.0, 9558.0], [1280.0, 9616.0], [1283.0, 9601.5], [1281.0, 9526.0], [1286.0, 9646.5], [1284.0, 9688.0], [1290.0, 9487.0], [1288.0, 9727.0], [1295.0, 9485.0], [1291.0, 9449.0], [1309.0, 9333.0], [1308.0, 9164.0], [1307.0, 9190.0], [1306.0, 9364.0], [1305.0, 9065.0], [1304.0, 9180.0], [1303.0, 9080.0], [1302.0, 9354.0], [1301.0, 9312.0], [1299.0, 9374.0], [1297.0, 9753.0], [1296.0, 9493.0], [1327.0, 9287.0], [1326.0, 9295.0], [1324.0, 9348.0], [1322.0, 9316.0], [1320.0, 9207.0], [1403.0, 8474.25], [1407.0, 8572.25], [1377.0, 9300.5], [1376.0, 9104.0], [1379.0, 9121.0], [1378.0, 9332.0], [1382.0, 9071.0], [1380.0, 9058.0], [1386.0, 9072.5], [1383.0, 9140.5], [1388.0, 8854.0], [1387.0, 9205.5], [1399.0, 8440.0], [1398.0, 8451.0], [1397.0, 9470.0], [1396.0, 8996.5], [1392.0, 8913.5], [1359.0, 9630.5], [1357.0, 9701.0], [1356.0, 9390.0], [1354.0, 9067.0], [1352.0, 9836.666666666666], [1351.0, 9464.0], [1349.0, 9462.857142857143], [1347.0, 9477.0], [1345.0, 9383.6], [1373.0, 9006.0], [1372.0, 9241.5], [1370.0, 9080.0], [1369.0, 9053.0], [1368.0, 9391.0], [1367.0, 9378.0], [1366.0, 9191.0], [1365.0, 9037.0], [1364.0, 9189.0], [1363.0, 9758.0], [1362.0, 9317.0], [1360.0, 9591.0], [1390.0, 8881.0], [1389.0, 8816.0], [1467.0, 8515.0], [1468.0, 8402.333333333334], [1443.0, 8515.5], [1440.0, 8629.0], [1448.0, 8335.0], [1444.0, 8454.0], [1451.0, 8926.333333333334], [1449.0, 8512.0], [1453.0, 9100.0], [1452.0, 8861.0], [1465.0, 8538.0], [1463.0, 8412.0], [1462.0, 8239.0], [1461.0, 8215.2], [1459.0, 8317.0], [1436.0, 8634.0], [1435.0, 8687.5], [1433.0, 8213.0], [1432.0, 8201.0], [1431.0, 8385.0], [1430.0, 8503.0], [1455.0, 8618.0], [1454.0, 8690.0], [1506.0, 9055.0], [1513.0, 8559.0], [1523.0, 8720.666666666666], [1520.0, 8395.0], [1487.0, 8367.0], [1485.0, 9034.0], [1483.0, 8784.0], [1479.0, 8900.8], [1472.0, 8333.0], [1502.0, 8881.5], [1500.0, 8394.0], [1499.0, 8681.0], [1497.0, 8540.0], [1496.0, 8590.666666666666], [1495.0, 8825.0], [1489.0, 8687.666666666666], [1517.0, 9227.0], [1516.0, 8465.0], [1515.0, 9064.333333333334], [1509.0, 8766.0], [1508.0, 8235.0], [1507.0, 8436.666666666666], [1505.0, 8466.0], [1504.0, 8888.0], [1654.0, 8597.5], [1659.0, 8084.0], [1663.0, 8153.0], [1636.0, 8010.0], [1632.0, 8706.0], [1640.0, 8162.0], [1639.0, 8542.5], [1645.0, 8585.5], [1642.0, 8311.0], [1662.0, 8527.0], [1660.0, 8255.0], [1658.0, 8470.0], [1657.0, 8648.0], [1655.0, 8798.0], [1652.0, 8268.5], [1605.0, 8591.0], [1604.0, 8256.0], [1630.0, 8070.0], [1628.0, 8376.0], [1627.0, 8485.0], [1626.0, 8647.0], [1624.0, 8167.0], [1623.0, 8077.0], [1622.0, 8413.0], [1620.0, 8811.5], [1618.0, 8406.0], [1617.0, 8041.0], [1616.0, 8707.0], [1723.0, 8648.333333333334], [1725.0, 8511.5], [1697.0, 8561.0], [1701.0, 8590.5], [1699.0, 8604.5], [1703.0, 8360.0], [1702.0, 8623.0], [1720.0, 8397.0], [1719.0, 8559.0], [1718.0, 8673.333333333332], [1712.0, 8719.0], [1692.0, 7892.0], [1666.0, 8493.0], [1668.0, 8654.0], [1667.0, 8566.0], [1670.0, 8815.0], [1669.0, 8206.0], [1672.0, 8815.0], [1671.0, 8675.0], [1677.0, 8563.0], [1674.0, 8751.0], [1679.0, 8741.0], [1678.0, 8484.0], [1691.0, 8668.0], [1689.0, 8607.666666666666], [1687.0, 8760.0], [1685.0, 8791.0], [1684.0, 8601.0], [1683.0, 8575.0], [1682.0, 8735.0], [1681.0, 8618.0], [1680.0, 8265.0], [1710.0, 7998.5], [1708.0, 8118.0], [1707.0, 8644.0], [1705.0, 8682.5], [1784.0, 8694.0], [1791.0, 8400.666666666666], [1761.0, 8673.0], [1760.0, 8277.0], [1764.0, 8245.5], [1763.0, 8620.0], [1767.0, 8608.0], [1766.0, 8311.0], [1771.0, 8663.0], [1769.0, 8565.0], [1787.0, 8030.0], [1785.0, 8694.0], [1783.0, 8529.0], [1782.0, 8464.666666666666], [1779.0, 8474.0], [1777.0, 8539.666666666666], [1758.0, 8585.0], [1729.0, 8607.0], [1728.0, 8490.333333333334], [1732.0, 8765.0], [1730.0, 8563.0], [1734.0, 8602.0], [1733.0, 8331.0], [1740.0, 8544.0], [1735.0, 8603.0], [1757.0, 7955.0], [1756.0, 8688.5], [1754.0, 8753.0], [1753.0, 8536.0], [1752.0, 8714.0], [1751.0, 8474.0], [1750.0, 8683.0], [1744.0, 8621.666666666666], [1774.0, 8671.5], [1772.0, 8079.0], [1829.0, 7505.0], [1834.0, 7867.333333333333], [1846.0, 7789.0], [1826.0, 8346.0], [1830.0, 8064.0], [1845.0, 7688.0], [1844.0, 7758.0], [1842.0, 7668.333333333333], [1816.0, 8452.666666666666], [1793.0, 8363.333333333334], [1807.0, 8539.0], [1796.0, 8331.333333333334], [1814.0, 8287.0], [1812.0, 8275.0], [1811.0, 8247.0], [1810.0, 8470.0], [1809.0, 8434.0], [1808.0, 8460.0], [1839.0, 7632.5], [1837.0, 7873.0], [1836.0, 8110.0], [1832.0, 7966.0], [1831.0, 7718.5], [1972.0, 6926.666666666667], [1970.0, 6871.0], [1968.0, 6990.666666666667], [1966.0, 6985.0], [1965.0, 7127.5], [2166.0, 6167.0], [2175.0, 6210.5], [2172.0, 6226.666666666667], [2167.0, 6305.0], [2164.0, 6223.75], [2160.0, 6080.0], [2159.0, 6251.75], [2157.0, 6333.0], [2156.0, 6274.0], [2152.0, 6295.0], [2237.0, 6054.5], [2243.0, 6066.5], [2241.0, 6157.0], [2239.0, 6458.0], [2176.0, 6027.0], [2178.0, 6264.0], [2177.0, 6222.75], [2182.0, 6242.5], [2180.0, 6240.0], [2186.0, 6245.0], [2183.0, 6284.0], [2192.0, 6270.0], [2188.0, 6270.0], [2196.0, 6210.25], [2193.0, 6258.8], [2200.0, 6187.0], [2197.0, 6307.0], [2203.0, 6001.0], [2201.0, 6109.0], [2235.0, 6200.0], [2232.0, 6200.0], [2231.0, 6076.0], [2230.0, 6147.5], [2229.0, 6171.0], [2227.0, 6154.0], [2225.0, 6072.666666666667], [2224.0, 6183.4], [2223.0, 6299.0], [2221.0, 6106.0]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[1612.9716666666682, 8466.22499999999]], "isOverall": false, "label": "doctor-request-Aggregated", "isController": false}, {"data": [[51.0, 72441.0], [52.0, 72398.0], [54.0, 72206.0], [71.0, 72201.0], [70.0, 72437.0], [69.0, 72347.33333333333], [75.0, 72466.0], [73.0, 72850.0], [76.0, 72342.33333333333], [83.0, 72155.25000000001], [81.0, 72373.5], [80.0, 72338.0], [86.0, 72416.0], [85.0, 72118.5], [91.0, 72281.0], [89.0, 72370.0], [88.0, 72057.0], [94.0, 72315.0], [93.0, 72053.0], [92.0, 72478.0], [98.0, 72243.0], [96.0, 72184.0], [100.0, 72163.75], [207.0, 70954.0], [206.0, 71329.2], [201.0, 71973.0], [215.0, 71589.0], [211.0, 70904.0], [210.0, 71434.66666666667], [222.0, 71196.0], [220.0, 71459.0], [218.0, 71487.5], [216.0, 71155.0], [239.0, 71175.0], [237.0, 71234.0], [236.0, 71062.0], [235.0, 70887.0], [234.0, 71372.0], [233.0, 71098.66666666667], [232.0, 71153.85714285714], [247.0, 71278.0], [246.0, 71234.0], [244.0, 71018.0], [242.0, 70979.0], [240.0, 71072.0], [250.0, 71244.0], [249.0, 71142.33333333333], [318.0, 70339.5], [317.0, 70485.5], [316.0, 70592.0], [314.0, 70279.16666666667], [315.0, 70555.0], [304.0, 70246.0], [326.0, 70326.42857142858], [323.0, 70349.8], [321.0, 69851.0], [366.0, 70172.0], [367.0, 70304.0], [365.0, 70258.0], [364.0, 70239.8], [363.0, 70275.0], [362.0, 70260.5], [361.0, 70094.0], [360.0, 70085.0], [359.0, 70128.0], [354.0, 70443.0], [358.0, 70304.5], [356.0, 69960.25], [371.0, 70198.0], [382.0, 70142.0], [381.0, 70121.0], [379.0, 70116.0], [377.0, 69893.0], [376.0, 70133.0], [374.0, 70211.0], [373.0, 70318.0], [372.0, 69871.0], [369.0, 69906.0], [368.0, 70212.0], [399.0, 69755.0], [395.0, 70466.5], [393.0, 70266.0], [391.0, 70167.5], [389.0, 70478.0], [388.0, 69976.0], [386.0, 70157.66666666667], [384.0, 70222.0], [400.0, 69989.0], [575.0, 49547.0], [562.0, 49420.0], [561.0, 49349.0], [560.0, 49369.0], [557.0, 49403.5], [555.0, 49367.0], [554.0, 49229.0], [553.0, 49732.5], [551.0, 50003.0], [600.0, 49303.25], [606.0, 49215.5], [607.0, 49529.0], [592.0, 49712.0], [605.0, 49142.0], [603.0, 49263.0], [602.0, 49335.5], [591.0, 49265.0], [577.0, 49540.28571428571], [579.0, 49418.0], [578.0, 49390.875], [581.0, 49209.0], [580.0, 49305.0], [583.0, 49497.0], [582.0, 49690.0], [590.0, 50164.0], [589.0, 49446.0], [588.0, 50088.0], [587.0, 49417.0], [586.0, 49399.0], [585.0, 49718.0], [584.0, 49358.0], [597.0, 49203.0], [596.0, 49538.0], [594.0, 50109.0], [593.0, 50095.0], [628.0, 49646.0], [633.0, 49147.0], [615.0, 49661.5], [613.0, 49228.0], [611.0, 49556.5], [609.0, 49184.0], [631.0, 50094.0], [630.0, 49357.0], [629.0, 49347.0], [627.0, 49592.0], [626.0, 49371.0], [623.0, 49243.0], [621.0, 49568.0], [620.0, 49332.0], [618.0, 49693.0], [617.0, 49273.0], [616.0, 49273.0], [654.0, 43276.5], [652.0, 43128.0], [651.0, 42744.0], [650.0, 49465.26666666666], [646.0, 49220.5], [643.0, 49548.0], [640.0, 49367.0], [733.0, 42752.0], [734.0, 42886.0], [723.0, 42293.0], [732.0, 42674.0], [731.0, 42388.0], [730.0, 42461.25], [729.0, 42563.0], [728.0, 42755.0], [710.0, 42673.5], [707.0, 42001.0], [706.0, 42783.0], [705.0, 42288.0], [717.0, 42595.0], [716.0, 42810.0], [714.0, 42550.0], [712.0, 42503.0], [727.0, 42493.0], [726.0, 42203.666666666664], [763.0, 42012.666666666664], [756.0, 42405.333333333336], [739.0, 42776.0], [738.0, 42641.5], [736.0, 42260.0], [787.0, 42173.0], [796.0, 42539.875], [798.0, 42134.0], [786.0, 42347.75], [785.0, 42263.71428571428], [795.0, 42784.0], [794.0, 42245.0], [793.0, 42217.0], [782.0, 42218.0], [781.0, 42247.75], [780.0, 42415.0], [791.0, 42688.0], [790.0, 42709.0], [789.0, 42116.0], [820.0, 23557.0], [825.0, 23825.0], [824.0, 24268.0], [806.0, 24086.0], [803.0, 25210.0], [801.0, 25247.0], [800.0, 42481.26315789474], [823.0, 23981.0], [822.0, 23947.0], [821.0, 24019.5], [818.0, 24131.0], [816.0, 24130.333333333332], [813.0, 23967.0], [812.0, 24147.0], [811.0, 24173.0], [810.0, 23762.0], [809.0, 24120.333333333332], [808.0, 24261.0], [856.0, 24050.5], [852.0, 23716.5], [850.0, 23555.0], [893.0, 23988.333333333332], [895.0, 24202.0], [892.0, 24049.75], [891.0, 23972.636363636364], [886.0, 24118.700000000004], [888.0, 24043.571428571428], [879.0, 24216.0], [878.0, 24203.0], [873.0, 24265.0], [885.0, 23993.0], [887.0, 24117.14285714286], [889.0, 24055.5], [890.0, 24195.5], [903.0, 24120.85714285714], [902.0, 23847.0], [901.0, 23674.0], [900.0, 23886.0], [899.0, 24123.0], [898.0, 23932.0], [897.0, 24195.0], [1128.0, 16119.0], [1146.0, 16135.444444444445], [1123.0, 16415.0], [1120.0, 16440.0], [1145.0, 16135.0], [1144.0, 15941.0], [1143.0, 16321.0], [1118.0, 16306.5], [1109.0, 16404.0], [1108.0, 16352.333333333334], [1107.0, 16244.0], [1133.0, 16401.0], [1130.0, 16421.0], [1129.0, 15968.0], [1126.0, 16206.0], [1127.0, 16296.0], [1184.0, 15915.0], [1191.0, 15985.166666666666], [1200.0, 16254.25], [1164.0, 16247.5], [1162.0, 16187.5], [1161.0, 15917.0], [1159.0, 16102.0], [1157.0, 15996.0], [1156.0, 16227.666666666666], [1155.0, 16299.0], [1153.0, 16289.0], [1152.0, 16126.0], [1198.0, 16194.5], [1196.0, 16045.5], [1194.0, 15984.0], [1190.0, 16071.333333333334], [1188.0, 15894.5], [1187.0, 15938.0], [1185.0, 16312.0], [1183.0, 16017.166666666666], [1182.0, 15974.0], [1171.0, 15922.0], [1170.0, 16208.0], [1168.0, 15916.0]], "isOverall": false, "label": "booking-request", "isController": false}, {"data": [[649.1749999999997, 45726.541666666635]], "isOverall": false, "label": "booking-request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2926.366666666667, "minX": 1.69236516E12, "maxY": 8610.35, "series": [{"data": [[1.69236516E12, 8610.35], [1.69236522E12, 7399.65]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69236516E12, 4823.633333333333], [1.69236522E12, 2926.366666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69236522E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6693.37833333333, "minX": 1.69236516E12, "maxY": 60300.34999999999, "series": [{"data": [[1.69236516E12, 18206.09499999998], [1.69236522E12, 60300.34999999999]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[1.69236516E12, 6693.37833333333]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[1.69236516E12, 8466.22499999999]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[1.69236516E12, 16154.463917525776], [1.69236522E12, 51429.3081510934]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69236522E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6631.959999999999, "minX": 1.69236516E12, "maxY": 59626.529999999984, "series": [{"data": [[1.69236516E12, 17747.02], [1.69236522E12, 59626.529999999984]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[1.69236516E12, 6631.959999999999]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[1.69236516E12, 8306.708333333343]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[1.69236516E12, 15563.701030927838], [1.69236522E12, 50462.566600397644]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69236522E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.6699999999999999, "minX": 1.69236516E12, "maxY": 2.3683333333333327, "series": [{"data": [[1.69236516E12, 0.8800000000000003], [1.69236522E12, 0.6699999999999999]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[1.69236516E12, 2.3683333333333327]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[1.69236516E12, 0.9933333333333335]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[1.69236516E12, 0.958762886597938], [1.69236522E12, 0.8449304174950302]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69236522E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2376.0, "minX": 1.69236516E12, "maxY": 72938.0, "series": [{"data": [[1.69236516E12, 19586.0], [1.69236522E12, 72938.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69236516E12, 17635.4], [1.69236522E12, 72187.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69236516E12, 19507.04], [1.69236522E12, 72742.92]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69236516E12, 19127.0], [1.69236522E12, 72443.4]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69236516E12, 2376.0], [1.69236522E12, 23525.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69236516E12, 8386.0], [1.69236522E12, 51135.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69236522E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2633.0, "minX": 3.0, "maxY": 71183.0, "series": [{"data": [[138.0, 16126.0], [146.0, 7279.0], [36.0, 9892.0], [150.0, 61777.0], [144.0, 71183.0], [42.0, 4766.5], [171.0, 9354.0], [48.0, 6262.0], [3.0, 25247.0], [54.0, 42591.5], [59.0, 17859.0], [294.0, 6596.5], [23.0, 3877.0], [96.0, 42459.5], [409.0, 8473.0], [100.0, 24133.5], [106.0, 70228.0], [31.0, 2633.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 409.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2599.0, "minX": 3.0, "maxY": 70526.5, "series": [{"data": [[138.0, 15357.0], [146.0, 7050.5], [36.0, 9892.0], [150.0, 61338.0], [144.0, 70526.5], [42.0, 4743.0], [171.0, 9342.0], [48.0, 6211.0], [3.0, 24562.0], [54.0, 40754.0], [59.0, 17721.0], [294.0, 6539.0], [23.0, 3877.0], [96.0, 41432.5], [409.0, 8470.0], [100.0, 22842.0], [106.0, 69058.0], [31.0, 2599.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 409.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.69236516E12, "maxY": 40.0, "series": [{"data": [[1.69236516E12, 40.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69236516E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 15.05, "minX": 1.69236516E12, "maxY": 24.95, "series": [{"data": [[1.69236516E12, 24.95], [1.69236522E12, 15.05]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69236522E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6166666666666667, "minX": 1.69236516E12, "maxY": 10.0, "series": [{"data": [[1.69236516E12, 10.0]], "isOverall": false, "label": "doctor-request-success", "isController": false}, {"data": [[1.69236516E12, 3.3333333333333335], [1.69236522E12, 6.666666666666667]], "isOverall": false, "label": "payment-request-success", "isController": false}, {"data": [[1.69236516E12, 10.0]], "isOverall": false, "label": "patient-request-success", "isController": false}, {"data": [[1.69236516E12, 1.6166666666666667], [1.69236522E12, 8.383333333333333]], "isOverall": false, "label": "booking-request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69236522E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 15.05, "minX": 1.69236516E12, "maxY": 24.95, "series": [{"data": [[1.69236516E12, 24.95], [1.69236522E12, 15.05]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69236522E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

