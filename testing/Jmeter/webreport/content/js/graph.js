/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 1588.0, "series": [{"data": [[0.0, 11.0], [0.1, 11.0], [0.2, 12.0], [0.3, 12.0], [0.4, 12.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 13.0], [0.9, 13.0], [1.0, 13.0], [1.1, 13.0], [1.2, 14.0], [1.3, 14.0], [1.4, 14.0], [1.5, 15.0], [1.6, 15.0], [1.7, 16.0], [1.8, 16.0], [1.9, 19.0], [2.0, 21.0], [2.1, 21.0], [2.2, 21.0], [2.3, 21.0], [2.4, 21.0], [2.5, 21.0], [2.6, 21.0], [2.7, 21.0], [2.8, 21.0], [2.9, 22.0], [3.0, 22.0], [3.1, 22.0], [3.2, 23.0], [3.3, 23.0], [3.4, 23.0], [3.5, 23.0], [3.6, 25.0], [3.7, 25.0], [3.8, 25.0], [3.9, 26.0], [4.0, 26.0], [4.1, 27.0], [4.2, 27.0], [4.3, 27.0], [4.4, 27.0], [4.5, 27.0], [4.6, 28.0], [4.7, 29.0], [4.8, 29.0], [4.9, 30.0], [5.0, 30.0], [5.1, 31.0], [5.2, 32.0], [5.3, 32.0], [5.4, 33.0], [5.5, 33.0], [5.6, 33.0], [5.7, 33.0], [5.8, 33.0], [5.9, 34.0], [6.0, 34.0], [6.1, 35.0], [6.2, 35.0], [6.3, 35.0], [6.4, 36.0], [6.5, 36.0], [6.6, 37.0], [6.7, 37.0], [6.8, 37.0], [6.9, 37.0], [7.0, 37.0], [7.1, 38.0], [7.2, 38.0], [7.3, 38.0], [7.4, 39.0], [7.5, 39.0], [7.6, 39.0], [7.7, 41.0], [7.8, 41.0], [7.9, 42.0], [8.0, 42.0], [8.1, 43.0], [8.2, 43.0], [8.3, 43.0], [8.4, 45.0], [8.5, 45.0], [8.6, 45.0], [8.7, 46.0], [8.8, 46.0], [8.9, 46.0], [9.0, 46.0], [9.1, 47.0], [9.2, 47.0], [9.3, 47.0], [9.4, 47.0], [9.5, 47.0], [9.6, 47.0], [9.7, 48.0], [9.8, 48.0], [9.9, 48.0], [10.0, 48.0], [10.1, 48.0], [10.2, 49.0], [10.3, 49.0], [10.4, 50.0], [10.5, 50.0], [10.6, 50.0], [10.7, 50.0], [10.8, 50.0], [10.9, 51.0], [11.0, 51.0], [11.1, 52.0], [11.2, 52.0], [11.3, 52.0], [11.4, 52.0], [11.5, 52.0], [11.6, 52.0], [11.7, 52.0], [11.8, 52.0], [11.9, 52.0], [12.0, 52.0], [12.1, 53.0], [12.2, 53.0], [12.3, 53.0], [12.4, 53.0], [12.5, 53.0], [12.6, 53.0], [12.7, 54.0], [12.8, 54.0], [12.9, 54.0], [13.0, 54.0], [13.1, 55.0], [13.2, 55.0], [13.3, 55.0], [13.4, 55.0], [13.5, 55.0], [13.6, 56.0], [13.7, 56.0], [13.8, 56.0], [13.9, 57.0], [14.0, 57.0], [14.1, 57.0], [14.2, 58.0], [14.3, 58.0], [14.4, 59.0], [14.5, 59.0], [14.6, 59.0], [14.7, 59.0], [14.8, 59.0], [14.9, 60.0], [15.0, 60.0], [15.1, 60.0], [15.2, 61.0], [15.3, 61.0], [15.4, 61.0], [15.5, 61.0], [15.6, 61.0], [15.7, 61.0], [15.8, 61.0], [15.9, 62.0], [16.0, 62.0], [16.1, 62.0], [16.2, 62.0], [16.3, 62.0], [16.4, 62.0], [16.5, 62.0], [16.6, 63.0], [16.7, 63.0], [16.8, 63.0], [16.9, 63.0], [17.0, 63.0], [17.1, 63.0], [17.2, 63.0], [17.3, 63.0], [17.4, 63.0], [17.5, 63.0], [17.6, 63.0], [17.7, 63.0], [17.8, 63.0], [17.9, 64.0], [18.0, 64.0], [18.1, 64.0], [18.2, 64.0], [18.3, 64.0], [18.4, 64.0], [18.5, 64.0], [18.6, 65.0], [18.7, 65.0], [18.8, 65.0], [18.9, 65.0], [19.0, 65.0], [19.1, 67.0], [19.2, 67.0], [19.3, 67.0], [19.4, 67.0], [19.5, 67.0], [19.6, 68.0], [19.7, 68.0], [19.8, 68.0], [19.9, 68.0], [20.0, 68.0], [20.1, 68.0], [20.2, 68.0], [20.3, 68.0], [20.4, 69.0], [20.5, 69.0], [20.6, 70.0], [20.7, 70.0], [20.8, 70.0], [20.9, 70.0], [21.0, 70.0], [21.1, 70.0], [21.2, 70.0], [21.3, 70.0], [21.4, 71.0], [21.5, 71.0], [21.6, 71.0], [21.7, 72.0], [21.8, 72.0], [21.9, 72.0], [22.0, 72.0], [22.1, 72.0], [22.2, 72.0], [22.3, 72.0], [22.4, 73.0], [22.5, 73.0], [22.6, 73.0], [22.7, 73.0], [22.8, 73.0], [22.9, 73.0], [23.0, 73.0], [23.1, 74.0], [23.2, 74.0], [23.3, 74.0], [23.4, 74.0], [23.5, 74.0], [23.6, 74.0], [23.7, 74.0], [23.8, 74.0], [23.9, 74.0], [24.0, 74.0], [24.1, 75.0], [24.2, 75.0], [24.3, 75.0], [24.4, 75.0], [24.5, 75.0], [24.6, 76.0], [24.7, 76.0], [24.8, 76.0], [24.9, 76.0], [25.0, 76.0], [25.1, 77.0], [25.2, 77.0], [25.3, 77.0], [25.4, 77.0], [25.5, 77.0], [25.6, 78.0], [25.7, 78.0], [25.8, 78.0], [25.9, 78.0], [26.0, 78.0], [26.1, 78.0], [26.2, 78.0], [26.3, 78.0], [26.4, 79.0], [26.5, 79.0], [26.6, 79.0], [26.7, 79.0], [26.8, 79.0], [26.9, 79.0], [27.0, 79.0], [27.1, 79.0], [27.2, 79.0], [27.3, 79.0], [27.4, 80.0], [27.5, 80.0], [27.6, 81.0], [27.7, 81.0], [27.8, 81.0], [27.9, 81.0], [28.0, 81.0], [28.1, 81.0], [28.2, 81.0], [28.3, 81.0], [28.4, 81.0], [28.5, 81.0], [28.6, 81.0], [28.7, 81.0], [28.8, 81.0], [28.9, 81.0], [29.0, 81.0], [29.1, 81.0], [29.2, 82.0], [29.3, 82.0], [29.4, 82.0], [29.5, 82.0], [29.6, 82.0], [29.7, 83.0], [29.8, 83.0], [29.9, 83.0], [30.0, 83.0], [30.1, 83.0], [30.2, 84.0], [30.3, 84.0], [30.4, 84.0], [30.5, 84.0], [30.6, 84.0], [30.7, 85.0], [30.8, 85.0], [30.9, 85.0], [31.0, 85.0], [31.1, 86.0], [31.2, 86.0], [31.3, 86.0], [31.4, 87.0], [31.5, 87.0], [31.6, 88.0], [31.7, 88.0], [31.8, 88.0], [31.9, 88.0], [32.0, 89.0], [32.1, 89.0], [32.2, 89.0], [32.3, 89.0], [32.4, 89.0], [32.5, 90.0], [32.6, 90.0], [32.7, 91.0], [32.8, 91.0], [32.9, 91.0], [33.0, 91.0], [33.1, 91.0], [33.2, 92.0], [33.3, 92.0], [33.4, 92.0], [33.5, 93.0], [33.6, 93.0], [33.7, 93.0], [33.8, 93.0], [33.9, 93.0], [34.0, 93.0], [34.1, 93.0], [34.2, 94.0], [34.3, 94.0], [34.4, 94.0], [34.5, 94.0], [34.6, 94.0], [34.7, 94.0], [34.8, 94.0], [34.9, 94.0], [35.0, 95.0], [35.1, 95.0], [35.2, 96.0], [35.3, 96.0], [35.4, 96.0], [35.5, 96.0], [35.6, 96.0], [35.7, 97.0], [35.8, 97.0], [35.9, 97.0], [36.0, 98.0], [36.1, 98.0], [36.2, 98.0], [36.3, 98.0], [36.4, 98.0], [36.5, 98.0], [36.6, 98.0], [36.7, 100.0], [36.8, 100.0], [36.9, 100.0], [37.0, 102.0], [37.1, 102.0], [37.2, 102.0], [37.3, 102.0], [37.4, 103.0], [37.5, 105.0], [37.6, 105.0], [37.7, 108.0], [37.8, 108.0], [37.9, 110.0], [38.0, 110.0], [38.1, 110.0], [38.2, 110.0], [38.3, 110.0], [38.4, 111.0], [38.5, 112.0], [38.6, 112.0], [38.7, 112.0], [38.8, 112.0], [38.9, 113.0], [39.0, 113.0], [39.1, 113.0], [39.2, 114.0], [39.3, 114.0], [39.4, 114.0], [39.5, 114.0], [39.6, 114.0], [39.7, 114.0], [39.8, 114.0], [39.9, 114.0], [40.0, 115.0], [40.1, 115.0], [40.2, 116.0], [40.3, 116.0], [40.4, 117.0], [40.5, 117.0], [40.6, 117.0], [40.7, 118.0], [40.8, 118.0], [40.9, 119.0], [41.0, 119.0], [41.1, 119.0], [41.2, 119.0], [41.3, 119.0], [41.4, 120.0], [41.5, 120.0], [41.6, 120.0], [41.7, 120.0], [41.8, 120.0], [41.9, 121.0], [42.0, 121.0], [42.1, 121.0], [42.2, 121.0], [42.3, 121.0], [42.4, 123.0], [42.5, 123.0], [42.6, 123.0], [42.7, 123.0], [42.8, 123.0], [42.9, 123.0], [43.0, 124.0], [43.1, 124.0], [43.2, 125.0], [43.3, 125.0], [43.4, 125.0], [43.5, 125.0], [43.6, 125.0], [43.7, 125.0], [43.8, 125.0], [43.9, 125.0], [44.0, 125.0], [44.1, 125.0], [44.2, 126.0], [44.3, 126.0], [44.4, 126.0], [44.5, 126.0], [44.6, 126.0], [44.7, 126.0], [44.8, 126.0], [44.9, 127.0], [45.0, 127.0], [45.1, 127.0], [45.2, 127.0], [45.3, 127.0], [45.4, 127.0], [45.5, 128.0], [45.6, 128.0], [45.7, 128.0], [45.8, 128.0], [45.9, 129.0], [46.0, 129.0], [46.1, 129.0], [46.2, 129.0], [46.3, 129.0], [46.4, 129.0], [46.5, 129.0], [46.6, 129.0], [46.7, 129.0], [46.8, 129.0], [46.9, 129.0], [47.0, 129.0], [47.1, 129.0], [47.2, 130.0], [47.3, 130.0], [47.4, 131.0], [47.5, 131.0], [47.6, 131.0], [47.7, 131.0], [47.8, 131.0], [47.9, 131.0], [48.0, 131.0], [48.1, 131.0], [48.2, 132.0], [48.3, 132.0], [48.4, 132.0], [48.5, 132.0], [48.6, 132.0], [48.7, 133.0], [48.8, 133.0], [48.9, 133.0], [49.0, 134.0], [49.1, 134.0], [49.2, 134.0], [49.3, 134.0], [49.4, 134.0], [49.5, 135.0], [49.6, 135.0], [49.7, 135.0], [49.8, 135.0], [49.9, 135.0], [50.0, 135.0], [50.1, 135.0], [50.2, 136.0], [50.3, 136.0], [50.4, 136.0], [50.5, 136.0], [50.6, 136.0], [50.7, 136.0], [50.8, 136.0], [50.9, 136.0], [51.0, 137.0], [51.1, 137.0], [51.2, 137.0], [51.3, 137.0], [51.4, 137.0], [51.5, 137.0], [51.6, 137.0], [51.7, 138.0], [51.8, 138.0], [51.9, 138.0], [52.0, 140.0], [52.1, 140.0], [52.2, 140.0], [52.3, 140.0], [52.4, 141.0], [52.5, 141.0], [52.6, 141.0], [52.7, 141.0], [52.8, 141.0], [52.9, 143.0], [53.0, 143.0], [53.1, 143.0], [53.2, 144.0], [53.3, 144.0], [53.4, 144.0], [53.5, 144.0], [53.6, 144.0], [53.7, 144.0], [53.8, 144.0], [53.9, 145.0], [54.0, 145.0], [54.1, 145.0], [54.2, 145.0], [54.3, 145.0], [54.4, 145.0], [54.5, 145.0], [54.6, 145.0], [54.7, 146.0], [54.8, 146.0], [54.9, 147.0], [55.0, 147.0], [55.1, 147.0], [55.2, 148.0], [55.3, 148.0], [55.4, 148.0], [55.5, 149.0], [55.6, 149.0], [55.7, 149.0], [55.8, 149.0], [55.9, 149.0], [56.0, 149.0], [56.1, 149.0], [56.2, 149.0], [56.3, 149.0], [56.4, 149.0], [56.5, 150.0], [56.6, 150.0], [56.7, 150.0], [56.8, 150.0], [56.9, 150.0], [57.0, 151.0], [57.1, 151.0], [57.2, 151.0], [57.3, 151.0], [57.4, 151.0], [57.5, 152.0], [57.6, 152.0], [57.7, 153.0], [57.8, 153.0], [57.9, 154.0], [58.0, 156.0], [58.1, 156.0], [58.2, 157.0], [58.3, 157.0], [58.4, 157.0], [58.5, 157.0], [58.6, 157.0], [58.7, 157.0], [58.8, 157.0], [58.9, 157.0], [59.0, 158.0], [59.1, 158.0], [59.2, 158.0], [59.3, 158.0], [59.4, 158.0], [59.5, 158.0], [59.6, 158.0], [59.7, 159.0], [59.8, 159.0], [59.9, 159.0], [60.0, 160.0], [60.1, 160.0], [60.2, 161.0], [60.3, 161.0], [60.4, 161.0], [60.5, 164.0], [60.6, 164.0], [60.7, 166.0], [60.8, 166.0], [60.9, 166.0], [61.0, 167.0], [61.1, 167.0], [61.2, 167.0], [61.3, 167.0], [61.4, 168.0], [61.5, 168.0], [61.6, 168.0], [61.7, 168.0], [61.8, 168.0], [61.9, 169.0], [62.0, 170.0], [62.1, 170.0], [62.2, 170.0], [62.3, 170.0], [62.4, 170.0], [62.5, 171.0], [62.6, 171.0], [62.7, 171.0], [62.8, 171.0], [62.9, 171.0], [63.0, 171.0], [63.1, 171.0], [63.2, 172.0], [63.3, 172.0], [63.4, 172.0], [63.5, 173.0], [63.6, 173.0], [63.7, 174.0], [63.8, 174.0], [63.9, 174.0], [64.0, 174.0], [64.1, 174.0], [64.2, 174.0], [64.3, 174.0], [64.4, 174.0], [64.5, 175.0], [64.6, 175.0], [64.7, 175.0], [64.8, 175.0], [64.9, 175.0], [65.0, 175.0], [65.1, 175.0], [65.2, 175.0], [65.3, 175.0], [65.4, 176.0], [65.5, 176.0], [65.6, 176.0], [65.7, 177.0], [65.8, 177.0], [65.9, 177.0], [66.0, 177.0], [66.1, 177.0], [66.2, 178.0], [66.3, 178.0], [66.4, 179.0], [66.5, 180.0], [66.6, 180.0], [66.7, 181.0], [66.8, 181.0], [66.9, 181.0], [67.0, 182.0], [67.1, 182.0], [67.2, 182.0], [67.3, 182.0], [67.4, 182.0], [67.5, 183.0], [67.6, 183.0], [67.7, 184.0], [67.8, 184.0], [67.9, 184.0], [68.0, 185.0], [68.1, 185.0], [68.2, 186.0], [68.3, 186.0], [68.4, 187.0], [68.5, 188.0], [68.6, 188.0], [68.7, 189.0], [68.8, 189.0], [68.9, 189.0], [69.0, 189.0], [69.1, 189.0], [69.2, 190.0], [69.3, 190.0], [69.4, 190.0], [69.5, 190.0], [69.6, 190.0], [69.7, 190.0], [69.8, 190.0], [69.9, 191.0], [70.0, 191.0], [70.1, 191.0], [70.2, 191.0], [70.3, 191.0], [70.4, 192.0], [70.5, 192.0], [70.6, 192.0], [70.7, 192.0], [70.8, 192.0], [70.9, 193.0], [71.0, 193.0], [71.1, 193.0], [71.2, 193.0], [71.3, 193.0], [71.4, 194.0], [71.5, 194.0], [71.6, 195.0], [71.7, 195.0], [71.8, 195.0], [71.9, 197.0], [72.0, 197.0], [72.1, 197.0], [72.2, 199.0], [72.3, 199.0], [72.4, 199.0], [72.5, 199.0], [72.6, 199.0], [72.7, 201.0], [72.8, 201.0], [72.9, 201.0], [73.0, 202.0], [73.1, 202.0], [73.2, 203.0], [73.3, 203.0], [73.4, 204.0], [73.5, 204.0], [73.6, 205.0], [73.7, 205.0], [73.8, 205.0], [73.9, 205.0], [74.0, 205.0], [74.1, 206.0], [74.2, 206.0], [74.3, 206.0], [74.4, 208.0], [74.5, 208.0], [74.6, 209.0], [74.7, 211.0], [74.8, 211.0], [74.9, 212.0], [75.0, 212.0], [75.1, 212.0], [75.2, 215.0], [75.3, 215.0], [75.4, 215.0], [75.5, 215.0], [75.6, 216.0], [75.7, 217.0], [75.8, 217.0], [75.9, 219.0], [76.0, 219.0], [76.1, 219.0], [76.2, 221.0], [76.3, 221.0], [76.4, 223.0], [76.5, 223.0], [76.6, 226.0], [76.7, 229.0], [76.8, 229.0], [76.9, 231.0], [77.0, 231.0], [77.1, 232.0], [77.2, 232.0], [77.3, 232.0], [77.4, 233.0], [77.5, 233.0], [77.6, 233.0], [77.7, 233.0], [77.8, 233.0], [77.9, 235.0], [78.0, 235.0], [78.1, 236.0], [78.2, 238.0], [78.3, 238.0], [78.4, 238.0], [78.5, 238.0], [78.6, 240.0], [78.7, 241.0], [78.8, 241.0], [78.9, 243.0], [79.0, 243.0], [79.1, 244.0], [79.2, 247.0], [79.3, 247.0], [79.4, 247.0], [79.5, 247.0], [79.6, 247.0], [79.7, 249.0], [79.8, 249.0], [79.9, 250.0], [80.0, 250.0], [80.1, 252.0], [80.2, 252.0], [80.3, 252.0], [80.4, 252.0], [80.5, 252.0], [80.6, 253.0], [80.7, 254.0], [80.8, 254.0], [80.9, 255.0], [81.0, 255.0], [81.1, 257.0], [81.2, 258.0], [81.3, 258.0], [81.4, 259.0], [81.5, 259.0], [81.6, 260.0], [81.7, 261.0], [81.8, 261.0], [81.9, 261.0], [82.0, 261.0], [82.1, 262.0], [82.2, 264.0], [82.3, 264.0], [82.4, 265.0], [82.5, 265.0], [82.6, 265.0], [82.7, 265.0], [82.8, 265.0], [82.9, 265.0], [83.0, 265.0], [83.1, 267.0], [83.2, 268.0], [83.3, 268.0], [83.4, 268.0], [83.5, 268.0], [83.6, 268.0], [83.7, 268.0], [83.8, 268.0], [83.9, 269.0], [84.0, 269.0], [84.1, 270.0], [84.2, 270.0], [84.3, 270.0], [84.4, 270.0], [84.5, 270.0], [84.6, 271.0], [84.7, 271.0], [84.8, 271.0], [84.9, 271.0], [85.0, 271.0], [85.1, 271.0], [85.2, 272.0], [85.3, 272.0], [85.4, 272.0], [85.5, 272.0], [85.6, 272.0], [85.7, 273.0], [85.8, 273.0], [85.9, 273.0], [86.0, 273.0], [86.1, 274.0], [86.2, 275.0], [86.3, 275.0], [86.4, 276.0], [86.5, 276.0], [86.6, 276.0], [86.7, 277.0], [86.8, 277.0], [86.9, 277.0], [87.0, 277.0], [87.1, 278.0], [87.2, 279.0], [87.3, 279.0], [87.4, 280.0], [87.5, 280.0], [87.6, 280.0], [87.7, 281.0], [87.8, 281.0], [87.9, 282.0], [88.0, 282.0], [88.1, 282.0], [88.2, 282.0], [88.3, 282.0], [88.4, 283.0], [88.5, 283.0], [88.6, 283.0], [88.7, 283.0], [88.8, 283.0], [88.9, 284.0], [89.0, 284.0], [89.1, 284.0], [89.2, 284.0], [89.3, 284.0], [89.4, 287.0], [89.5, 287.0], [89.6, 287.0], [89.7, 288.0], [89.8, 288.0], [89.9, 289.0], [90.0, 289.0], [90.1, 289.0], [90.2, 289.0], [90.3, 289.0], [90.4, 290.0], [90.5, 290.0], [90.6, 291.0], [90.7, 293.0], [90.8, 293.0], [90.9, 293.0], [91.0, 293.0], [91.1, 293.0], [91.2, 294.0], [91.3, 294.0], [91.4, 294.0], [91.5, 294.0], [91.6, 295.0], [91.7, 296.0], [91.8, 296.0], [91.9, 297.0], [92.0, 297.0], [92.1, 297.0], [92.2, 298.0], [92.3, 298.0], [92.4, 299.0], [92.5, 299.0], [92.6, 299.0], [92.7, 299.0], [92.8, 299.0], [92.9, 299.0], [93.0, 299.0], [93.1, 299.0], [93.2, 300.0], [93.3, 300.0], [93.4, 300.0], [93.5, 300.0], [93.6, 300.0], [93.7, 301.0], [93.8, 301.0], [93.9, 302.0], [94.0, 302.0], [94.1, 303.0], [94.2, 303.0], [94.3, 303.0], [94.4, 303.0], [94.5, 303.0], [94.6, 304.0], [94.7, 304.0], [94.8, 304.0], [94.9, 304.0], [95.0, 304.0], [95.1, 306.0], [95.2, 307.0], [95.3, 307.0], [95.4, 311.0], [95.5, 311.0], [95.6, 314.0], [95.7, 315.0], [95.8, 315.0], [95.9, 315.0], [96.0, 315.0], [96.1, 315.0], [96.2, 318.0], [96.3, 318.0], [96.4, 318.0], [96.5, 318.0], [96.6, 324.0], [96.7, 325.0], [96.8, 325.0], [96.9, 325.0], [97.0, 325.0], [97.1, 325.0], [97.2, 326.0], [97.3, 326.0], [97.4, 328.0], [97.5, 328.0], [97.6, 329.0], [97.7, 329.0], [97.8, 329.0], [97.9, 332.0], [98.0, 332.0], [98.1, 336.0], [98.2, 346.0], [98.3, 346.0], [98.4, 347.0], [98.5, 347.0], [98.6, 350.0], [98.7, 351.0], [98.8, 351.0], [98.9, 354.0], [99.0, 354.0], [99.1, 354.0], [99.2, 354.0], [99.3, 354.0], [99.4, 355.0], [99.5, 355.0], [99.6, 364.0], [99.7, 368.0], [99.8, 368.0], [99.9, 372.0], [100.0, 372.0]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 7.0], [3.5, 7.0], [3.6, 7.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 8.0], [5.0, 8.0], [5.1, 8.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 9.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 10.0], [6.8, 10.0], [6.9, 10.0], [7.0, 10.0], [7.1, 10.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 10.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 10.0], [8.1, 10.0], [8.2, 10.0], [8.3, 10.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 11.0], [9.3, 11.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 13.0], [10.5, 13.0], [10.6, 13.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 14.0], [11.5, 14.0], [11.6, 14.0], [11.7, 14.0], [11.8, 14.0], [11.9, 14.0], [12.0, 14.0], [12.1, 14.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 15.0], [13.3, 15.0], [13.4, 15.0], [13.5, 15.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 16.0], [14.2, 16.0], [14.3, 16.0], [14.4, 16.0], [14.5, 16.0], [14.6, 17.0], [14.7, 17.0], [14.8, 17.0], [14.9, 17.0], [15.0, 17.0], [15.1, 18.0], [15.2, 18.0], [15.3, 18.0], [15.4, 18.0], [15.5, 18.0], [15.6, 18.0], [15.7, 18.0], [15.8, 18.0], [15.9, 19.0], [16.0, 19.0], [16.1, 19.0], [16.2, 19.0], [16.3, 19.0], [16.4, 19.0], [16.5, 19.0], [16.6, 20.0], [16.7, 20.0], [16.8, 20.0], [16.9, 20.0], [17.0, 20.0], [17.1, 20.0], [17.2, 21.0], [17.3, 21.0], [17.4, 21.0], [17.5, 21.0], [17.6, 21.0], [17.7, 21.0], [17.8, 21.0], [17.9, 22.0], [18.0, 22.0], [18.1, 22.0], [18.2, 22.0], [18.3, 22.0], [18.4, 22.0], [18.5, 22.0], [18.6, 23.0], [18.7, 24.0], [18.8, 24.0], [18.9, 24.0], [19.0, 24.0], [19.1, 24.0], [19.2, 25.0], [19.3, 25.0], [19.4, 25.0], [19.5, 25.0], [19.6, 26.0], [19.7, 26.0], [19.8, 26.0], [19.9, 27.0], [20.0, 27.0], [20.1, 27.0], [20.2, 27.0], [20.3, 27.0], [20.4, 27.0], [20.5, 27.0], [20.6, 27.0], [20.7, 27.0], [20.8, 27.0], [20.9, 28.0], [21.0, 28.0], [21.1, 28.0], [21.2, 28.0], [21.3, 28.0], [21.4, 28.0], [21.5, 28.0], [21.6, 29.0], [21.7, 29.0], [21.8, 29.0], [21.9, 29.0], [22.0, 29.0], [22.1, 30.0], [22.2, 31.0], [22.3, 31.0], [22.4, 33.0], [22.5, 33.0], [22.6, 34.0], [22.7, 34.0], [22.8, 34.0], [22.9, 35.0], [23.0, 35.0], [23.1, 35.0], [23.2, 35.0], [23.3, 35.0], [23.4, 36.0], [23.5, 36.0], [23.6, 36.0], [23.7, 36.0], [23.8, 36.0], [23.9, 36.0], [24.0, 36.0], [24.1, 36.0], [24.2, 36.0], [24.3, 36.0], [24.4, 37.0], [24.5, 37.0], [24.6, 38.0], [24.7, 39.0], [24.8, 39.0], [24.9, 40.0], [25.0, 40.0], [25.1, 40.0], [25.2, 41.0], [25.3, 41.0], [25.4, 42.0], [25.5, 42.0], [25.6, 44.0], [25.7, 44.0], [25.8, 44.0], [25.9, 44.0], [26.0, 44.0], [26.1, 44.0], [26.2, 44.0], [26.3, 44.0], [26.4, 44.0], [26.5, 44.0], [26.6, 45.0], [26.7, 45.0], [26.8, 45.0], [26.9, 47.0], [27.0, 47.0], [27.1, 52.0], [27.2, 53.0], [27.3, 53.0], [27.4, 54.0], [27.5, 54.0], [27.6, 55.0], [27.7, 57.0], [27.8, 57.0], [27.9, 58.0], [28.0, 58.0], [28.1, 58.0], [28.2, 58.0], [28.3, 58.0], [28.4, 59.0], [28.5, 59.0], [28.6, 59.0], [28.7, 59.0], [28.8, 59.0], [28.9, 62.0], [29.0, 62.0], [29.1, 63.0], [29.2, 63.0], [29.3, 63.0], [29.4, 64.0], [29.5, 64.0], [29.6, 64.0], [29.7, 64.0], [29.8, 64.0], [29.9, 65.0], [30.0, 65.0], [30.1, 65.0], [30.2, 65.0], [30.3, 65.0], [30.4, 65.0], [30.5, 65.0], [30.6, 66.0], [30.7, 66.0], [30.8, 66.0], [30.9, 67.0], [31.0, 67.0], [31.1, 67.0], [31.2, 67.0], [31.3, 67.0], [31.4, 67.0], [31.5, 67.0], [31.6, 67.0], [31.7, 68.0], [31.8, 68.0], [31.9, 68.0], [32.0, 68.0], [32.1, 68.0], [32.2, 68.0], [32.3, 68.0], [32.4, 68.0], [32.5, 68.0], [32.6, 68.0], [32.7, 69.0], [32.8, 69.0], [32.9, 69.0], [33.0, 69.0], [33.1, 69.0], [33.2, 69.0], [33.3, 69.0], [33.4, 69.0], [33.5, 69.0], [33.6, 69.0], [33.7, 70.0], [33.8, 70.0], [33.9, 70.0], [34.0, 70.0], [34.1, 70.0], [34.2, 70.0], [34.3, 70.0], [34.4, 70.0], [34.5, 70.0], [34.6, 71.0], [34.7, 71.0], [34.8, 71.0], [34.9, 71.0], [35.0, 71.0], [35.1, 71.0], [35.2, 71.0], [35.3, 71.0], [35.4, 72.0], [35.5, 72.0], [35.6, 72.0], [35.7, 73.0], [35.8, 73.0], [35.9, 73.0], [36.0, 73.0], [36.1, 73.0], [36.2, 74.0], [36.3, 74.0], [36.4, 74.0], [36.5, 74.0], [36.6, 75.0], [36.7, 76.0], [36.8, 76.0], [36.9, 76.0], [37.0, 76.0], [37.1, 76.0], [37.2, 77.0], [37.3, 77.0], [37.4, 77.0], [37.5, 77.0], [37.6, 78.0], [37.7, 78.0], [37.8, 78.0], [37.9, 78.0], [38.0, 78.0], [38.1, 78.0], [38.2, 78.0], [38.3, 78.0], [38.4, 79.0], [38.5, 79.0], [38.6, 79.0], [38.7, 80.0], [38.8, 80.0], [38.9, 80.0], [39.0, 80.0], [39.1, 81.0], [39.2, 81.0], [39.3, 81.0], [39.4, 82.0], [39.5, 82.0], [39.6, 83.0], [39.7, 84.0], [39.8, 84.0], [39.9, 84.0], [40.0, 84.0], [40.1, 84.0], [40.2, 84.0], [40.3, 84.0], [40.4, 84.0], [40.5, 84.0], [40.6, 85.0], [40.7, 86.0], [40.8, 86.0], [40.9, 86.0], [41.0, 86.0], [41.1, 86.0], [41.2, 86.0], [41.3, 86.0], [41.4, 88.0], [41.5, 88.0], [41.6, 88.0], [41.7, 88.0], [41.8, 88.0], [41.9, 88.0], [42.0, 88.0], [42.1, 88.0], [42.2, 88.0], [42.3, 88.0], [42.4, 89.0], [42.5, 89.0], [42.6, 89.0], [42.7, 90.0], [42.8, 90.0], [42.9, 92.0], [43.0, 92.0], [43.1, 92.0], [43.2, 93.0], [43.3, 93.0], [43.4, 93.0], [43.5, 93.0], [43.6, 94.0], [43.7, 94.0], [43.8, 94.0], [43.9, 95.0], [44.0, 95.0], [44.1, 95.0], [44.2, 95.0], [44.3, 95.0], [44.4, 96.0], [44.5, 96.0], [44.6, 96.0], [44.7, 96.0], [44.8, 96.0], [44.9, 96.0], [45.0, 96.0], [45.1, 96.0], [45.2, 96.0], [45.3, 96.0], [45.4, 97.0], [45.5, 97.0], [45.6, 97.0], [45.7, 97.0], [45.8, 97.0], [45.9, 97.0], [46.0, 97.0], [46.1, 98.0], [46.2, 98.0], [46.3, 98.0], [46.4, 99.0], [46.5, 99.0], [46.6, 99.0], [46.7, 99.0], [46.8, 99.0], [46.9, 100.0], [47.0, 100.0], [47.1, 101.0], [47.2, 101.0], [47.3, 101.0], [47.4, 101.0], [47.5, 101.0], [47.6, 102.0], [47.7, 102.0], [47.8, 102.0], [47.9, 102.0], [48.0, 102.0], [48.1, 102.0], [48.2, 102.0], [48.3, 102.0], [48.4, 103.0], [48.5, 103.0], [48.6, 103.0], [48.7, 104.0], [48.8, 104.0], [48.9, 104.0], [49.0, 104.0], [49.1, 104.0], [49.2, 104.0], [49.3, 104.0], [49.4, 104.0], [49.5, 104.0], [49.6, 104.0], [49.7, 104.0], [49.8, 104.0], [49.9, 104.0], [50.0, 104.0], [50.1, 105.0], [50.2, 106.0], [50.3, 106.0], [50.4, 106.0], [50.5, 106.0], [50.6, 106.0], [50.7, 106.0], [50.8, 106.0], [50.9, 107.0], [51.0, 107.0], [51.1, 108.0], [51.2, 109.0], [51.3, 109.0], [51.4, 109.0], [51.5, 109.0], [51.6, 111.0], [51.7, 113.0], [51.8, 113.0], [51.9, 114.0], [52.0, 114.0], [52.1, 114.0], [52.2, 114.0], [52.3, 114.0], [52.4, 116.0], [52.5, 116.0], [52.6, 117.0], [52.7, 118.0], [52.8, 118.0], [52.9, 119.0], [53.0, 119.0], [53.1, 119.0], [53.2, 121.0], [53.3, 121.0], [53.4, 121.0], [53.5, 121.0], [53.6, 122.0], [53.7, 122.0], [53.8, 122.0], [53.9, 123.0], [54.0, 123.0], [54.1, 124.0], [54.2, 125.0], [54.3, 125.0], [54.4, 125.0], [54.5, 125.0], [54.6, 126.0], [54.7, 126.0], [54.8, 126.0], [54.9, 128.0], [55.0, 128.0], [55.1, 128.0], [55.2, 129.0], [55.3, 129.0], [55.4, 129.0], [55.5, 129.0], [55.6, 130.0], [55.7, 131.0], [55.8, 131.0], [55.9, 131.0], [56.0, 131.0], [56.1, 132.0], [56.2, 132.0], [56.3, 132.0], [56.4, 132.0], [56.5, 132.0], [56.6, 132.0], [56.7, 133.0], [56.8, 133.0], [56.9, 133.0], [57.0, 133.0], [57.1, 134.0], [57.2, 135.0], [57.3, 135.0], [57.4, 135.0], [57.5, 135.0], [57.6, 135.0], [57.7, 136.0], [57.8, 136.0], [57.9, 136.0], [58.0, 136.0], [58.1, 136.0], [58.2, 136.0], [58.3, 136.0], [58.4, 137.0], [58.5, 137.0], [58.6, 137.0], [58.7, 137.0], [58.8, 137.0], [58.9, 138.0], [59.0, 138.0], [59.1, 138.0], [59.2, 138.0], [59.3, 138.0], [59.4, 138.0], [59.5, 138.0], [59.6, 138.0], [59.7, 139.0], [59.8, 139.0], [59.9, 139.0], [60.0, 139.0], [60.1, 139.0], [60.2, 140.0], [60.3, 140.0], [60.4, 140.0], [60.5, 140.0], [60.6, 140.0], [60.7, 141.0], [60.8, 141.0], [60.9, 141.0], [61.0, 141.0], [61.1, 141.0], [61.2, 142.0], [61.3, 142.0], [61.4, 142.0], [61.5, 142.0], [61.6, 142.0], [61.7, 142.0], [61.8, 142.0], [61.9, 142.0], [62.0, 142.0], [62.1, 143.0], [62.2, 144.0], [62.3, 144.0], [62.4, 144.0], [62.5, 144.0], [62.6, 144.0], [62.7, 145.0], [62.8, 145.0], [62.9, 145.0], [63.0, 145.0], [63.1, 145.0], [63.2, 146.0], [63.3, 146.0], [63.4, 146.0], [63.5, 146.0], [63.6, 146.0], [63.7, 146.0], [63.8, 146.0], [63.9, 146.0], [64.0, 146.0], [64.1, 146.0], [64.2, 147.0], [64.3, 147.0], [64.4, 147.0], [64.5, 147.0], [64.6, 147.0], [64.7, 147.0], [64.8, 147.0], [64.9, 148.0], [65.0, 148.0], [65.1, 149.0], [65.2, 149.0], [65.3, 149.0], [65.4, 149.0], [65.5, 149.0], [65.6, 149.0], [65.7, 150.0], [65.8, 150.0], [65.9, 150.0], [66.0, 150.0], [66.1, 150.0], [66.2, 151.0], [66.3, 151.0], [66.4, 151.0], [66.5, 151.0], [66.6, 151.0], [66.7, 151.0], [66.8, 151.0], [66.9, 151.0], [67.0, 151.0], [67.1, 152.0], [67.2, 152.0], [67.3, 152.0], [67.4, 152.0], [67.5, 152.0], [67.6, 152.0], [67.7, 152.0], [67.8, 152.0], [67.9, 152.0], [68.0, 152.0], [68.1, 153.0], [68.2, 153.0], [68.3, 153.0], [68.4, 153.0], [68.5, 153.0], [68.6, 154.0], [68.7, 154.0], [68.8, 154.0], [68.9, 154.0], [69.0, 154.0], [69.1, 154.0], [69.2, 154.0], [69.3, 154.0], [69.4, 154.0], [69.5, 154.0], [69.6, 156.0], [69.7, 156.0], [69.8, 156.0], [69.9, 156.0], [70.0, 156.0], [70.1, 157.0], [70.2, 157.0], [70.3, 157.0], [70.4, 157.0], [70.5, 157.0], [70.6, 157.0], [70.7, 158.0], [70.8, 158.0], [70.9, 159.0], [71.0, 159.0], [71.1, 159.0], [71.2, 159.0], [71.3, 159.0], [71.4, 160.0], [71.5, 160.0], [71.6, 160.0], [71.7, 160.0], [71.8, 160.0], [71.9, 160.0], [72.0, 160.0], [72.1, 161.0], [72.2, 161.0], [72.3, 161.0], [72.4, 161.0], [72.5, 161.0], [72.6, 162.0], [72.7, 162.0], [72.8, 162.0], [72.9, 162.0], [73.0, 162.0], [73.1, 162.0], [73.2, 163.0], [73.3, 163.0], [73.4, 164.0], [73.5, 164.0], [73.6, 164.0], [73.7, 164.0], [73.8, 164.0], [73.9, 164.0], [74.0, 164.0], [74.1, 164.0], [74.2, 164.0], [74.3, 164.0], [74.4, 164.0], [74.5, 164.0], [74.6, 164.0], [74.7, 165.0], [74.8, 165.0], [74.9, 167.0], [75.0, 167.0], [75.1, 167.0], [75.2, 167.0], [75.3, 167.0], [75.4, 167.0], [75.5, 167.0], [75.6, 168.0], [75.7, 168.0], [75.8, 168.0], [75.9, 168.0], [76.0, 168.0], [76.1, 169.0], [76.2, 170.0], [76.3, 170.0], [76.4, 171.0], [76.5, 171.0], [76.6, 171.0], [76.7, 172.0], [76.8, 172.0], [76.9, 172.0], [77.0, 172.0], [77.1, 173.0], [77.2, 173.0], [77.3, 173.0], [77.4, 174.0], [77.5, 174.0], [77.6, 174.0], [77.7, 175.0], [77.8, 175.0], [77.9, 175.0], [78.0, 175.0], [78.1, 175.0], [78.2, 176.0], [78.3, 176.0], [78.4, 176.0], [78.5, 176.0], [78.6, 177.0], [78.7, 178.0], [78.8, 178.0], [78.9, 179.0], [79.0, 179.0], [79.1, 180.0], [79.2, 180.0], [79.3, 180.0], [79.4, 180.0], [79.5, 180.0], [79.6, 181.0], [79.7, 183.0], [79.8, 183.0], [79.9, 183.0], [80.0, 183.0], [80.1, 184.0], [80.2, 185.0], [80.3, 185.0], [80.4, 186.0], [80.5, 186.0], [80.6, 186.0], [80.7, 187.0], [80.8, 187.0], [80.9, 189.0], [81.0, 189.0], [81.1, 191.0], [81.2, 192.0], [81.3, 192.0], [81.4, 194.0], [81.5, 194.0], [81.6, 194.0], [81.7, 194.0], [81.8, 194.0], [81.9, 195.0], [82.0, 195.0], [82.1, 197.0], [82.2, 198.0], [82.3, 198.0], [82.4, 198.0], [82.5, 198.0], [82.6, 198.0], [82.7, 201.0], [82.8, 201.0], [82.9, 202.0], [83.0, 202.0], [83.1, 203.0], [83.2, 203.0], [83.3, 203.0], [83.4, 204.0], [83.5, 204.0], [83.6, 204.0], [83.7, 204.0], [83.8, 204.0], [83.9, 207.0], [84.0, 207.0], [84.1, 207.0], [84.2, 208.0], [84.3, 208.0], [84.4, 209.0], [84.5, 209.0], [84.6, 210.0], [84.7, 210.0], [84.8, 210.0], [84.9, 211.0], [85.0, 211.0], [85.1, 211.0], [85.2, 212.0], [85.3, 212.0], [85.4, 215.0], [85.5, 215.0], [85.6, 215.0], [85.7, 218.0], [85.8, 218.0], [85.9, 219.0], [86.0, 219.0], [86.1, 222.0], [86.2, 224.0], [86.3, 224.0], [86.4, 224.0], [86.5, 224.0], [86.6, 225.0], [86.7, 225.0], [86.8, 225.0], [86.9, 231.0], [87.0, 231.0], [87.1, 232.0], [87.2, 235.0], [87.3, 235.0], [87.4, 236.0], [87.5, 236.0], [87.6, 237.0], [87.7, 239.0], [87.8, 239.0], [87.9, 240.0], [88.0, 240.0], [88.1, 240.0], [88.2, 245.0], [88.3, 245.0], [88.4, 247.0], [88.5, 247.0], [88.6, 248.0], [88.7, 249.0], [88.8, 249.0], [88.9, 249.0], [89.0, 249.0], [89.1, 252.0], [89.2, 252.0], [89.3, 252.0], [89.4, 252.0], [89.5, 252.0], [89.6, 255.0], [89.7, 255.0], [89.8, 255.0], [89.9, 257.0], [90.0, 257.0], [90.1, 258.0], [90.2, 259.0], [90.3, 259.0], [90.4, 260.0], [90.5, 260.0], [90.6, 261.0], [90.7, 262.0], [90.8, 262.0], [90.9, 263.0], [91.0, 263.0], [91.1, 265.0], [91.2, 268.0], [91.3, 268.0], [91.4, 268.0], [91.5, 268.0], [91.6, 269.0], [91.7, 269.0], [91.8, 269.0], [91.9, 274.0], [92.0, 274.0], [92.1, 274.0], [92.2, 280.0], [92.3, 280.0], [92.4, 280.0], [92.5, 280.0], [92.6, 289.0], [92.7, 295.0], [92.8, 295.0], [92.9, 295.0], [93.0, 295.0], [93.1, 296.0], [93.2, 300.0], [93.3, 300.0], [93.4, 300.0], [93.5, 300.0], [93.6, 301.0], [93.7, 303.0], [93.8, 303.0], [93.9, 314.0], [94.0, 314.0], [94.1, 315.0], [94.2, 315.0], [94.3, 315.0], [94.4, 316.0], [94.5, 316.0], [94.6, 317.0], [94.7, 320.0], [94.8, 320.0], [94.9, 321.0], [95.0, 321.0], [95.1, 323.0], [95.2, 363.0], [95.3, 363.0], [95.4, 364.0], [95.5, 364.0], [95.6, 373.0], [95.7, 376.0], [95.8, 376.0], [95.9, 380.0], [96.0, 380.0], [96.1, 381.0], [96.2, 391.0], [96.3, 391.0], [96.4, 392.0], [96.5, 392.0], [96.6, 393.0], [96.7, 398.0], [96.8, 398.0], [96.9, 423.0], [97.0, 423.0], [97.1, 428.0], [97.2, 435.0], [97.3, 435.0], [97.4, 435.0], [97.5, 435.0], [97.6, 442.0], [97.7, 442.0], [97.8, 442.0], [97.9, 443.0], [98.0, 443.0], [98.1, 445.0], [98.2, 446.0], [98.3, 446.0], [98.4, 446.0], [98.5, 446.0], [98.6, 447.0], [98.7, 448.0], [98.8, 448.0], [98.9, 448.0], [99.0, 448.0], [99.1, 449.0], [99.2, 449.0], [99.3, 449.0], [99.4, 449.0], [99.5, 449.0], [99.6, 452.0], [99.7, 452.0], [99.8, 452.0], [99.9, 454.0], [100.0, 454.0]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 3.0], [0.3, 3.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 8.0], [5.1, 8.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 9.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 9.0], [7.3, 9.0], [7.4, 9.0], [7.5, 9.0], [7.6, 9.0], [7.7, 10.0], [7.8, 10.0], [7.9, 10.0], [8.0, 10.0], [8.1, 10.0], [8.2, 10.0], [8.3, 10.0], [8.4, 10.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 11.0], [9.3, 11.0], [9.4, 11.0], [9.5, 11.0], [9.6, 11.0], [9.7, 11.0], [9.8, 11.0], [9.9, 11.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 13.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 14.0], [12.3, 14.0], [12.4, 14.0], [12.5, 14.0], [12.6, 14.0], [12.7, 14.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 15.0], [13.6, 15.0], [13.7, 15.0], [13.8, 15.0], [13.9, 15.0], [14.0, 15.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 16.0], [14.6, 16.0], [14.7, 16.0], [14.8, 16.0], [14.9, 16.0], [15.0, 16.0], [15.1, 16.0], [15.2, 17.0], [15.3, 17.0], [15.4, 17.0], [15.5, 17.0], [15.6, 17.0], [15.7, 17.0], [15.8, 17.0], [15.9, 17.0], [16.0, 17.0], [16.1, 17.0], [16.2, 18.0], [16.3, 18.0], [16.4, 18.0], [16.5, 18.0], [16.6, 18.0], [16.7, 18.0], [16.8, 18.0], [16.9, 18.0], [17.0, 19.0], [17.1, 19.0], [17.2, 19.0], [17.3, 19.0], [17.4, 20.0], [17.5, 20.0], [17.6, 20.0], [17.7, 20.0], [17.8, 20.0], [17.9, 20.0], [18.0, 21.0], [18.1, 21.0], [18.2, 21.0], [18.3, 21.0], [18.4, 21.0], [18.5, 21.0], [18.6, 21.0], [18.7, 21.0], [18.8, 21.0], [18.9, 21.0], [19.0, 21.0], [19.1, 21.0], [19.2, 21.0], [19.3, 21.0], [19.4, 21.0], [19.5, 22.0], [19.6, 22.0], [19.7, 22.0], [19.8, 22.0], [19.9, 22.0], [20.0, 22.0], [20.1, 22.0], [20.2, 22.0], [20.3, 22.0], [20.4, 22.0], [20.5, 22.0], [20.6, 22.0], [20.7, 23.0], [20.8, 23.0], [20.9, 23.0], [21.0, 23.0], [21.1, 23.0], [21.2, 23.0], [21.3, 23.0], [21.4, 23.0], [21.5, 23.0], [21.6, 23.0], [21.7, 23.0], [21.8, 23.0], [21.9, 24.0], [22.0, 24.0], [22.1, 24.0], [22.2, 24.0], [22.3, 24.0], [22.4, 24.0], [22.5, 24.0], [22.6, 24.0], [22.7, 24.0], [22.8, 24.0], [22.9, 24.0], [23.0, 24.0], [23.1, 24.0], [23.2, 24.0], [23.3, 24.0], [23.4, 24.0], [23.5, 25.0], [23.6, 25.0], [23.7, 26.0], [23.8, 26.0], [23.9, 27.0], [24.0, 27.0], [24.1, 28.0], [24.2, 28.0], [24.3, 28.0], [24.4, 28.0], [24.5, 28.0], [24.6, 29.0], [24.7, 29.0], [24.8, 29.0], [24.9, 30.0], [25.0, 30.0], [25.1, 30.0], [25.2, 31.0], [25.3, 31.0], [25.4, 31.0], [25.5, 32.0], [25.6, 32.0], [25.7, 33.0], [25.8, 33.0], [25.9, 34.0], [26.0, 34.0], [26.1, 34.0], [26.2, 35.0], [26.3, 35.0], [26.4, 35.0], [26.5, 37.0], [26.6, 37.0], [26.7, 37.0], [26.8, 37.0], [26.9, 37.0], [27.0, 38.0], [27.1, 38.0], [27.2, 38.0], [27.3, 38.0], [27.4, 39.0], [27.5, 39.0], [27.6, 39.0], [27.7, 39.0], [27.8, 39.0], [27.9, 39.0], [28.0, 40.0], [28.1, 40.0], [28.2, 41.0], [28.3, 41.0], [28.4, 41.0], [28.5, 41.0], [28.6, 41.0], [28.7, 42.0], [28.8, 42.0], [28.9, 42.0], [29.0, 42.0], [29.1, 42.0], [29.2, 42.0], [29.3, 42.0], [29.4, 44.0], [29.5, 44.0], [29.6, 44.0], [29.7, 44.0], [29.8, 44.0], [29.9, 45.0], [30.0, 45.0], [30.1, 45.0], [30.2, 46.0], [30.3, 46.0], [30.4, 46.0], [30.5, 47.0], [30.6, 47.0], [30.7, 48.0], [30.8, 48.0], [30.9, 48.0], [31.0, 48.0], [31.1, 48.0], [31.2, 48.0], [31.3, 48.0], [31.4, 49.0], [31.5, 49.0], [31.6, 49.0], [31.7, 49.0], [31.8, 49.0], [31.9, 50.0], [32.0, 51.0], [32.1, 51.0], [32.2, 51.0], [32.3, 51.0], [32.4, 52.0], [32.5, 53.0], [32.6, 53.0], [32.7, 53.0], [32.8, 53.0], [32.9, 54.0], [33.0, 54.0], [33.1, 54.0], [33.2, 55.0], [33.3, 55.0], [33.4, 55.0], [33.5, 55.0], [33.6, 55.0], [33.7, 55.0], [33.8, 55.0], [33.9, 55.0], [34.0, 55.0], [34.1, 56.0], [34.2, 56.0], [34.3, 56.0], [34.4, 56.0], [34.5, 56.0], [34.6, 57.0], [34.7, 58.0], [34.8, 58.0], [34.9, 58.0], [35.0, 58.0], [35.1, 59.0], [35.2, 59.0], [35.3, 59.0], [35.4, 60.0], [35.5, 60.0], [35.6, 60.0], [35.7, 60.0], [35.8, 60.0], [35.9, 61.0], [36.0, 61.0], [36.1, 61.0], [36.2, 63.0], [36.3, 63.0], [36.4, 63.0], [36.5, 63.0], [36.6, 63.0], [36.7, 63.0], [36.8, 63.0], [36.9, 64.0], [37.0, 64.0], [37.1, 64.0], [37.2, 65.0], [37.3, 65.0], [37.4, 66.0], [37.5, 66.0], [37.6, 67.0], [37.7, 68.0], [37.8, 68.0], [37.9, 68.0], [38.0, 68.0], [38.1, 69.0], [38.2, 70.0], [38.3, 70.0], [38.4, 70.0], [38.5, 70.0], [38.6, 70.0], [38.7, 70.0], [38.8, 70.0], [38.9, 70.0], [39.0, 70.0], [39.1, 71.0], [39.2, 71.0], [39.3, 71.0], [39.4, 72.0], [39.5, 72.0], [39.6, 72.0], [39.7, 72.0], [39.8, 72.0], [39.9, 72.0], [40.0, 72.0], [40.1, 73.0], [40.2, 73.0], [40.3, 73.0], [40.4, 74.0], [40.5, 74.0], [40.6, 74.0], [40.7, 74.0], [40.8, 74.0], [40.9, 74.0], [41.0, 74.0], [41.1, 74.0], [41.2, 74.0], [41.3, 74.0], [41.4, 74.0], [41.5, 74.0], [41.6, 75.0], [41.7, 75.0], [41.8, 75.0], [41.9, 75.0], [42.0, 75.0], [42.1, 75.0], [42.2, 76.0], [42.3, 76.0], [42.4, 76.0], [42.5, 76.0], [42.6, 76.0], [42.7, 76.0], [42.8, 76.0], [42.9, 77.0], [43.0, 77.0], [43.1, 77.0], [43.2, 77.0], [43.3, 77.0], [43.4, 77.0], [43.5, 78.0], [43.6, 78.0], [43.7, 78.0], [43.8, 78.0], [43.9, 78.0], [44.0, 78.0], [44.1, 78.0], [44.2, 78.0], [44.3, 78.0], [44.4, 79.0], [44.5, 79.0], [44.6, 79.0], [44.7, 79.0], [44.8, 79.0], [44.9, 79.0], [45.0, 80.0], [45.1, 80.0], [45.2, 80.0], [45.3, 80.0], [45.4, 81.0], [45.5, 81.0], [45.6, 81.0], [45.7, 82.0], [45.8, 82.0], [45.9, 82.0], [46.0, 82.0], [46.1, 82.0], [46.2, 82.0], [46.3, 82.0], [46.4, 82.0], [46.5, 82.0], [46.6, 82.0], [46.7, 84.0], [46.8, 84.0], [46.9, 84.0], [47.0, 84.0], [47.1, 85.0], [47.2, 85.0], [47.3, 85.0], [47.4, 85.0], [47.5, 85.0], [47.6, 85.0], [47.7, 85.0], [47.8, 85.0], [47.9, 85.0], [48.0, 85.0], [48.1, 86.0], [48.2, 86.0], [48.3, 86.0], [48.4, 86.0], [48.5, 86.0], [48.6, 86.0], [48.7, 86.0], [48.8, 86.0], [48.9, 86.0], [49.0, 86.0], [49.1, 87.0], [49.2, 87.0], [49.3, 87.0], [49.4, 87.0], [49.5, 87.0], [49.6, 87.0], [49.7, 87.0], [49.8, 87.0], [49.9, 87.0], [50.0, 87.0], [50.1, 87.0], [50.2, 88.0], [50.3, 88.0], [50.4, 88.0], [50.5, 88.0], [50.6, 89.0], [50.7, 89.0], [50.8, 89.0], [50.9, 89.0], [51.0, 89.0], [51.1, 90.0], [51.2, 90.0], [51.3, 90.0], [51.4, 90.0], [51.5, 90.0], [51.6, 91.0], [51.7, 93.0], [51.8, 93.0], [51.9, 93.0], [52.0, 93.0], [52.1, 94.0], [52.2, 94.0], [52.3, 94.0], [52.4, 94.0], [52.5, 94.0], [52.6, 95.0], [52.7, 95.0], [52.8, 95.0], [52.9, 95.0], [53.0, 95.0], [53.1, 95.0], [53.2, 96.0], [53.3, 96.0], [53.4, 96.0], [53.5, 96.0], [53.6, 96.0], [53.7, 97.0], [53.8, 97.0], [53.9, 97.0], [54.0, 97.0], [54.1, 97.0], [54.2, 97.0], [54.3, 97.0], [54.4, 98.0], [54.5, 98.0], [54.6, 98.0], [54.7, 98.0], [54.8, 98.0], [54.9, 98.0], [55.0, 98.0], [55.1, 98.0], [55.2, 98.0], [55.3, 98.0], [55.4, 99.0], [55.5, 99.0], [55.6, 99.0], [55.7, 100.0], [55.8, 100.0], [55.9, 100.0], [56.0, 100.0], [56.1, 100.0], [56.2, 100.0], [56.3, 100.0], [56.4, 100.0], [56.5, 100.0], [56.6, 100.0], [56.7, 101.0], [56.8, 101.0], [56.9, 101.0], [57.0, 101.0], [57.1, 101.0], [57.2, 101.0], [57.3, 101.0], [57.4, 101.0], [57.5, 101.0], [57.6, 101.0], [57.7, 101.0], [57.8, 101.0], [57.9, 102.0], [58.0, 102.0], [58.1, 102.0], [58.2, 102.0], [58.3, 102.0], [58.4, 102.0], [58.5, 102.0], [58.6, 102.0], [58.7, 103.0], [58.8, 103.0], [58.9, 103.0], [59.0, 103.0], [59.1, 103.0], [59.2, 103.0], [59.3, 103.0], [59.4, 104.0], [59.5, 104.0], [59.6, 104.0], [59.7, 104.0], [59.8, 104.0], [59.9, 105.0], [60.0, 106.0], [60.1, 106.0], [60.2, 106.0], [60.3, 106.0], [60.4, 106.0], [60.5, 106.0], [60.6, 106.0], [60.7, 107.0], [60.8, 107.0], [60.9, 107.0], [61.0, 109.0], [61.1, 109.0], [61.2, 109.0], [61.3, 109.0], [61.4, 110.0], [61.5, 111.0], [61.6, 111.0], [61.7, 111.0], [61.8, 111.0], [61.9, 111.0], [62.0, 111.0], [62.1, 111.0], [62.2, 112.0], [62.3, 112.0], [62.4, 112.0], [62.5, 112.0], [62.6, 112.0], [62.7, 114.0], [62.8, 114.0], [62.9, 114.0], [63.0, 115.0], [63.1, 115.0], [63.2, 115.0], [63.3, 115.0], [63.4, 115.0], [63.5, 115.0], [63.6, 115.0], [63.7, 116.0], [63.8, 116.0], [63.9, 116.0], [64.0, 116.0], [64.1, 116.0], [64.2, 116.0], [64.3, 116.0], [64.4, 116.0], [64.5, 116.0], [64.6, 116.0], [64.7, 116.0], [64.8, 116.0], [64.9, 117.0], [65.0, 117.0], [65.1, 117.0], [65.2, 117.0], [65.3, 117.0], [65.4, 117.0], [65.5, 117.0], [65.6, 117.0], [65.7, 118.0], [65.8, 118.0], [65.9, 120.0], [66.0, 120.0], [66.1, 120.0], [66.2, 120.0], [66.3, 120.0], [66.4, 120.0], [66.5, 120.0], [66.6, 120.0], [66.7, 120.0], [66.8, 120.0], [66.9, 121.0], [67.0, 121.0], [67.1, 121.0], [67.2, 122.0], [67.3, 122.0], [67.4, 122.0], [67.5, 123.0], [67.6, 123.0], [67.7, 123.0], [67.8, 123.0], [67.9, 123.0], [68.0, 123.0], [68.1, 123.0], [68.2, 125.0], [68.3, 125.0], [68.4, 125.0], [68.5, 125.0], [68.6, 125.0], [68.7, 125.0], [68.8, 125.0], [68.9, 126.0], [69.0, 126.0], [69.1, 126.0], [69.2, 126.0], [69.3, 126.0], [69.4, 127.0], [69.5, 128.0], [69.6, 128.0], [69.7, 128.0], [69.8, 128.0], [69.9, 129.0], [70.0, 129.0], [70.1, 129.0], [70.2, 129.0], [70.3, 129.0], [70.4, 129.0], [70.5, 130.0], [70.6, 130.0], [70.7, 130.0], [70.8, 130.0], [70.9, 130.0], [71.0, 130.0], [71.1, 130.0], [71.2, 130.0], [71.3, 130.0], [71.4, 131.0], [71.5, 131.0], [71.6, 131.0], [71.7, 131.0], [71.8, 131.0], [71.9, 131.0], [72.0, 131.0], [72.1, 131.0], [72.2, 131.0], [72.3, 131.0], [72.4, 131.0], [72.5, 132.0], [72.6, 132.0], [72.7, 132.0], [72.8, 132.0], [72.9, 132.0], [73.0, 132.0], [73.1, 132.0], [73.2, 132.0], [73.3, 132.0], [73.4, 133.0], [73.5, 133.0], [73.6, 133.0], [73.7, 134.0], [73.8, 134.0], [73.9, 134.0], [74.0, 134.0], [74.1, 134.0], [74.2, 134.0], [74.3, 134.0], [74.4, 135.0], [74.5, 135.0], [74.6, 135.0], [74.7, 135.0], [74.8, 135.0], [74.9, 136.0], [75.0, 137.0], [75.1, 137.0], [75.2, 137.0], [75.3, 137.0], [75.4, 138.0], [75.5, 138.0], [75.6, 138.0], [75.7, 138.0], [75.8, 138.0], [75.9, 139.0], [76.0, 139.0], [76.1, 139.0], [76.2, 139.0], [76.3, 139.0], [76.4, 139.0], [76.5, 139.0], [76.6, 139.0], [76.7, 139.0], [76.8, 139.0], [76.9, 140.0], [77.0, 140.0], [77.1, 140.0], [77.2, 140.0], [77.3, 140.0], [77.4, 140.0], [77.5, 140.0], [77.6, 140.0], [77.7, 141.0], [77.8, 141.0], [77.9, 141.0], [78.0, 142.0], [78.1, 142.0], [78.2, 142.0], [78.3, 142.0], [78.4, 142.0], [78.5, 142.0], [78.6, 142.0], [78.7, 142.0], [78.8, 142.0], [78.9, 143.0], [79.0, 143.0], [79.1, 143.0], [79.2, 143.0], [79.3, 143.0], [79.4, 143.0], [79.5, 143.0], [79.6, 143.0], [79.7, 144.0], [79.8, 144.0], [79.9, 145.0], [80.0, 145.0], [80.1, 145.0], [80.2, 145.0], [80.3, 145.0], [80.4, 146.0], [80.5, 146.0], [80.6, 146.0], [80.7, 147.0], [80.8, 147.0], [80.9, 147.0], [81.0, 147.0], [81.1, 147.0], [81.2, 147.0], [81.3, 147.0], [81.4, 147.0], [81.5, 148.0], [81.6, 148.0], [81.7, 148.0], [81.8, 148.0], [81.9, 149.0], [82.0, 149.0], [82.1, 149.0], [82.2, 149.0], [82.3, 149.0], [82.4, 149.0], [82.5, 150.0], [82.6, 150.0], [82.7, 150.0], [82.8, 150.0], [82.9, 150.0], [83.0, 151.0], [83.1, 151.0], [83.2, 151.0], [83.3, 151.0], [83.4, 151.0], [83.5, 152.0], [83.6, 152.0], [83.7, 152.0], [83.8, 152.0], [83.9, 152.0], [84.0, 153.0], [84.1, 153.0], [84.2, 153.0], [84.3, 153.0], [84.4, 153.0], [84.5, 153.0], [84.6, 153.0], [84.7, 153.0], [84.8, 153.0], [84.9, 154.0], [85.0, 156.0], [85.1, 156.0], [85.2, 157.0], [85.3, 157.0], [85.4, 157.0], [85.5, 158.0], [85.6, 158.0], [85.7, 158.0], [85.8, 158.0], [85.9, 160.0], [86.0, 160.0], [86.1, 160.0], [86.2, 160.0], [86.3, 160.0], [86.4, 160.0], [86.5, 160.0], [86.6, 160.0], [86.7, 161.0], [86.8, 161.0], [86.9, 161.0], [87.0, 161.0], [87.1, 161.0], [87.2, 161.0], [87.3, 161.0], [87.4, 162.0], [87.5, 162.0], [87.6, 162.0], [87.7, 162.0], [87.8, 162.0], [87.9, 163.0], [88.0, 163.0], [88.1, 163.0], [88.2, 163.0], [88.3, 163.0], [88.4, 164.0], [88.5, 164.0], [88.6, 164.0], [88.7, 164.0], [88.8, 164.0], [88.9, 164.0], [89.0, 166.0], [89.1, 166.0], [89.2, 166.0], [89.3, 166.0], [89.4, 166.0], [89.5, 166.0], [89.6, 166.0], [89.7, 168.0], [89.8, 168.0], [89.9, 168.0], [90.0, 169.0], [90.1, 169.0], [90.2, 170.0], [90.3, 170.0], [90.4, 170.0], [90.5, 170.0], [90.6, 170.0], [90.7, 171.0], [90.8, 171.0], [90.9, 171.0], [91.0, 172.0], [91.1, 172.0], [91.2, 173.0], [91.3, 173.0], [91.4, 174.0], [91.5, 176.0], [91.6, 176.0], [91.7, 177.0], [91.8, 177.0], [91.9, 177.0], [92.0, 178.0], [92.1, 178.0], [92.2, 179.0], [92.3, 179.0], [92.4, 183.0], [92.5, 184.0], [92.6, 184.0], [92.7, 184.0], [92.8, 184.0], [92.9, 184.0], [93.0, 187.0], [93.1, 187.0], [93.2, 187.0], [93.3, 187.0], [93.4, 195.0], [93.5, 197.0], [93.6, 197.0], [93.7, 198.0], [93.8, 198.0], [93.9, 212.0], [94.0, 212.0], [94.1, 220.0], [94.2, 261.0], [94.3, 261.0], [94.4, 262.0], [94.5, 262.0], [94.6, 266.0], [94.7, 268.0], [94.8, 268.0], [94.9, 269.0], [95.0, 269.0], [95.1, 271.0], [95.2, 272.0], [95.3, 272.0], [95.4, 272.0], [95.5, 272.0], [95.6, 276.0], [95.7, 278.0], [95.8, 278.0], [95.9, 278.0], [96.0, 278.0], [96.1, 282.0], [96.2, 283.0], [96.3, 283.0], [96.4, 283.0], [96.5, 283.0], [96.6, 284.0], [96.7, 284.0], [96.8, 284.0], [96.9, 284.0], [97.0, 284.0], [97.1, 284.0], [97.2, 284.0], [97.3, 284.0], [97.4, 285.0], [97.5, 285.0], [97.6, 286.0], [97.7, 286.0], [97.8, 286.0], [97.9, 292.0], [98.0, 292.0], [98.1, 293.0], [98.2, 294.0], [98.3, 294.0], [98.4, 294.0], [98.5, 294.0], [98.6, 296.0], [98.7, 296.0], [98.8, 296.0], [98.9, 299.0], [99.0, 299.0], [99.1, 305.0], [99.2, 309.0], [99.3, 309.0], [99.4, 309.0], [99.5, 309.0], [99.6, 311.0], [99.7, 312.0], [99.8, 312.0], [99.9, 313.0], [100.0, 313.0]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[0.0, 536.0], [0.1, 536.0], [0.2, 551.0], [0.3, 551.0], [0.4, 557.0], [0.5, 563.0], [0.6, 563.0], [0.7, 573.0], [0.8, 573.0], [0.9, 575.0], [1.0, 575.0], [1.1, 575.0], [1.2, 578.0], [1.3, 578.0], [1.4, 579.0], [1.5, 580.0], [1.6, 580.0], [1.7, 586.0], [1.8, 586.0], [1.9, 586.0], [2.0, 587.0], [2.1, 587.0], [2.2, 589.0], [2.3, 589.0], [2.4, 590.0], [2.5, 591.0], [2.6, 591.0], [2.7, 598.0], [2.8, 598.0], [2.9, 598.0], [3.0, 598.0], [3.1, 598.0], [3.2, 599.0], [3.3, 599.0], [3.4, 600.0], [3.5, 600.0], [3.6, 600.0], [3.7, 600.0], [3.8, 600.0], [3.9, 601.0], [4.0, 602.0], [4.1, 602.0], [4.2, 603.0], [4.3, 603.0], [4.4, 605.0], [4.5, 606.0], [4.6, 606.0], [4.7, 607.0], [4.8, 607.0], [4.9, 608.0], [5.0, 608.0], [5.1, 608.0], [5.2, 609.0], [5.3, 609.0], [5.4, 610.0], [5.5, 610.0], [5.6, 610.0], [5.7, 611.0], [5.8, 611.0], [5.9, 611.0], [6.0, 611.0], [6.1, 611.0], [6.2, 611.0], [6.3, 611.0], [6.4, 611.0], [6.5, 612.0], [6.6, 612.0], [6.7, 613.0], [6.8, 613.0], [6.9, 613.0], [7.0, 613.0], [7.1, 613.0], [7.2, 613.0], [7.3, 613.0], [7.4, 613.0], [7.5, 614.0], [7.6, 614.0], [7.7, 614.0], [7.8, 614.0], [7.9, 614.0], [8.0, 614.0], [8.1, 614.0], [8.2, 615.0], [8.3, 615.0], [8.4, 615.0], [8.5, 615.0], [8.6, 615.0], [8.7, 615.0], [8.8, 615.0], [8.9, 615.0], [9.0, 615.0], [9.1, 615.0], [9.2, 616.0], [9.3, 616.0], [9.4, 616.0], [9.5, 616.0], [9.6, 616.0], [9.7, 616.0], [9.8, 616.0], [9.9, 617.0], [10.0, 617.0], [10.1, 617.0], [10.2, 617.0], [10.3, 617.0], [10.4, 618.0], [10.5, 619.0], [10.6, 619.0], [10.7, 620.0], [10.8, 620.0], [10.9, 621.0], [11.0, 624.0], [11.1, 624.0], [11.2, 625.0], [11.3, 625.0], [11.4, 625.0], [11.5, 626.0], [11.6, 626.0], [11.7, 626.0], [11.8, 626.0], [11.9, 626.0], [12.0, 627.0], [12.1, 627.0], [12.2, 627.0], [12.3, 627.0], [12.4, 627.0], [12.5, 627.0], [12.6, 627.0], [12.7, 627.0], [12.8, 627.0], [12.9, 628.0], [13.0, 628.0], [13.1, 628.0], [13.2, 629.0], [13.3, 629.0], [13.4, 631.0], [13.5, 631.0], [13.6, 631.0], [13.7, 631.0], [13.8, 631.0], [13.9, 631.0], [14.0, 632.0], [14.1, 632.0], [14.2, 632.0], [14.3, 632.0], [14.4, 632.0], [14.5, 633.0], [14.6, 633.0], [14.7, 634.0], [14.8, 634.0], [14.9, 634.0], [15.0, 635.0], [15.1, 635.0], [15.2, 635.0], [15.3, 635.0], [15.4, 635.0], [15.5, 636.0], [15.6, 636.0], [15.7, 636.0], [15.8, 636.0], [15.9, 636.0], [16.0, 637.0], [16.1, 637.0], [16.2, 638.0], [16.3, 638.0], [16.4, 638.0], [16.5, 639.0], [16.6, 639.0], [16.7, 639.0], [16.8, 639.0], [16.9, 639.0], [17.0, 640.0], [17.1, 640.0], [17.2, 642.0], [17.3, 642.0], [17.4, 642.0], [17.5, 642.0], [17.6, 642.0], [17.7, 643.0], [17.8, 643.0], [17.9, 643.0], [18.0, 643.0], [18.1, 643.0], [18.2, 644.0], [18.3, 644.0], [18.4, 645.0], [18.5, 645.0], [18.6, 645.0], [18.7, 645.0], [18.8, 645.0], [18.9, 646.0], [19.0, 646.0], [19.1, 646.0], [19.2, 646.0], [19.3, 646.0], [19.4, 646.0], [19.5, 646.0], [19.6, 646.0], [19.7, 647.0], [19.8, 647.0], [19.9, 647.0], [20.0, 647.0], [20.1, 647.0], [20.2, 647.0], [20.3, 647.0], [20.4, 648.0], [20.5, 649.0], [20.6, 649.0], [20.7, 649.0], [20.8, 649.0], [20.9, 650.0], [21.0, 650.0], [21.1, 650.0], [21.2, 650.0], [21.3, 650.0], [21.4, 651.0], [21.5, 651.0], [21.6, 651.0], [21.7, 651.0], [21.8, 651.0], [21.9, 651.0], [22.0, 652.0], [22.1, 652.0], [22.2, 652.0], [22.3, 652.0], [22.4, 652.0], [22.5, 653.0], [22.6, 653.0], [22.7, 654.0], [22.8, 654.0], [22.9, 654.0], [23.0, 654.0], [23.1, 654.0], [23.2, 655.0], [23.3, 655.0], [23.4, 655.0], [23.5, 656.0], [23.6, 656.0], [23.7, 656.0], [23.8, 656.0], [23.9, 656.0], [24.0, 660.0], [24.1, 660.0], [24.2, 660.0], [24.3, 660.0], [24.4, 660.0], [24.5, 660.0], [24.6, 660.0], [24.7, 661.0], [24.8, 661.0], [24.9, 663.0], [25.0, 663.0], [25.1, 663.0], [25.2, 663.0], [25.3, 663.0], [25.4, 664.0], [25.5, 664.0], [25.6, 664.0], [25.7, 670.0], [25.8, 670.0], [25.9, 670.0], [26.0, 670.0], [26.1, 670.0], [26.2, 670.0], [26.3, 670.0], [26.4, 671.0], [26.5, 671.0], [26.6, 671.0], [26.7, 671.0], [26.8, 671.0], [26.9, 673.0], [27.0, 673.0], [27.1, 674.0], [27.2, 680.0], [27.3, 680.0], [27.4, 681.0], [27.5, 681.0], [27.6, 682.0], [27.7, 682.0], [27.8, 682.0], [27.9, 683.0], [28.0, 683.0], [28.1, 684.0], [28.2, 686.0], [28.3, 686.0], [28.4, 701.0], [28.5, 701.0], [28.6, 702.0], [28.7, 708.0], [28.8, 708.0], [28.9, 710.0], [29.0, 710.0], [29.1, 711.0], [29.2, 714.0], [29.3, 714.0], [29.4, 715.0], [29.5, 715.0], [29.6, 717.0], [29.7, 719.0], [29.8, 719.0], [29.9, 727.0], [30.0, 727.0], [30.1, 727.0], [30.2, 731.0], [30.3, 731.0], [30.4, 731.0], [30.5, 731.0], [30.6, 732.0], [30.7, 732.0], [30.8, 732.0], [30.9, 733.0], [31.0, 733.0], [31.1, 734.0], [31.2, 735.0], [31.3, 735.0], [31.4, 739.0], [31.5, 739.0], [31.6, 740.0], [31.7, 740.0], [31.8, 740.0], [31.9, 741.0], [32.0, 741.0], [32.1, 744.0], [32.2, 744.0], [32.3, 744.0], [32.4, 745.0], [32.5, 745.0], [32.6, 745.0], [32.7, 747.0], [32.8, 747.0], [32.9, 751.0], [33.0, 751.0], [33.1, 751.0], [33.2, 752.0], [33.3, 752.0], [33.4, 753.0], [33.5, 753.0], [33.6, 754.0], [33.7, 754.0], [33.8, 754.0], [33.9, 754.0], [34.0, 754.0], [34.1, 756.0], [34.2, 757.0], [34.3, 757.0], [34.4, 757.0], [34.5, 757.0], [34.6, 758.0], [34.7, 759.0], [34.8, 759.0], [34.9, 760.0], [35.0, 760.0], [35.1, 760.0], [35.2, 761.0], [35.3, 761.0], [35.4, 761.0], [35.5, 761.0], [35.6, 761.0], [35.7, 762.0], [35.8, 762.0], [35.9, 762.0], [36.0, 762.0], [36.1, 763.0], [36.2, 764.0], [36.3, 764.0], [36.4, 764.0], [36.5, 764.0], [36.6, 765.0], [36.7, 767.0], [36.8, 767.0], [36.9, 768.0], [37.0, 768.0], [37.1, 768.0], [37.2, 769.0], [37.3, 769.0], [37.4, 769.0], [37.5, 769.0], [37.6, 769.0], [37.7, 769.0], [37.8, 769.0], [37.9, 769.0], [38.0, 769.0], [38.1, 770.0], [38.2, 771.0], [38.3, 771.0], [38.4, 772.0], [38.5, 772.0], [38.6, 773.0], [38.7, 773.0], [38.8, 773.0], [38.9, 773.0], [39.0, 773.0], [39.1, 774.0], [39.2, 774.0], [39.3, 774.0], [39.4, 775.0], [39.5, 775.0], [39.6, 775.0], [39.7, 775.0], [39.8, 775.0], [39.9, 775.0], [40.0, 775.0], [40.1, 776.0], [40.2, 776.0], [40.3, 776.0], [40.4, 776.0], [40.5, 776.0], [40.6, 777.0], [40.7, 778.0], [40.8, 778.0], [40.9, 778.0], [41.0, 778.0], [41.1, 780.0], [41.2, 781.0], [41.3, 781.0], [41.4, 782.0], [41.5, 782.0], [41.6, 782.0], [41.7, 782.0], [41.8, 782.0], [41.9, 783.0], [42.0, 783.0], [42.1, 783.0], [42.2, 784.0], [42.3, 784.0], [42.4, 786.0], [42.5, 786.0], [42.6, 786.0], [42.7, 787.0], [42.8, 787.0], [42.9, 787.0], [43.0, 787.0], [43.1, 787.0], [43.2, 787.0], [43.3, 787.0], [43.4, 787.0], [43.5, 787.0], [43.6, 787.0], [43.7, 787.0], [43.8, 787.0], [43.9, 788.0], [44.0, 788.0], [44.1, 788.0], [44.2, 789.0], [44.3, 789.0], [44.4, 789.0], [44.5, 789.0], [44.6, 789.0], [44.7, 790.0], [44.8, 790.0], [44.9, 791.0], [45.0, 791.0], [45.1, 791.0], [45.2, 792.0], [45.3, 792.0], [45.4, 792.0], [45.5, 792.0], [45.6, 794.0], [45.7, 795.0], [45.8, 795.0], [45.9, 795.0], [46.0, 795.0], [46.1, 798.0], [46.2, 799.0], [46.3, 799.0], [46.4, 801.0], [46.5, 801.0], [46.6, 801.0], [46.7, 803.0], [46.8, 803.0], [46.9, 803.0], [47.0, 803.0], [47.1, 803.0], [47.2, 803.0], [47.3, 803.0], [47.4, 804.0], [47.5, 804.0], [47.6, 806.0], [47.7, 809.0], [47.8, 809.0], [47.9, 815.0], [48.0, 818.0], [48.1, 818.0], [48.2, 820.0], [48.3, 820.0], [48.4, 822.0], [48.5, 822.0], [48.6, 822.0], [48.7, 822.0], [48.8, 822.0], [48.9, 823.0], [49.0, 825.0], [49.1, 825.0], [49.2, 825.0], [49.3, 825.0], [49.4, 826.0], [49.5, 828.0], [49.6, 828.0], [49.7, 828.0], [49.8, 828.0], [49.9, 829.0], [50.0, 830.0], [50.1, 830.0], [50.2, 833.0], [50.3, 833.0], [50.4, 833.0], [50.5, 833.0], [50.6, 833.0], [50.7, 833.0], [50.8, 833.0], [50.9, 835.0], [51.0, 835.0], [51.1, 835.0], [51.2, 836.0], [51.3, 836.0], [51.4, 836.0], [51.5, 837.0], [51.6, 837.0], [51.7, 837.0], [51.8, 837.0], [51.9, 838.0], [52.0, 840.0], [52.1, 840.0], [52.2, 841.0], [52.3, 841.0], [52.4, 841.0], [52.5, 841.0], [52.6, 841.0], [52.7, 845.0], [52.8, 845.0], [52.9, 846.0], [53.0, 848.0], [53.1, 848.0], [53.2, 848.0], [53.3, 848.0], [53.4, 856.0], [53.5, 856.0], [53.6, 856.0], [53.7, 861.0], [53.8, 861.0], [53.9, 861.0], [54.0, 863.0], [54.1, 863.0], [54.2, 866.0], [54.3, 866.0], [54.4, 868.0], [54.5, 869.0], [54.6, 869.0], [54.7, 871.0], [54.8, 871.0], [54.9, 878.0], [55.0, 878.0], [55.1, 878.0], [55.2, 884.0], [55.3, 884.0], [55.4, 890.0], [55.5, 891.0], [55.6, 891.0], [55.7, 894.0], [55.8, 894.0], [55.9, 895.0], [56.0, 900.0], [56.1, 900.0], [56.2, 900.0], [56.3, 900.0], [56.4, 910.0], [56.5, 919.0], [56.6, 919.0], [56.7, 921.0], [56.8, 921.0], [56.9, 933.0], [57.0, 936.0], [57.1, 936.0], [57.2, 937.0], [57.3, 937.0], [57.4, 940.0], [57.5, 943.0], [57.6, 943.0], [57.7, 945.0], [57.8, 945.0], [57.9, 946.0], [58.0, 949.0], [58.1, 949.0], [58.2, 953.0], [58.3, 953.0], [58.4, 953.0], [58.5, 955.0], [58.6, 955.0], [58.7, 955.0], [58.8, 955.0], [58.9, 956.0], [59.0, 962.0], [59.1, 962.0], [59.2, 967.0], [59.3, 967.0], [59.4, 971.0], [59.5, 971.0], [59.6, 971.0], [59.7, 972.0], [59.8, 972.0], [59.9, 976.0], [60.0, 979.0], [60.1, 979.0], [60.2, 981.0], [60.3, 981.0], [60.4, 985.0], [60.5, 986.0], [60.6, 986.0], [60.7, 987.0], [60.8, 987.0], [60.9, 991.0], [61.0, 993.0], [61.1, 993.0], [61.2, 994.0], [61.3, 994.0], [61.4, 996.0], [61.5, 997.0], [61.6, 997.0], [61.7, 999.0], [61.8, 999.0], [61.9, 999.0], [62.0, 999.0], [62.1, 999.0], [62.2, 999.0], [62.3, 999.0], [62.4, 1000.0], [62.5, 1001.0], [62.6, 1001.0], [62.7, 1002.0], [62.8, 1002.0], [62.9, 1003.0], [63.0, 1005.0], [63.1, 1005.0], [63.2, 1006.0], [63.3, 1006.0], [63.4, 1008.0], [63.5, 1008.0], [63.6, 1008.0], [63.7, 1009.0], [63.8, 1009.0], [63.9, 1010.0], [64.0, 1012.0], [64.1, 1012.0], [64.2, 1012.0], [64.3, 1012.0], [64.4, 1013.0], [64.5, 1014.0], [64.6, 1014.0], [64.7, 1014.0], [64.8, 1014.0], [64.9, 1015.0], [65.0, 1015.0], [65.1, 1015.0], [65.2, 1015.0], [65.3, 1015.0], [65.4, 1016.0], [65.5, 1017.0], [65.6, 1017.0], [65.7, 1020.0], [65.8, 1020.0], [65.9, 1021.0], [66.0, 1023.0], [66.1, 1023.0], [66.2, 1024.0], [66.3, 1024.0], [66.4, 1024.0], [66.5, 1025.0], [66.6, 1025.0], [66.7, 1026.0], [66.8, 1026.0], [66.9, 1027.0], [67.0, 1027.0], [67.1, 1027.0], [67.2, 1027.0], [67.3, 1027.0], [67.4, 1028.0], [67.5, 1029.0], [67.6, 1029.0], [67.7, 1029.0], [67.8, 1029.0], [67.9, 1030.0], [68.0, 1030.0], [68.1, 1030.0], [68.2, 1031.0], [68.3, 1031.0], [68.4, 1031.0], [68.5, 1031.0], [68.6, 1031.0], [68.7, 1032.0], [68.8, 1032.0], [68.9, 1032.0], [69.0, 1033.0], [69.1, 1033.0], [69.2, 1033.0], [69.3, 1033.0], [69.4, 1036.0], [69.5, 1036.0], [69.6, 1036.0], [69.7, 1037.0], [69.8, 1037.0], [69.9, 1037.0], [70.0, 1037.0], [70.1, 1037.0], [70.2, 1038.0], [70.3, 1038.0], [70.4, 1039.0], [70.5, 1041.0], [70.6, 1041.0], [70.7, 1042.0], [70.8, 1042.0], [70.9, 1043.0], [71.0, 1043.0], [71.1, 1043.0], [71.2, 1043.0], [71.3, 1043.0], [71.4, 1046.0], [71.5, 1046.0], [71.6, 1046.0], [71.7, 1046.0], [71.8, 1046.0], [71.9, 1046.0], [72.0, 1047.0], [72.1, 1047.0], [72.2, 1047.0], [72.3, 1047.0], [72.4, 1049.0], [72.5, 1053.0], [72.6, 1053.0], [72.7, 1054.0], [72.8, 1054.0], [72.9, 1055.0], [73.0, 1057.0], [73.1, 1057.0], [73.2, 1057.0], [73.3, 1057.0], [73.4, 1058.0], [73.5, 1059.0], [73.6, 1059.0], [73.7, 1060.0], [73.8, 1060.0], [73.9, 1062.0], [74.0, 1067.0], [74.1, 1067.0], [74.2, 1068.0], [74.3, 1068.0], [74.4, 1069.0], [74.5, 1072.0], [74.6, 1072.0], [74.7, 1074.0], [74.8, 1074.0], [74.9, 1082.0], [75.0, 1084.0], [75.1, 1084.0], [75.2, 1086.0], [75.3, 1086.0], [75.4, 1086.0], [75.5, 1096.0], [75.6, 1096.0], [75.7, 1097.0], [75.8, 1097.0], [75.9, 1103.0], [76.0, 1108.0], [76.1, 1108.0], [76.2, 1115.0], [76.3, 1115.0], [76.4, 1117.0], [76.5, 1117.0], [76.6, 1119.0], [76.7, 1126.0], [76.8, 1126.0], [76.9, 1129.0], [77.0, 1129.0], [77.1, 1136.0], [77.2, 1137.0], [77.3, 1137.0], [77.4, 1139.0], [77.5, 1139.0], [77.6, 1141.0], [77.7, 1145.0], [77.8, 1145.0], [77.9, 1146.0], [78.0, 1146.0], [78.1, 1148.0], [78.2, 1149.0], [78.3, 1149.0], [78.4, 1152.0], [78.5, 1152.0], [78.6, 1159.0], [78.7, 1162.0], [78.8, 1162.0], [78.9, 1163.0], [79.0, 1163.0], [79.1, 1168.0], [79.2, 1171.0], [79.3, 1171.0], [79.4, 1171.0], [79.5, 1171.0], [79.6, 1174.0], [79.7, 1175.0], [79.8, 1175.0], [79.9, 1181.0], [80.0, 1181.0], [80.1, 1181.0], [80.2, 1182.0], [80.3, 1182.0], [80.4, 1182.0], [80.5, 1182.0], [80.6, 1184.0], [80.7, 1189.0], [80.8, 1189.0], [80.9, 1190.0], [81.0, 1190.0], [81.1, 1190.0], [81.2, 1192.0], [81.3, 1192.0], [81.4, 1193.0], [81.5, 1193.0], [81.6, 1194.0], [81.7, 1194.0], [81.8, 1194.0], [81.9, 1195.0], [82.0, 1195.0], [82.1, 1197.0], [82.2, 1198.0], [82.3, 1198.0], [82.4, 1198.0], [82.5, 1198.0], [82.6, 1198.0], [82.7, 1199.0], [82.8, 1199.0], [82.9, 1199.0], [83.0, 1199.0], [83.1, 1202.0], [83.2, 1204.0], [83.3, 1204.0], [83.4, 1206.0], [83.5, 1206.0], [83.6, 1206.0], [83.7, 1206.0], [83.8, 1206.0], [83.9, 1206.0], [84.0, 1206.0], [84.1, 1208.0], [84.2, 1210.0], [84.3, 1210.0], [84.4, 1211.0], [84.5, 1211.0], [84.6, 1212.0], [84.7, 1213.0], [84.8, 1213.0], [84.9, 1213.0], [85.0, 1213.0], [85.1, 1214.0], [85.2, 1215.0], [85.3, 1215.0], [85.4, 1216.0], [85.5, 1216.0], [85.6, 1216.0], [85.7, 1216.0], [85.8, 1216.0], [85.9, 1216.0], [86.0, 1216.0], [86.1, 1217.0], [86.2, 1217.0], [86.3, 1217.0], [86.4, 1221.0], [86.5, 1221.0], [86.6, 1222.0], [86.7, 1224.0], [86.8, 1224.0], [86.9, 1225.0], [87.0, 1225.0], [87.1, 1227.0], [87.2, 1231.0], [87.3, 1231.0], [87.4, 1233.0], [87.5, 1233.0], [87.6, 1237.0], [87.7, 1239.0], [87.8, 1239.0], [87.9, 1240.0], [88.0, 1240.0], [88.1, 1241.0], [88.2, 1246.0], [88.3, 1246.0], [88.4, 1249.0], [88.5, 1249.0], [88.6, 1256.0], [88.7, 1257.0], [88.8, 1257.0], [88.9, 1262.0], [89.0, 1262.0], [89.1, 1262.0], [89.2, 1269.0], [89.3, 1269.0], [89.4, 1276.0], [89.5, 1276.0], [89.6, 1285.0], [89.7, 1294.0], [89.8, 1294.0], [89.9, 1297.0], [90.0, 1297.0], [90.1, 1300.0], [90.2, 1302.0], [90.3, 1302.0], [90.4, 1308.0], [90.5, 1308.0], [90.6, 1312.0], [90.7, 1313.0], [90.8, 1313.0], [90.9, 1329.0], [91.0, 1329.0], [91.1, 1339.0], [91.2, 1340.0], [91.3, 1340.0], [91.4, 1340.0], [91.5, 1340.0], [91.6, 1343.0], [91.7, 1344.0], [91.8, 1344.0], [91.9, 1347.0], [92.0, 1347.0], [92.1, 1349.0], [92.2, 1349.0], [92.3, 1349.0], [92.4, 1350.0], [92.5, 1350.0], [92.6, 1353.0], [92.7, 1353.0], [92.8, 1353.0], [92.9, 1356.0], [93.0, 1356.0], [93.1, 1356.0], [93.2, 1357.0], [93.3, 1357.0], [93.4, 1359.0], [93.5, 1359.0], [93.6, 1359.0], [93.7, 1360.0], [93.8, 1360.0], [93.9, 1362.0], [94.0, 1362.0], [94.1, 1364.0], [94.2, 1366.0], [94.3, 1366.0], [94.4, 1366.0], [94.5, 1366.0], [94.6, 1367.0], [94.7, 1369.0], [94.8, 1369.0], [94.9, 1369.0], [95.0, 1369.0], [95.1, 1370.0], [95.2, 1371.0], [95.3, 1371.0], [95.4, 1373.0], [95.5, 1373.0], [95.6, 1376.0], [95.7, 1381.0], [95.8, 1381.0], [95.9, 1382.0], [96.0, 1382.0], [96.1, 1385.0], [96.2, 1386.0], [96.3, 1386.0], [96.4, 1387.0], [96.5, 1387.0], [96.6, 1387.0], [96.7, 1387.0], [96.8, 1387.0], [96.9, 1389.0], [97.0, 1389.0], [97.1, 1398.0], [97.2, 1401.0], [97.3, 1401.0], [97.4, 1410.0], [97.5, 1410.0], [97.6, 1412.0], [97.7, 1417.0], [97.8, 1417.0], [97.9, 1419.0], [98.0, 1419.0], [98.1, 1433.0], [98.2, 1435.0], [98.3, 1435.0], [98.4, 1458.0], [98.5, 1458.0], [98.6, 1472.0], [98.7, 1472.0], [98.8, 1472.0], [98.9, 1485.0], [99.0, 1485.0], [99.1, 1487.0], [99.2, 1491.0], [99.3, 1491.0], [99.4, 1493.0], [99.5, 1493.0], [99.6, 1551.0], [99.7, 1577.0], [99.8, 1577.0], [99.9, 1588.0], [100.0, 1588.0]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 334.0, "series": [{"data": [[0.0, 220.0], [300.0, 41.0], [100.0, 216.0], [200.0, 123.0]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[0.0, 281.0], [300.0, 22.0], [100.0, 215.0], [200.0, 63.0], [400.0, 19.0]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[0.0, 334.0], [300.0, 6.0], [100.0, 229.0], [200.0, 31.0]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[1100.0, 43.0], [1200.0, 42.0], [600.0, 150.0], [1300.0, 43.0], [700.0, 108.0], [1400.0, 14.0], [1500.0, 3.0], [800.0, 58.0], [900.0, 38.0], [1000.0, 81.0], [500.0, 20.0]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1800.0, "series": [{"data": [[0.0, 1800.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 597.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 76.84000000000012, "minX": 1.69374576E12, "maxY": 301.10333333333324, "series": [{"data": [[1.69374576E12, 301.10333333333324]], "isOverall": false, "label": "Thread Group for booking service", "isController": false}, {"data": [[1.69374576E12, 76.84000000000012]], "isOverall": false, "label": "Thread Group for doctor service", "isController": false}, {"data": [[1.69374576E12, 121.7116666666667]], "isOverall": false, "label": "Thread Group for payment service", "isController": false}, {"data": [[1.69374576E12, 100.32500000000007]], "isOverall": false, "label": "Thread Group for patient service", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69374576E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.5, "minX": 2.0, "maxY": 1577.0, "series": [{"data": [[350.0, 68.5], [348.0, 71.5], [346.0, 74.0], [345.0, 78.0], [367.0, 92.0], [366.0, 73.0], [364.0, 80.0], [354.0, 86.0], [353.0, 61.0], [382.0, 64.0], [371.0, 36.0], [370.0, 83.0], [383.0, 75.0], [381.0, 52.0], [380.0, 57.0], [379.0, 63.0], [378.0, 70.0], [376.0, 74.0], [374.0, 65.5], [373.0, 79.0], [372.0, 81.0], [397.0, 73.5], [398.0, 110.33333333333333], [396.0, 96.5], [387.0, 70.0], [392.0, 72.5], [390.0, 76.5], [388.0, 77.8], [389.0, 91.5], [395.0, 77.5], [394.0, 102.0], [393.0, 137.0], [399.0, 68.0], [400.0, 100.25], [405.0, 90.0], [408.0, 158.0], [413.0, 62.0], [412.0, 61.0], [409.0, 53.0], [406.0, 58.0], [404.0, 64.5], [403.0, 78.0], [401.0, 52.0], [418.0, 43.0], [430.0, 97.66666666666667], [428.0, 50.5], [427.0, 42.0], [425.0, 48.0], [424.0, 37.0], [423.0, 38.0], [422.0, 64.5], [420.0, 299.0], [417.0, 61.0], [416.0, 114.33333333333334], [435.0, 47.0], [447.0, 73.0], [446.0, 333.0], [445.0, 254.0], [440.0, 31.0], [438.0, 39.0], [436.0, 37.0], [434.0, 45.0], [433.0, 50.0], [432.0, 201.0], [449.0, 63.0], [462.0, 163.5], [458.0, 42.5], [454.0, 200.5], [451.0, 354.0], [448.0, 364.0], [477.0, 346.0], [476.0, 105.0], [479.0, 354.0], [474.0, 324.0], [472.0, 325.0], [470.0, 173.0], [469.0, 351.0], [466.0, 41.0], [465.0, 21.0], [494.0, 200.33333333333334], [488.0, 147.8], [485.0, 176.0], [489.0, 143.5], [490.0, 154.66666666666669], [491.0, 212.0], [495.0, 82.0], [487.0, 197.0], [481.0, 288.5], [483.0, 204.0], [482.0, 284.0], [486.0, 32.0], [496.0, 155.0], [502.0, 81.0], [508.0, 318.0], [499.0, 336.0], [497.0, 245.5], [507.0, 315.0], [505.0, 235.0], [504.0, 282.5], [503.0, 249.0], [501.0, 329.0], [500.0, 283.0], [536.0, 87.5], [517.0, 218.0], [512.0, 117.0], [518.0, 128.25], [516.0, 157.6], [515.0, 22.25], [514.0, 22.0], [520.0, 116.0], [522.0, 311.0], [534.0, 101.0], [533.0, 202.0], [532.0, 298.5], [530.0, 303.0], [528.0, 265.0], [535.0, 134.0], [539.0, 229.33333333333334], [542.0, 188.5], [537.0, 110.5], [538.0, 177.0], [573.0, 259.0], [557.0, 148.0], [556.0, 318.0], [553.0, 288.0], [552.0, 222.0], [558.0, 307.0], [563.0, 154.25], [564.0, 132.0], [566.0, 303.0], [569.0, 211.0], [574.0, 135.5], [560.0, 135.0], [568.0, 168.5], [550.0, 151.0], [548.0, 302.0], [546.0, 233.0], [544.0, 301.0], [559.0, 279.0], [571.0, 315.0], [570.0, 242.5], [598.0, 270.0], [594.0, 268.5], [595.0, 287.0], [576.0, 209.0], [633.0, 261.5], [626.0, 74.0], [608.0, 82.0], [628.0, 159.66666666666666], [639.0, 286.0], [634.0, 304.0], [625.0, 284.0], [621.0, 156.0], [614.0, 297.0], [612.0, 287.0], [669.0, 268.0], [670.0, 240.5], [668.0, 227.0], [666.0, 238.8], [664.0, 209.5], [645.0, 285.5], [646.0, 300.0], [661.0, 269.0], [656.0, 276.0], [657.0, 201.0], [653.0, 274.0], [651.0, 283.0], [649.0, 274.0], [690.0, 152.16666666666666], [695.0, 192.0], [694.0, 253.0], [693.0, 131.5], [691.0, 171.8], [689.0, 154.0], [703.0, 238.0], [701.0, 198.0], [692.0, 175.0], [685.0, 118.75], [684.0, 149.6], [682.0, 282.0], [680.0, 197.66666666666666], [678.0, 115.0], [686.0, 221.66666666666666], [672.0, 174.5], [675.0, 241.0], [674.0, 289.0], [697.0, 262.0], [679.0, 114.0], [699.0, 229.0], [698.0, 236.0], [700.0, 205.0], [732.0, 177.0], [704.0, 181.66666666666666], [706.0, 113.0], [705.0, 268.0], [709.0, 183.0], [719.0, 206.0], [718.0, 190.5], [716.0, 270.0], [714.0, 234.0], [713.0, 149.0], [712.0, 233.0], [735.0, 191.0], [720.0, 287.0], [721.0, 212.25], [722.0, 117.0], [728.0, 263.0], [711.0, 264.5], [726.0, 168.0], [725.0, 169.0], [723.0, 268.0], [724.0, 247.0], [762.0, 157.0], [760.0, 174.0], [742.0, 182.0], [739.0, 177.0], [737.0, 173.0], [757.0, 159.0], [755.0, 174.0], [753.0, 175.0], [752.0, 171.0], [750.0, 170.0], [749.0, 172.0], [745.0, 184.0], [771.0, 166.0], [769.0, 123.33333333333333], [774.0, 166.0], [773.0, 174.2], [775.0, 170.0], [793.0, 13.0], [798.0, 199.0], [797.0, 46.5], [796.0, 14.0], [794.0, 176.5], [768.0, 173.0], [782.0, 212.0], [777.0, 157.0], [779.0, 175.0], [781.0, 13.0], [780.0, 144.0], [776.0, 192.66666666666666], [783.0, 134.16666666666666], [784.0, 173.0], [785.0, 23.0], [787.0, 127.0], [791.0, 68.0], [788.0, 14.0], [825.0, 81.0], [812.0, 91.0], [804.0, 219.0], [814.0, 132.66666666666666], [813.0, 181.5], [801.0, 204.5], [800.0, 193.0], [802.0, 161.0], [808.0, 126.33333333333333], [811.0, 142.0], [810.0, 57.2], [809.0, 76.25], [807.0, 55.0], [816.0, 105.0], [831.0, 144.85714285714286], [828.0, 147.0], [830.0, 79.2], [829.0, 155.5], [826.0, 151.8], [827.0, 139.0], [819.0, 84.75], [818.0, 199.0], [817.0, 146.75], [824.0, 107.66666666666667], [820.0, 149.66666666666666], [823.0, 179.33333333333334], [821.0, 145.8], [822.0, 132.5], [836.0, 99.16666666666666], [850.0, 129.4], [849.0, 52.0], [851.0, 59.0], [843.0, 108.33333333333333], [848.0, 64.83333333333334], [838.0, 127.5], [837.0, 75.5], [839.0, 79.0], [835.0, 101.0], [834.0, 128.0], [832.0, 96.0], [847.0, 48.333333333333336], [846.0, 66.8], [845.0, 86.66666666666667], [842.0, 131.0], [841.0, 141.5]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[635.0116666666669, 151.47500000000008]], "isOverall": false, "label": "payment-request-Aggregated", "isController": false}, {"data": [[145.0, 104.0], [172.0, 116.0], [173.0, 138.0], [174.0, 123.5], [179.0, 119.5], [180.0, 104.0], [207.0, 225.0], [215.0, 163.5], [213.0, 260.0], [212.0, 134.0], [209.0, 174.0], [210.0, 258.3333333333333], [218.0, 192.85999999999999], [217.0, 252.5], [219.0, 280.0], [216.0, 274.0], [230.0, 268.0], [237.0, 135.0], [238.0, 171.0], [239.0, 206.5], [240.0, 166.0], [251.0, 219.0], [253.0, 158.0], [252.0, 191.0], [249.0, 212.0], [269.0, 277.4], [271.0, 245.5], [263.0, 42.0], [265.0, 52.333333333333336], [262.0, 140.0], [264.0, 207.0], [266.0, 236.75], [270.0, 315.0], [267.0, 233.33333333333334], [272.0, 224.0], [277.0, 270.5], [280.0, 227.0], [279.0, 215.0], [274.0, 251.5], [295.0, 321.0], [300.0, 172.0], [301.0, 109.0], [303.0, 73.0], [311.0, 75.0], [313.0, 78.0], [314.0, 202.16666666666669], [315.0, 179.75], [318.0, 303.6666666666667], [317.0, 167.66666666666666], [316.0, 152.77777777777777], [319.0, 167.33333333333334], [335.0, 97.0], [320.0, 339.3333333333333], [321.0, 335.5], [334.0, 127.0], [331.0, 163.5], [330.0, 178.0], [329.0, 151.0], [328.0, 157.0], [325.0, 159.0], [324.0, 122.4], [337.0, 230.37500000000003], [343.0, 184.33333333333334], [342.0, 223.2857142857143], [344.0, 235.72727272727278], [347.0, 116.0], [346.0, 149.0], [345.0, 10.0], [348.0, 129.66666666666666], [350.0, 172.0], [341.0, 194.5], [336.0, 448.6666666666667], [338.0, 314.0], [340.0, 264.8], [339.0, 212.66666666666669], [361.0, 13.0], [366.0, 19.0], [367.0, 17.25], [365.0, 35.0], [363.0, 24.0], [375.0, 30.0], [373.0, 34.0], [372.0, 29.0], [382.0, 95.625], [383.0, 102.5], [380.0, 101.0], [396.0, 51.5], [399.0, 31.25], [395.0, 41.333333333333336], [394.0, 102.0], [397.0, 31.25], [398.0, 15.2], [391.0, 52.8], [385.0, 87.0], [384.0, 95.0], [386.0, 86.5], [387.0, 82.75], [390.0, 112.66666666666667], [392.0, 61.44444444444444], [393.0, 47.5], [389.0, 88.0], [388.0, 83.2], [402.0, 55.0], [404.0, 15.0], [406.0, 15.0], [420.0, 40.0], [447.0, 18.0], [446.0, 13.0], [449.0, 16.0], [450.0, 13.0], [451.0, 14.0], [452.0, 15.0], [470.0, 25.0], [477.0, 35.0], [485.0, 17.0], [490.0, 26.0], [489.0, 18.5], [488.0, 23.5], [487.0, 21.75], [495.0, 4.666666666666667], [491.0, 5.0], [496.0, 5.0], [502.0, 8.0], [508.0, 7.0], [507.0, 9.0], [513.0, 68.0], [512.0, 68.0], [518.0, 54.44444444444445], [536.0, 9.5], [539.0, 12.0], [541.0, 10.0], [543.0, 13.0], [514.0, 71.0], [515.0, 19.0], [517.0, 73.0], [524.0, 100.0], [525.0, 37.5], [527.0, 54.33333333333333], [528.0, 78.0], [529.0, 76.0], [571.0, 86.0], [563.0, 106.0], [557.0, 91.0], [552.0, 20.0], [553.0, 14.0], [564.0, 95.0], [567.0, 37.33333333333333], [572.0, 88.0], [562.0, 5.0], [560.0, 6.5], [544.0, 18.0], [599.0, 36.0], [602.0, 40.0], [603.0, 40.333333333333336], [601.0, 41.0], [606.0, 36.0], [604.0, 40.0], [605.0, 47.0], [618.0, 56.0], [652.0, 116.5], [644.0, 122.0], [649.0, 88.0], [650.0, 121.0], [651.0, 96.66666666666667], [655.0, 139.0], [653.0, 102.0], [648.0, 115.0], [647.0, 104.0], [689.0, 162.75], [695.0, 114.0], [690.0, 149.27272727272728], [691.0, 142.75], [692.0, 143.6], [687.0, 138.0], [684.0, 131.66666666666666], [685.0, 140.8], [683.0, 145.0], [680.0, 160.0], [681.0, 132.0], [678.0, 132.0], [688.0, 165.33333333333334], [696.0, 114.0], [705.0, 175.0], [707.0, 173.0], [745.0, 174.0], [749.0, 146.0], [750.0, 174.0], [760.0, 6.333333333333333], [762.0, 7.0], [763.0, 8.0], [769.0, 7.666666666666667], [768.0, 8.0], [773.0, 11.4], [775.0, 8.0], [793.0, 154.0], [794.0, 150.0], [795.0, 158.0], [799.0, 208.0], [797.0, 188.0], [796.0, 224.0], [784.0, 19.0], [785.0, 22.0], [790.0, 27.0], [791.0, 204.0], [772.0, 11.0], [778.0, 11.0], [777.0, 13.0], [776.0, 15.0], [779.0, 72.33333333333333], [782.0, 9.0], [780.0, 159.0], [783.0, 12.166666666666668], [826.0, 148.5], [805.0, 27.5], [804.0, 21.0], [815.0, 211.0], [812.0, 132.0], [803.0, 180.0], [807.0, 40.25], [806.0, 202.0], [810.0, 30.5], [811.0, 126.0], [809.0, 48.75], [808.0, 55.5], [824.0, 67.0], [823.0, 68.5], [821.0, 108.0], [820.0, 86.0], [819.0, 77.0], [818.0, 74.0], [817.0, 192.25], [816.0, 142.5], [830.0, 175.0], [829.0, 194.0], [828.0, 141.0], [827.0, 133.0], [825.0, 198.0], [850.0, 139.66666666666666], [849.0, 143.66666666666666], [840.0, 142.5], [846.0, 167.0], [845.0, 136.0]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[473.71500000000003, 124.72833333333331]], "isOverall": false, "label": "patient-request-Aggregated", "isController": false}, {"data": [[198.0, 82.0], [205.0, 100.0], [215.0, 151.0], [213.0, 134.0], [210.0, 198.0], [218.0, 122.93333333333331], [219.0, 175.0], [236.0, 18.0], [237.0, 21.0], [269.0, 51.0], [280.0, 170.0], [272.0, 44.0], [305.0, 58.0], [313.0, 75.0], [314.0, 103.16666666666667], [317.0, 107.33333333333334], [316.0, 105.5], [318.0, 137.0], [319.0, 109.0], [315.0, 6.5], [321.0, 116.66666666666667], [320.0, 87.0], [335.0, 125.0], [334.0, 122.5], [330.0, 164.0], [326.0, 84.0], [324.0, 90.0], [322.0, 17.0], [323.0, 13.0], [338.0, 86.5], [342.0, 103.11111111111111], [344.0, 51.93333333333334], [337.0, 61.0], [339.0, 77.75], [340.0, 106.125], [341.0, 37.666666666666664], [343.0, 46.38461538461539], [350.0, 144.66666666666666], [358.0, 8.0], [366.0, 19.0], [367.0, 39.0], [362.0, 15.0], [368.0, 15.0], [376.0, 29.0], [382.0, 98.5], [379.0, 98.0], [383.0, 36.5], [399.0, 55.0], [397.0, 40.14285714285714], [396.0, 28.88888888888889], [395.0, 48.111111111111114], [398.0, 27.2], [394.0, 18.0], [393.0, 13.5], [392.0, 35.5], [388.0, 60.111111111111114], [389.0, 69.0], [390.0, 57.5], [391.0, 93.0], [386.0, 49.33333333333333], [385.0, 67.25], [384.0, 22.0], [387.0, 73.83333333333333], [401.0, 81.6], [400.0, 81.5], [402.0, 72.0], [403.0, 54.0], [405.0, 74.0], [407.0, 13.0], [429.0, 3.5], [430.0, 7.0], [447.0, 12.0], [445.0, 11.0], [449.0, 11.0], [456.0, 15.0], [455.0, 16.0], [477.0, 10.0], [484.0, 35.0], [486.0, 20.5], [490.0, 21.0], [508.0, 6.0], [516.0, 76.5], [513.0, 72.0], [512.0, 75.0], [515.0, 42.25], [517.0, 81.5], [518.0, 71.39999999999998], [525.0, 70.0], [526.0, 6.0], [520.0, 74.0], [522.0, 6.0], [527.0, 72.0], [528.0, 93.5], [540.0, 10.0], [538.0, 147.5], [536.0, 72.0], [537.0, 63.66666666666667], [531.0, 96.0], [534.0, 91.0], [557.0, 104.0], [562.0, 106.0], [563.0, 94.8], [553.0, 14.0], [568.0, 167.5], [601.0, 39.0], [578.0, 21.0], [584.0, 250.0], [587.0, 284.0], [590.0, 304.5], [589.0, 309.0], [599.0, 37.0], [600.0, 168.0], [602.0, 42.0], [607.0, 39.0], [603.0, 46.0], [605.0, 298.0], [609.0, 48.0], [608.0, 47.0], [611.0, 61.0], [610.0, 285.0], [613.0, 292.0], [617.0, 53.0], [616.0, 55.0], [618.0, 55.0], [619.0, 296.0], [627.0, 61.0], [631.0, 115.0], [628.0, 272.0], [636.0, 272.0], [633.0, 268.0], [641.0, 74.0], [645.0, 90.0], [652.0, 6.0], [653.0, 85.5], [654.0, 103.5], [655.0, 186.0], [644.0, 8.0], [669.0, 262.0], [657.0, 280.6666666666667], [667.0, 294.0], [666.0, 273.5], [689.0, 166.83333333333331], [695.0, 124.4], [694.0, 153.0], [693.0, 172.0], [692.0, 146.4], [691.0, 135.33333333333334], [690.0, 144.5], [685.0, 198.33333333333334], [686.0, 133.0], [684.0, 131.0], [680.0, 116.0], [681.0, 205.5], [683.0, 284.0], [682.0, 283.0], [679.0, 126.0], [696.0, 146.75], [697.0, 138.8], [700.0, 144.33333333333334], [701.0, 164.0], [702.0, 157.0], [699.0, 131.0], [714.0, 143.66666666666666], [723.0, 261.0], [766.0, 162.0], [764.0, 170.0], [763.0, 169.0], [762.0, 166.0], [759.0, 151.0], [755.0, 146.0], [752.0, 168.0], [748.0, 144.0], [773.0, 14.0], [772.0, 8.0], [782.0, 146.0], [774.0, 10.0], [778.0, 5.0], [781.0, 132.66666666666666], [784.0, 56.333333333333336], [776.0, 15.0], [775.0, 14.0], [797.0, 165.5], [794.0, 135.0], [803.0, 105.33333333333333], [800.0, 23.0], [814.0, 140.0], [804.0, 28.0], [806.0, 26.0], [807.0, 52.0], [826.0, 90.25], [827.0, 62.5], [825.0, 143.0], [829.0, 85.63636363636363], [830.0, 110.66666666666667], [828.0, 76.8], [816.0, 143.0], [819.0, 125.0], [817.0, 136.66666666666666], [821.0, 141.0], [820.0, 157.6], [823.0, 50.333333333333336], [822.0, 81.0], [809.0, 23.333333333333332], [808.0, 31.5], [810.0, 54.5], [811.0, 138.0], [813.0, 89.66666666666667], [837.0, 96.0], [845.0, 112.25], [849.0, 85.0], [848.0, 44.0], [838.0, 84.66666666666667], [839.0, 101.66666666666667], [850.0, 19.0], [851.0, 37.0], [843.0, 125.14285714285714], [847.0, 169.5], [841.0, 94.4], [842.0, 56.0], [836.0, 90.25], [835.0, 82.5], [833.0, 95.5], [834.0, 100.0], [832.0, 140.5], [844.0, 9.0]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[535.6283333333328, 94.45499999999987]], "isOverall": false, "label": "doctor-request-Aggregated", "isController": false}, {"data": [[2.0, 651.0], [3.0, 662.0], [6.0, 660.0], [8.0, 633.0], [9.0, 660.0], [13.0, 639.0], [15.0, 631.0], [16.0, 646.0], [17.0, 646.0], [18.0, 642.0], [20.0, 644.3333333333334], [21.0, 629.0], [23.0, 634.5], [25.0, 622.5], [27.0, 643.0], [29.0, 656.0], [31.0, 626.5], [33.0, 645.0], [32.0, 652.0], [37.0, 635.5], [39.0, 625.0], [41.0, 638.5], [40.0, 612.0], [43.0, 646.0], [42.0, 652.0], [44.0, 657.0], [47.0, 625.5], [46.0, 649.0], [49.0, 673.0], [48.0, 636.0], [51.0, 607.0], [52.0, 651.0], [55.0, 647.0], [54.0, 632.0], [56.0, 616.0], [58.0, 630.0], [60.0, 614.0], [63.0, 622.5], [62.0, 601.0], [67.0, 603.0], [66.0, 654.0], [65.0, 616.0], [64.0, 591.0], [70.0, 633.0], [68.0, 605.0], [75.0, 620.5], [73.0, 651.0], [72.0, 611.5], [79.0, 640.5], [77.0, 598.0], [76.0, 670.0], [83.0, 613.0], [82.0, 626.0], [81.0, 637.5], [87.0, 699.0], [86.0, 647.0], [85.0, 799.0], [90.0, 664.0], [89.0, 624.0], [88.0, 791.0], [94.0, 617.0], [93.0, 658.3333333333334], [99.0, 618.0], [98.0, 575.0], [97.0, 621.6666666666666], [101.0, 615.0], [107.0, 634.0], [105.0, 788.0], [104.0, 614.75], [111.0, 614.0], [109.0, 749.5], [114.0, 635.0], [113.0, 916.5], [119.0, 654.0], [118.0, 804.0], [117.0, 624.5], [116.0, 611.0], [123.0, 611.0], [122.0, 739.6666666666666], [127.0, 578.0], [126.0, 776.0], [125.0, 706.5], [135.0, 647.0], [134.0, 575.0], [133.0, 683.0], [130.0, 777.0], [129.0, 627.0], [143.0, 795.0], [142.0, 600.0], [141.0, 780.5], [139.0, 625.0], [138.0, 645.0], [137.0, 627.0], [136.0, 627.0], [150.0, 826.5], [145.0, 694.0], [159.0, 907.0], [156.0, 1032.0], [155.0, 761.0], [154.0, 787.2857142857143], [167.0, 617.0], [166.0, 704.0], [165.0, 976.0], [162.0, 1224.0], [161.0, 999.0], [160.0, 925.5], [173.0, 787.6666666666666], [170.0, 841.0], [169.0, 787.0], [168.0, 1029.0], [182.0, 898.0], [180.0, 758.0], [179.0, 975.5], [177.0, 771.0], [176.0, 780.5], [191.0, 994.0], [190.0, 869.0], [189.0, 784.0], [188.0, 764.0], [187.0, 838.25], [184.0, 783.0], [197.0, 759.0], [196.0, 762.0], [195.0, 1046.0], [194.0, 1011.0], [192.0, 803.0], [205.0, 761.0], [204.0, 844.5], [203.0, 777.0], [201.0, 721.25], [215.0, 833.0], [214.0, 856.0], [213.0, 774.0], [212.0, 841.0], [211.0, 856.0], [210.0, 769.0], [209.0, 809.0], [208.0, 878.6666666666666], [223.0, 1003.5], [221.0, 986.0], [220.0, 837.0], [219.0, 833.0], [218.0, 1163.5], [216.0, 818.0], [230.0, 808.0], [228.0, 833.0], [227.0, 757.0], [226.0, 829.0], [225.0, 770.0], [224.0, 773.0], [239.0, 1024.0], [238.0, 606.0], [237.0, 1010.0], [235.0, 1053.0], [234.0, 716.0], [233.0, 739.0], [246.0, 700.0], [244.0, 736.0], [242.0, 803.0], [241.0, 890.5], [255.0, 795.0], [254.0, 1057.0], [253.0, 790.0], [252.0, 744.5], [250.0, 744.0], [249.0, 1017.0], [270.0, 787.0], [271.0, 787.0], [269.0, 914.0], [267.0, 748.3333333333334], [264.0, 787.0], [263.0, 734.0], [262.0, 803.0], [261.0, 1187.5], [259.0, 814.5], [257.0, 761.0], [285.0, 702.0], [287.0, 1009.5], [284.0, 1179.0], [283.0, 996.0], [282.0, 977.0], [281.0, 983.0], [277.0, 788.0], [276.0, 1577.0], [275.0, 826.0], [274.0, 907.0], [272.0, 828.0], [302.0, 1174.0], [303.0, 987.0], [301.0, 773.0], [300.0, 775.0], [299.0, 962.0], [298.0, 744.0], [297.0, 956.0], [296.0, 949.0], [295.0, 976.0], [289.0, 686.0], [288.0, 778.0], [291.0, 756.0], [290.0, 774.0], [294.0, 873.5], [292.0, 806.0], [317.0, 895.0], [318.0, 663.0], [316.0, 933.0], [307.0, 940.0], [306.0, 847.0], [315.0, 1149.0], [314.0, 1262.0], [313.0, 715.0], [312.0, 727.0], [311.0, 764.0], [310.0, 661.0], [309.0, 937.0], [308.0, 891.0], [333.0, 910.0], [332.0, 733.0], [323.0, 754.0], [322.0, 717.0], [321.0, 655.6666666666666], [331.0, 1046.0], [330.0, 1046.0], [329.0, 680.0], [328.0, 711.0], [327.0, 1060.0], [326.0, 1472.0], [325.0, 634.0], [324.0, 1136.0], [344.0, 655.0], [343.0, 1472.0], [342.0, 797.3333333333334], [339.0, 682.0], [338.0, 732.0], [337.0, 1458.0], [336.0, 986.3333333333334], [365.0, 768.0], [364.0, 671.0], [362.0, 1300.0], [359.0, 677.5], [358.0, 836.0], [373.0, 900.0], [370.0, 900.0], [368.0, 1032.0], [391.0, 878.0], [411.0, 1019.0], [409.0, 663.0], [407.0, 999.0], [421.0, 579.0], [445.0, 645.0], [444.0, 650.0], [442.0, 628.0], [441.0, 1387.0], [440.0, 681.0], [460.0, 1285.0], [459.0, 621.5], [458.0, 671.0], [452.0, 993.0], [451.0, 928.5], [448.0, 845.0], [477.0, 1347.5], [474.0, 1435.0], [471.0, 599.0], [469.0, 782.0], [464.0, 697.3333333333334], [492.0, 1046.0], [485.0, 971.0], [481.0, 822.0], [510.0, 586.0], [509.0, 1378.0], [507.0, 1394.0], [505.0, 1136.6], [506.0, 1401.0], [504.0, 1078.5], [503.0, 1104.5], [498.0, 822.0], [527.0, 580.0], [541.0, 1367.0], [538.0, 1290.0], [536.0, 760.0], [518.0, 1215.0], [516.0, 1329.6666666666667], [513.0, 998.3333333333334], [526.0, 1014.0], [525.0, 1065.0], [523.0, 1206.0], [522.0, 995.0], [521.0, 1339.0], [520.0, 1219.0], [570.0, 1312.0], [569.0, 1162.0], [567.0, 1108.0], [568.0, 1357.0], [562.0, 1275.5], [561.0, 1360.0], [560.0, 1190.0], [557.0, 1108.0], [544.0, 1385.0], [546.0, 1359.0], [545.0, 1369.0], [551.0, 1491.0], [548.0, 1202.0], [554.0, 1277.5], [552.0, 1251.6666666666667], [603.0, 909.3333333333334], [607.0, 976.0], [600.0, 1208.0], [578.0, 1259.25], [577.0, 1189.5], [599.0, 1308.0], [596.0, 1487.0], [594.0, 1348.3333333333333], [590.0, 1166.5], [588.0, 1159.0], [584.0, 1033.0], [634.0, 1345.0], [639.0, 1199.0], [638.0, 1356.0], [636.0, 1096.0], [633.0, 1300.0], [614.0, 1359.0], [612.0, 1349.0], [610.0, 1063.5], [630.0, 1150.5], [620.0, 1347.0], [619.0, 972.0], [618.0, 1389.0], [617.0, 832.0], [616.0, 1097.0], [670.0, 1103.0], [657.0, 1056.0], [653.0, 1349.0], [646.0, 1243.3333333333333], [641.0, 967.0], [693.0, 708.0], [689.0, 551.0], [685.0, 1340.0], [683.0, 714.0], [681.0, 627.0], [680.0, 953.0], [673.0, 894.0], [731.0, 1062.5], [734.0, 1141.0], [735.0, 1170.5], [732.0, 1086.0], [730.0, 1118.0], [728.0, 1074.0], [727.0, 890.0], [726.0, 1353.0], [716.0, 1168.0], [705.0, 701.0], [704.0, 751.0], [711.0, 783.0], [707.0, 536.0], [764.0, 985.0], [766.0, 1052.0], [760.0, 1237.0], [742.0, 1059.0], [739.0, 1068.0], [737.0, 878.0], [757.0, 1132.0], [756.0, 1055.0], [755.0, 1067.0], [753.0, 1212.3333333333333], [749.0, 1055.0], [747.0, 1120.5], [745.0, 1037.0], [744.0, 1141.0], [798.0, 1119.0], [799.0, 930.5], [786.0, 1216.0], [784.0, 1085.5], [796.0, 963.5], [797.0, 1047.0], [795.0, 1214.0], [793.0, 1112.5], [781.0, 1018.0], [769.0, 1029.0], [768.0, 1105.75], [772.0, 1120.5], [770.0, 1154.0], [775.0, 1143.3333333333333], [774.0, 1093.0], [779.0, 1135.0], [777.0, 1212.0], [790.0, 1213.0], [789.0, 1027.0], [788.0, 1171.5], [787.0, 1217.0], [825.0, 946.0], [824.0, 1129.0], [806.0, 1131.5], [804.0, 1024.0], [803.0, 1139.0], [801.0, 1017.5], [800.0, 1182.0], [823.0, 1015.0], [822.0, 830.0], [821.0, 1015.0], [817.0, 1016.0], [816.0, 1190.0], [815.0, 1101.0], [814.0, 1033.0], [813.0, 1027.0], [812.0, 1206.0], [811.0, 955.0], [810.0, 1064.0], [809.0, 1182.0]], "isOverall": false, "label": "booking-request", "isController": false}, {"data": [[367.5483333333331, 906.5883333333338]], "isOverall": false, "label": "booking-request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 851.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7870.0, "minX": 1.69374576E12, "maxY": 16010.0, "series": [{"data": [[1.69374576E12, 16010.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69374576E12, 7870.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69374576E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 94.45499999999987, "minX": 1.69374576E12, "maxY": 906.5883333333338, "series": [{"data": [[1.69374576E12, 151.47500000000008]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[1.69374576E12, 124.72833333333331]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[1.69374576E12, 94.45499999999987]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[1.69374576E12, 906.5883333333338]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69374576E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 94.07000000000014, "minX": 1.69374576E12, "maxY": 906.0349999999995, "series": [{"data": [[1.69374576E12, 151.2716666666667]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[1.69374576E12, 123.89166666666668]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[1.69374576E12, 94.07000000000014]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[1.69374576E12, 906.0349999999995]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69374576E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.808333333333334, "minX": 1.69374576E12, "maxY": 6.263333333333334, "series": [{"data": [[1.69374576E12, 0.8950000000000009]], "isOverall": false, "label": "payment-request", "isController": false}, {"data": [[1.69374576E12, 6.263333333333334]], "isOverall": false, "label": "patient-request", "isController": false}, {"data": [[1.69374576E12, 1.0966666666666662]], "isOverall": false, "label": "doctor-request", "isController": false}, {"data": [[1.69374576E12, 0.808333333333334]], "isOverall": false, "label": "booking-request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69374576E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.69374576E12, "maxY": 1588.0, "series": [{"data": [[1.69374576E12, 1588.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69374576E12, 978.7000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69374576E12, 1384.9699999999993]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69374576E12, 1181.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69374576E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69374576E12, 147.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69374576E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 97.0, "minX": 455.0, "maxY": 670.0, "series": [{"data": [[648.0, 97.0], [1297.0, 143.0], [455.0, 670.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1297.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 96.0, "minX": 455.0, "maxY": 670.0, "series": [{"data": [[648.0, 96.0], [1297.0, 142.0], [455.0, 670.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1297.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.69374576E12, "maxY": 40.0, "series": [{"data": [[1.69374576E12, 40.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69374576E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.69374576E12, "maxY": 40.0, "series": [{"data": [[1.69374576E12, 40.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69374576E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.69374576E12, "maxY": 10.0, "series": [{"data": [[1.69374576E12, 10.0]], "isOverall": false, "label": "doctor-request-success", "isController": false}, {"data": [[1.69374576E12, 10.0]], "isOverall": false, "label": "payment-request-success", "isController": false}, {"data": [[1.69374576E12, 10.0]], "isOverall": false, "label": "patient-request-success", "isController": false}, {"data": [[1.69374576E12, 10.0]], "isOverall": false, "label": "booking-request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69374576E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.69374576E12, "maxY": 40.0, "series": [{"data": [[1.69374576E12, 40.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69374576E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

